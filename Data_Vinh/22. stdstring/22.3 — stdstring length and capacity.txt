<main id="main" role="main" class="main"><article id="post-400" class="post-400 post type-post status-publish format-standard hentry category-cpp-tutorial" itemscope="" itemtype="http://schema.org/Article" itemprop="mainEntity"><div class="schema-image"></div><div class="article-inner"><header><div class="entry-meta beforetitle-meta"></div><h1 class="entry-title singular-title" itemprop="headline">22.3 — std::string length and capacity</h1><div class="entry-meta aftertitle-meta"><span class="author vcard" itemscope="" itemtype="http://schema.org/Person" itemprop="author"><i class="icon-author icon-metas" title="Author"></i><a class="url fn n" rel="author" href="https://www.learncpp.com/author/Alex/" title="View all posts by Alex" itemprop="url"><em itemprop="name">Alex</em></a></span>
<span class="onDate date"><i class="icon-date icon-metas" title="Date"></i><time class="published" datetime="2009-09-27T10:09:32-07:00" itemprop="datePublished">September 27, 2009, 10:09 am</time>
<time class="updated" datetime="2021-10-28T11:21:58-07:00" itemprop="dateModified">October 28, 2021</time></span></div></header><div class="entry-content" itemprop="articleBody"><div class="code-block code-block-1" style="margin:8px 8px 8px 0;float:left"><div class="cf_monitor" style="margin-right:16px"><span id="ezoic-pub-ad-placeholder-101" style="display:block!important;float:none!important;line-height:0;margin-bottom:15px!important;margin-left:0!important;margin-right:0!important;margin-top:15px!important;max-width:100%!important;min-height:280px;min-width:336px;padding:0;text-align:center!important"><div><span class="ezoic-ad" data-ez-name="learncpp_com-medrectangle-3"><span id="div-gpt-ad-learncpp_com-medrectangle-3-0" ezaw="336" ezah="280" style="position:relative;z-index:0;display:block;padding:0;" class="ezoic-ad"><div id="google_ads_iframe_/1254144,22581327789/learncpp_com-medrectangle-3_0__container__" style="border: 0pt none; width: 336px; height: 0px;"></div></span></span></div></span></div></div><p>Once you’ve created strings, it’s often useful to know how long they are. This is where length and capacity operations come into play. We’ll also discuss various ways to convert std::string back into C-style strings, so you can use them with functions that expect strings of type char*.</p><p><strong>Length of a string</strong></p><p>The length of the string is quite simple -- it’s the number of characters in the string. There are two identical functions for determining string length:</p><div class="cpp-table-wrapper"><p></p><table class="cpp-table"><tbody><tr><td><b>size_type string::length() const</b><br><b>size_type string::size() const</b><ul><li>Both of these functions return the current number of characters in the string, excluding the null terminator.</li></ul><p>Sample code:</p><div class="code-toolbar"><pre class="line-numbers language-cpp" tabindex="0"><code class="match-braces language-cpp">string source <span class="token punctuation brace-curly brace-open brace-level-1" id="pair-105-close">{</span> <span class="token string">"012345678"</span> <span class="token punctuation brace-curly brace-close brace-level-1" id="pair-105-open">}</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> source<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-104-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-104-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span style="height: 16px;"></span><span style="height: 16px;"></span></span><span class="line-numbers-sizer" style="display: none;"></span></code></pre><div class="toolbar"><div class="toolbar-item"><button class="copy-to-clipboard-button" type="button" data-copy-state="copy"><span>Copy</span></button></div></div></div><p>Output:</p><pre>9
</pre></td></tr></tbody></table></div><p>Although it’s possible to use length() to determine whether a string has any characters or not, it’s more efficient to use the empty() function:</p><div class="cpp-table-wrapper"><p></p><table class="cpp-table"><tbody><tr><td><b>bool string::empty() const</b><ul><li>Returns true if the string has no characters, false otherwise.</li></ul><p>Sample code:</p><div class="code-toolbar"><pre class="line-numbers language-cpp" tabindex="0"><code class="match-braces language-cpp">string string1 <span class="token punctuation brace-curly brace-open brace-level-1" id="pair-110-close">{</span> <span class="token string">"Not Empty"</span> <span class="token punctuation brace-curly brace-close brace-level-1" id="pair-110-open">}</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token punctuation brace-round brace-open brace-level-1" id="pair-107-close">(</span>string1<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation brace-round brace-open brace-level-2" id="pair-106-close">(</span><span class="token punctuation brace-round brace-close brace-level-2" id="pair-106-open">)</span> <span class="token operator">?</span> <span class="token string">"true"</span> <span class="token operator">:</span> <span class="token string">"false"</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-107-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>
string string2<span class="token punctuation">;</span> <span class="token comment">// empty</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token punctuation brace-round brace-open brace-level-1" id="pair-109-close">(</span>string2<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation brace-round brace-open brace-level-2" id="pair-108-close">(</span><span class="token punctuation brace-round brace-close brace-level-2" id="pair-108-open">)</span> <span class="token operator">?</span> <span class="token string">"true"</span> <span class="token operator">:</span> <span class="token string">"false"</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-109-open">)</span>  <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span></span><span class="line-numbers-sizer" style="display: none;"></span></code></pre><div class="toolbar"><div class="toolbar-item"><button class="copy-to-clipboard-button" type="button" data-copy-state="copy"><span>Copy</span></button></div></div></div><p>Output:</p><pre>false
true
</pre></td></tr></tbody></table></div><p>There is one more size-related function that you will probably never use, but we’ll include it here for completeness:</p><div class="cpp-table-wrapper"><p></p><table class="cpp-table"><tbody><tr><td><b>size_type string::max_size() const</b><ul><li>Returns the maximum number of characters that a string is allowed to have.</li><li>This value will vary depending on operating system and system architecture.</li></ul><p>Sample code:</p><div class="code-toolbar"><pre class="line-numbers language-cpp" tabindex="0"><code class="match-braces language-cpp">string s <span class="token punctuation brace-curly brace-open brace-level-1" id="pair-112-close">{</span> <span class="token string">"MyString"</span> <span class="token punctuation brace-curly brace-close brace-level-1" id="pair-112-open">}</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">max_size</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-111-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-111-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span style="height: 16px;"></span><span style="height: 16px;"></span></span><span class="line-numbers-sizer" style="display: none;"></span></code></pre><div class="toolbar"><div class="toolbar-item"><button class="copy-to-clipboard-button" type="button" data-copy-state="copy"><span>Copy</span></button></div></div></div><p>Output:</p><pre>4294967294
</pre></td></tr></tbody></table></div><p><strong>Capacity of a string</strong></p><div class="code-block code-block-2" style="margin:8px 0;clear:both"><div class="cf_monitor"><span id="ezoic-pub-ad-placeholder-130" style="display:block!important;float:none!important;line-height:0;margin-bottom:15px!important;margin-left:0!important;margin-right:0!important;margin-top:15px!important;max-width:100%!important;min-height:250px;min-width:970px;padding:0;text-align:center!important"><div><span class="ezoic-ad" data-ez-name="learncpp_com-medrectangle-4"><span style="background:0 0 !important;display:flex !important;float:none !important;justify-content:space-between;line-height:0px;margin-bottom:15px !important;margin-left:auto !important;margin-right:auto !important;margin-top:15px !important;max-width:100% !important;min-width:970px;padding:0;text-align:center !important;width:970px;" class="ezoic-ad medrectangle-4 medrectangle-4130 adtester-container adtester-container-130 ezoic-ad-adaptive" data-ez-name="learncpp_com-medrectangle-4"><span class="ezoic-ad medrectangle-4 medrectangle-4-multi-130 adtester-container adtester-container-130" data-ez-name="learncpp_com-medrectangle-4"><span id="div-gpt-ad-learncpp_com-medrectangle-4-0" ezaw="323" ezah="250" style="position:relative;z-index:0;display:inline-block;padding:0;min-height:250px;min-width:323px;" class="ezoic-ad"><script data-ezscrex="false" data-cfasync="false" type="text/javascript" style="display:none;"></script></span></span><span class="ezoic-ad medrectangle-4 medrectangle-4-multi-130 adtester-container adtester-container-130" data-ez-name="learncpp_com-medrectangle-4"><span id="div-gpt-ad-learncpp_com-medrectangle-4-0_1" ezaw="323" ezah="250" style="position:relative;z-index:0;display:inline-block;padding:0;min-height:250px;min-width:323px;" class="ezoic-ad"><script data-ezscrex="false" data-cfasync="false" type="text/javascript" style="display:none;"></script></span></span><span class="ezoic-ad medrectangle-4 medrectangle-4-multi-130 adtester-container adtester-container-130" data-ez-name="learncpp_com-medrectangle-4"><span id="div-gpt-ad-learncpp_com-medrectangle-4-0_2" ezaw="323" ezah="250" style="position:relative;z-index:0;display:inline-block;padding:0;min-height:250px;min-width:323px;" class="ezoic-ad"><script data-ezscrex="false" data-cfasync="false" type="text/javascript" style="display:none;"></script></span></span><style> .medrectangle-4-multi-130{border:none !important;display:block !important;float:none !important;line-height:0px;margin-bottom:15px !important;margin-left:0px !important;margin-right:0px !important;margin-top:15px !important;max-width:100% !important;min-height:250px;min-width:300px;padding:0;text-align:center !important;}</style></span></span></div></span></div></div><p>The capacity of a string reflects how much memory the string allocated to hold its contents. This value is measured in string characters, excluding the NULL terminator. For example, a string with capacity 8 could hold 8 characters.</p><div class="cpp-table-wrapper"><p></p><table class="cpp-table"><tbody><tr><td><b>size_type string::capacity() const</b><ul><li>Returns the number of characters a string can hold without reallocation.</li></ul><p>Sample code:</p><div class="code-toolbar"><pre class="line-numbers language-cpp" tabindex="0"><code class="match-braces language-cpp">string s <span class="token punctuation brace-curly brace-open brace-level-1" id="pair-115-close">{</span> <span class="token string">"01234567"</span> <span class="token punctuation brace-curly brace-close brace-level-1" id="pair-115-open">}</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Length: "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-113-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-113-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Capacity: "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-114-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-114-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span></span><span class="line-numbers-sizer" style="display: none;"></span></code></pre><div class="toolbar"><div class="toolbar-item"><button class="copy-to-clipboard-button" type="button" data-copy-state="copy"><span>Copy</span></button></div></div></div><p>Output:</p><pre>Length: 8
Capacity: 15
</pre></td></tr></tbody></table></div><p>Note that the capacity is higher than the length of the string! Although our string was length 8, the string actually allocated enough memory for 15 characters! Why was this done?</p><p>The important thing to recognize here is that if a user wants to put more characters into a string than the string has capacity for, the string has to be reallocated to a larger capacity. For example, if a string had both length and capacity of 8, then adding any characters to the string would force a reallocation. By making the capacity larger than the actual string, this gives the user some buffer room to expand the string before reallocation needs to be done.</p><p>As it turns out, reallocation is bad for several reasons:</p><p>First, reallocating a string is comparatively expensive. First, new memory has to be allocated. Then each character in the string has to be copied to the new memory. This can take a long time if the string is big. Finally, the old memory has to be deallocated. If you are doing many reallocations, this process can slow your program down significantly.</p><div class="code-block code-block-3" style="margin:8px 0;clear:both"><div class="cf_monitor"><span id="ezoic-pub-ad-placeholder-108"></span></div></div><p>Second, whenever a string is reallocated, the contents of the string change to a new memory address. This means all references, pointers, and iterators to the string become invalid!</p><p>Note that it’s not always the case that strings will be allocated with capacity greater than length. Consider the following program:</p><div class="code-toolbar"><pre class="line-numbers language-cpp" tabindex="0"><code class="match-braces language-cpp">string s <span class="token punctuation brace-curly brace-open brace-level-1" id="pair-118-close">{</span> <span class="token string">"0123456789abcde"</span> <span class="token punctuation brace-curly brace-close brace-level-1" id="pair-118-open">}</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Length: "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-116-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-116-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Capacity: "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-117-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-117-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span></span><span class="line-numbers-sizer" style="display: none;"></span></code></pre><div class="toolbar"><div class="toolbar-item"><button class="copy-to-clipboard-button" type="button" data-copy-state="copy"><span>Copy</span></button></div></div></div><p>This program outputs:</p><pre>Length: 15
Capacity: 15
</pre><p>(Results may vary depending on compiler).</p><p>Let’s add one character to the string and watch the capacity change:</p><div class="code-block code-block-4" style="margin:8px 0;clear:both"><div class="cf_monitor"><span id="ezoic-pub-ad-placeholder-124" style="display:block!important;float:none!important;line-height:0;margin-bottom:15px!important;margin-left:0!important;margin-right:0!important;margin-top:15px!important;max-width:100%!important;min-height:250px;min-width:970px;padding:0;text-align:center!important"><div><span class="ezoic-ad" data-ez-name="learncpp_com-box-4"><span id="div-gpt-ad-learncpp_com-box-4-0" ezaw="970" ezah="90" style="position:relative;z-index:0;display:block;padding:0;" class="ezoic-ad"></span></span></div></span></div></div><div class="code-toolbar"><pre class="line-numbers language-cpp" tabindex="0"><code class="match-braces language-cpp">string <span class="token function">s</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-119-close">(</span><span class="token string">"0123456789abcde"</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-119-open">)</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Length: "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-120-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-120-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Capacity: "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-121-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-121-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>

<span class="token comment">// Now add a new character</span>
s<span class="token operator">+=</span> <span class="token string">"f"</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Length: "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-122-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-122-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Capacity: "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-123-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-123-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span></span><span class="line-numbers-sizer" style="display: none;"></span></code></pre><div class="toolbar"><div class="toolbar-item"><button class="copy-to-clipboard-button" type="button" data-copy-state="copy"><span>Copy</span></button></div></div></div><p>This produces the result:</p><pre>Length: 15
Capacity: 15
Length: 16
Capacity: 31
</pre><div class="cpp-table-wrapper"><p></p><table class="cpp-table"><tbody><tr><td><b>void string::reserve()</b><br><b>void string::reserve(size_type unSize)</b><ul><li>The second flavor of this function sets the capacity of the string to at least unSize (it can be greater). Note that this may require a reallocation to occur.</li><li>If the first flavor of the function is called, or the second flavor is called with unSize less than the current capacity, the function will try to shrink the capacity to match the length. This request to shrink the capacity may be ignored, depending on implementation.</li></ul><p>Sample code:</p><div class="code-toolbar"><pre class="line-numbers language-cpp" tabindex="0"><code class="match-braces language-cpp">string s <span class="token punctuation brace-curly brace-open brace-level-1" id="pair-132-close">{</span> <span class="token string">"01234567"</span> <span class="token punctuation brace-curly brace-close brace-level-1" id="pair-132-open">}</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Length: "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-124-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-124-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Capacity: "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-125-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-125-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>

sString<span class="token punctuation">.</span><span class="token function">reserve</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-126-close">(</span><span class="token number">200</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-126-open">)</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Length: "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-127-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-127-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Capacity: "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-128-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-128-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>

sString<span class="token punctuation">.</span><span class="token function">reserve</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-129-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-129-open">)</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Length: "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-130-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-130-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Capacity: "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-131-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-131-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span></span><span class="line-numbers-sizer" style="display: none;"></span></code></pre><div class="toolbar"><div class="toolbar-item"><button class="copy-to-clipboard-button" type="button" data-copy-state="copy"><span>Copy</span></button></div></div></div><p>Output:</p><pre>Length: 8
Capacity: 15
Length: 8
Capacity: 207
Length: 8
Capacity: 207
</pre></td></tr></tbody></table></div><p>This example shows two interesting things. First, although we requested a capacity of 200, we actually got a capacity of 207. The capacity is always guaranteed to be at least as large as your request, but may be larger. We then requested the capacity change to fit the string. This request was ignored, as the capacity did not change.</p><p>If you know in advance that you’re going to be constructing a large string by doing lots of string operations that will add to the size of the string, you can avoid having the string reallocated multiple times by immediately setting the string to its final capacity:</p><div class="code-toolbar"><pre class="line-numbers language-cpp" tabindex="0"><code class="match-braces language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib&gt;</span> <span class="token comment">// for rand() and srand()</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ctime&gt;</span> <span class="token comment">// for time()</span></span>

<span class="token keyword keyword-int">int</span> <span class="token function">main</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-133-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-133-open">)</span>
<span class="token punctuation brace-curly brace-open brace-level-1" id="pair-141-close">{</span>
    std<span class="token double-colon punctuation">::</span><span class="token function">srand</span><span class="token punctuation brace-round brace-open brace-level-2" id="pair-135-close">(</span>std<span class="token double-colon punctuation">::</span><span class="token function">time</span><span class="token punctuation brace-round brace-open brace-level-3" id="pair-134-close">(</span><span class="token keyword keyword-nullptr">nullptr</span><span class="token punctuation brace-round brace-close brace-level-3" id="pair-134-open">)</span><span class="token punctuation brace-round brace-close brace-level-2" id="pair-135-open">)</span><span class="token punctuation">;</span> <span class="token comment">// seed random number generator</span>

    string s<span class="token punctuation brace-curly brace-open brace-level-2" id="pair-139-close">{</span><span class="token punctuation brace-curly brace-close brace-level-2" id="pair-139-open">}</span><span class="token punctuation">;</span> <span class="token comment">// length 0</span>
    s<span class="token punctuation">.</span><span class="token function">reserve</span><span class="token punctuation brace-round brace-open brace-level-2" id="pair-136-close">(</span><span class="token number">64</span><span class="token punctuation brace-round brace-close brace-level-2" id="pair-136-open">)</span><span class="token punctuation">;</span> <span class="token comment">// reserve 64 characters</span>

    <span class="token comment">// Fill string up with random lower case characters</span>
    <span class="token keyword keyword-for">for</span> <span class="token punctuation brace-round brace-open brace-level-2" id="pair-137-close">(</span><span class="token keyword keyword-int">int</span> count<span class="token punctuation brace-curly brace-open brace-level-3" id="pair-140-close">{</span> <span class="token number">0</span> <span class="token punctuation brace-curly brace-close brace-level-3" id="pair-140-open">}</span><span class="token punctuation">;</span> count <span class="token operator">&lt;</span> <span class="token number">64</span><span class="token punctuation">;</span> <span class="token operator">++</span>count<span class="token punctuation brace-round brace-close brace-level-2" id="pair-137-open">)</span>
        s <span class="token operator">+=</span> <span class="token string">'a'</span> <span class="token operator">+</span> std<span class="token double-colon punctuation">::</span><span class="token function">rand</span><span class="token punctuation brace-round brace-open brace-level-2" id="pair-138-close">(</span><span class="token punctuation brace-round brace-close brace-level-2" id="pair-138-open">)</span> <span class="token operator">%</span> <span class="token number">26</span><span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">;</span>
<span class="token punctuation brace-curly brace-close brace-level-1" id="pair-141-open">}</span><span aria-hidden="true" class="line-numbers-rows"><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span></span><span class="line-numbers-sizer" style="display: none;"></span></code></pre><div class="toolbar"><div class="toolbar-item"><button class="copy-to-clipboard-button" type="button" data-copy-state="copy"><span>Copy</span></button></div></div></div><p>The result of this program will change each time, but here’s the output from one execution:</p><pre>wzpzujwuaokbakgijqdawvzjqlgcipiiuuxhyfkdppxpyycvytvyxwqsbtielxpy
</pre><p>Rather than having to reallocate s multiple times, we set the capacity once and then fill the string up. This can make a huge difference in performance when constructing large strings via concatenation.</p><div class="prevnext"><div class="prevnext-inline"><a class="nav-link" href="https://www.learncpp.com/cpp-tutorial/stdstring-character-access-and-conversion-to-c-style-arrays/"><div class="nav-button nav-button-next"><div class="nav-button-icon"><i class="fa fa-chevron-circle-right" aria-hidden="true"></i></div><div class="nav-button-text"><div class="nav-button-title">Next lesson</div><div class="nav-button-lesson"><span class="nav-button-lesson-number">22.4</span>std::string character access and conversion to C-style arrays</div></div></div></a><a class="nav-link" href="/"><div class="nav-button nav-button-index"><div class="nav-button-icon"><i class="fa fa-home" aria-hidden="true"></i></div><div class="nav-button-text"><div class="nav-button-title">Back to table of contents</div></div></div></a><a class="nav-link" href="https://www.learncpp.com/cpp-tutorial/stdstring-construction-and-destruction/"><div class="nav-button nav-button-prev"><div class="nav-button-icon"><i class="fa fa-chevron-circle-left" aria-hidden="true"></i></div><div class="nav-button-text"><div class="nav-button-title">Previous lesson</div><div class="nav-button-lesson"><span class="nav-button-lesson-number">22.2</span>std::string construction and destruction</div></div></div></a></div></div><div class="code-block code-block-10" style="margin:8px 0;clear:both"><div class="cf_monitor"><span id="ezoic-pub-ad-placeholder-106" style="display:block!important;float:none!important;line-height:0;margin-bottom:15px!important;margin-left:0!important;margin-right:0!important;margin-top:15px!important;max-width:100%!important;min-height:250px;min-width:970px;padding:0;text-align:center!important"><div><span class="ezoic-ad" data-ez-name="learncpp_com-large-mobile-banner-1"><span id="div-gpt-ad-learncpp_com-large-mobile-banner-1-0" ezaw="970" ezah="90" style="position:relative;z-index:0;display:block;padding:0;" class="ezoic-ad"></span></span></div></span></div></div></div><footer class="entry-meta entry-utility"></footer></div><span class="schema-publisher" itemprop="publisher" itemscope="" itemtype="https://schema.org/Organization"><span itemprop="logo" itemscope="" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://www.learncpp.com/blog/wp-content/uploads/learncpp.png"></span><meta itemprop="name" content="Learn C++"></span><link itemprop="mainEntityOfPage" href="https://www.learncpp.com/stdstring-length-and-capacity/"></article><nav id="nav-below" class="navigation" role="navigation"><div class="nav-previous"><em>Previous Post</em><a href="https://www.learncpp.com/cpp-tutorial/stdstring-construction-and-destruction/" rel="prev"><span>22.2 — std::string construction and destruction</span></a></div><div class="nav-next"><em>Next Post</em><a href="https://www.learncpp.com/cpp-tutorial/stdstring-character-access-and-conversion-to-c-style-arrays/" rel="next"><span>22.4 — std::string character access and conversion to C-style arrays</span></a></div></nav><div class="wpdiscuz_top_clearing"></div><div id="comments" class="comments-area"><div id="respond" style="width:0;height:0;clear:both;margin:0;padding:0"></div><div id="wpdcom" class="wpdiscuz_unauth wpd-default wpd-layout-2 wpd-comments-open"><div class="wc_social_plugin_wrapper"></div><div class="wpd-form-wrap"><div class="wpd-form-head"><div class="wpd-auth"><div class="wpd-login"></div></div></div><div class="wpd-form wpd-form-wrapper wpd-main-form-wrapper" id="wpd-main-form-wrapper-0_0"><form class="wpd_comm_form wpd_main_comm_form" method="post" enctype="multipart/form-data"><div class="wpd-field-comment"><div class="wpdiscuz-item wc-field-textarea"><div class="wpdiscuz-textarea-wrap wpd-txt"><div class="wpd-avatar"><img alt="guest" src="data:image/svg+xml,%3Csvg xmlns=%22http://www.w3.org/2000/svg%22 width=%2256%22 height=%2256%22%3E%3C/svg%3E" data-ezsrcset="https://www.learncpp.com/ezoimgfmt/secure.gravatar.com/avatar/?s=112&amp;d=mm&amp;r=g 2x" class="ezlazyload avatar avatar-56 photo avatar-default" height="56" width="56" loading="lazy" ezimgfmt="rs rscb2 src ng ngcb2 srcset" data-ezsrc="https://www.learncpp.com/ezoimgfmt/secure.gravatar.com/avatar/?s=56&amp;d=mm&amp;r=g"></div><div class="wpd-textarea-wrap"><div id="wpd-editor-char-counter-0_0" class="wpd-editor-char-counter"></div><label style="display:none" for="wc-textarea-0_0">Label</label>
<div id="qt_wc-textarea-0_0_toolbar" class="quicktags-toolbar"><input type="button" id="qt_wc-textarea-0_0_cpp_bold_button" class="ed_button button button-small" title="Bold text" value="b"><input type="button" id="qt_wc-textarea-0_0_cpp_underline_button" class="ed_button button button-small" title="Underlined text" value="u"><input type="button" id="qt_wc-textarea-0_0_cpp_link_button" class="ed_button button button-small" title="Link to another website" value="url"><input type="button" id="qt_wc-textarea-0_0_cpp_code_button" class="ed_button button button-small" title="A short piece of C++ code displayed as part of a sentence" value="Inline code"><input type="button" id="qt_wc-textarea-0_0_cpp_code_block_button" class="ed_button button button-small" title="A syntax-highlighted block of C++ code" value="C++ code block"><input type="button" id="qt_wc-textarea-0_0_cpp_help_button" class="ed_button button button-small" title="Opens a new tab with help on how to use these buttons" value="Help!"></div><textarea id="wc-textarea-0_0" placeholder="Leave a comment..." aria-label="Leave a comment..." required="" name="wc_comment" class="wc_comment wpd-field"></textarea></div><div class="wpd-editor-buttons-right"></div></div></div></div><div class="wpd-form-foot"><div class="wpdiscuz-textarea-foot"><div class="wpdiscuz-button-actions"></div></div><div class="wpd-form-row"><div class="wpd-form-col-left"><div class="wpdiscuz-item wc_name-wrapper wpd-has-icon"><div class="wpd-field-icon"><i class="fas fa-user"></i></div><input id="wc_name-0_0" required="" aria-required="true" class="wc_name wpd-field" name="wc_name" placeholder="Name*" maxlength="50" pattern=".{3,50}">
<label for="wc_name-0_0" class="wpdlb">Name*</label></div><div class="wpdiscuz-item wc_email-wrapper wpd-has-icon"><div class="wpd-field-icon"><i class="fas fa-at"></i></div><input id="wc_email-0_0" required="" aria-required="true" class="wc_email wpd-field" type="email" name="wc_email" placeholder="Email*">
<label for="wc_email-0_0" class="wpdlb">Email*</label><div class="wpd-field-desc"><i class="far fa-question-circle"></i><span>Your email address will not be displayed</span></div></div>Avatars from <a href="https://gravatar.com/">https://gravatar.com/</a> are connected to your provided email address.</div><div class="wpd-form-col-right"><div class="wc-field-submit"><span style="margin-top:6px">Notify me about replies:&nbsp;&nbsp;</span>
<label class="wpd_label" wpd-tooltip="Notify me about new replies to this comment"><input id="wc_notification_new_comment-0_0" class="wc_notification_new_comment-0_0 wpd_label__checkbox" value="comment" type="checkbox" name="wpdiscuz_notification_type" checked="">
<span class="wpd_label__text"><span class="wpd_label__check"><i class="fas fa-bell wpdicon wpdicon-on"></i><i class="fas fa-bell-slash wpdicon wpdicon-off"></i></span></span></label><input id="wpd-field-submit-0_0" class="wc_comm_submit wpd_not_clicked wpd-prim-button" type="submit" name="submit" value="Post Comment"></div></div><div class="clearfix"></div></div></div><input type="hidden" class="wpdiscuz_unique_id" value="0_0" name="wpdiscuz_unique_id"></form></div><div id="wpdiscuz_hidden_secondary_form" style="display:none"><div class="wpd-form wpd-form-wrapper wpd-secondary-form-wrapper" id="wpd-secondary-form-wrapper-wpdiscuzuniqueid" style="display:none"><div class="wpd-secondary-forms-social-content"></div><div class="clearfix"></div><form class="wpd_comm_form wpd-secondary-form-wrapper" method="post" enctype="multipart/form-data"><div class="wpd-field-comment"><div class="wpdiscuz-item wc-field-textarea"><div class="wpdiscuz-textarea-wrap wpd-txt"><div class="wpd-avatar"><img alt="guest" src="data:image/svg+xml,%3Csvg xmlns=%22http://www.w3.org/2000/svg%22 width=%2256%22 height=%2256%22%3E%3C/svg%3E" data-ezsrcset="https://www.learncpp.com/ezoimgfmt/secure.gravatar.com/avatar/?s=112&amp;d=mm&amp;r=g 2x" class="ezlazyload avatar avatar-56 photo avatar-default" height="56" width="56" loading="lazy" ezimgfmt="rs rscb2 src ng ngcb2 srcset" data-ezsrc="https://www.learncpp.com/ezoimgfmt/secure.gravatar.com/avatar/?s=56&amp;d=mm&amp;r=g"></div><div class="wpd-textarea-wrap"><div id="wpd-editor-char-counter-wpdiscuzuniqueid" class="wpd-editor-char-counter"></div><label style="display:none" for="wc-textarea-wpdiscuzuniqueid">Label</label>
<textarea id="wc-textarea-wpdiscuzuniqueid" placeholder="Leave a comment..." aria-label="Leave a comment..." required="" name="wc_comment" class="wc_comment wpd-field"></textarea></div><div class="wpd-editor-buttons-right"></div></div></div></div><div class="wpd-form-foot"><div class="wpdiscuz-textarea-foot"><div class="wpdiscuz-button-actions"></div></div><div class="wpd-form-row"><div class="wpd-form-col-left"><div class="wpdiscuz-item wc_name-wrapper wpd-has-icon"><div class="wpd-field-icon"><i class="fas fa-user"></i></div><input id="wc_name-wpdiscuzuniqueid" required="" aria-required="true" class="wc_name wpd-field" name="wc_name" placeholder="Name*" maxlength="50" pattern=".{3,50}">
<label for="wc_name-wpdiscuzuniqueid" class="wpdlb">Name*</label></div><div class="wpdiscuz-item wc_email-wrapper wpd-has-icon"><div class="wpd-field-icon"><i class="fas fa-at"></i></div><input id="wc_email-wpdiscuzuniqueid" required="" aria-required="true" class="wc_email wpd-field" type="email" name="wc_email" placeholder="Email*">
<label for="wc_email-wpdiscuzuniqueid" class="wpdlb">Email*</label><div class="wpd-field-desc"><i class="far fa-question-circle"></i><span>Your email address will not be displayed</span></div></div>Avatars from <a href="https://gravatar.com/">https://gravatar.com/</a> are connected to your provided email address.</div><div class="wpd-form-col-right"><div class="wc-field-submit"><label class="wpd_label" wpd-tooltip="Notify me about new replies to this comment"><input id="wc_notification_new_comment-wpdiscuzuniqueid" class="wc_notification_new_comment-wpdiscuzuniqueid wpd_label__checkbox" value="comment" type="checkbox" name="wpdiscuz_notification_type" checked="">
<span class="wpd_label__text"><span class="wpd_label__check"><i class="fas fa-bell wpdicon wpdicon-on"></i><i class="fas fa-bell-slash wpdicon wpdicon-off"></i></span></span></label><input id="wpd-field-submit-wpdiscuzuniqueid" class="wc_comm_submit wpd_not_clicked wpd-prim-button" type="submit" name="submit" value="Post Comment"></div></div><div class="clearfix"></div></div></div><input type="hidden" class="wpdiscuz_unique_id" value="wpdiscuzuniqueid" name="wpdiscuz_unique_id"></form></div></div></div><div id="wpd-threads" class="wpd-thread-wrapper"><div class="wpd-thread-head"><div class="wpd-thread-info" data-comments-count="45"><span class="wpdtc" title="45">45</span> Comments</div><div class="wpd-space"></div><div class="wpd-thread-filter"><div class="wpd-filter wpdf-sorting"><span class="wpdiscuz-sort-button wpdiscuz-date-sort-desc wpdiscuz-sort-button-active" data-sorting="newest">Newest</span>
<i class="fas fa-sort-down"></i><div class="wpdiscuz-sort-buttons"><span class="wpdiscuz-sort-button wpdiscuz-date-sort-asc" data-sorting="oldest">Oldest</span>
<span class="wpdiscuz-sort-button wpdiscuz-vote-sort-up" data-sorting="by_vote">Most Voted</span></div></div></div></div><div class="wpd-comment-info-bar"><div class="wpd-current-view"><i class="fas fa-quote-left"></i>Inline Feedbacks</div><div class="wpd-filter-view-all">View all comments</div></div><div class="wpd-thread-list"><div id="wpd-comm-563562_0" class="wpd-comment wpd_comment_level-1"><div class="wpd-comment-wrap wpd-blog-guest">
    <div id="comment-563562" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="Jim" src="https://secure.gravatar.com/avatar/4a2b4ba4daa905d63eb0eeba1f0a9768?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/4a2b4ba4daa905d63eb0eeba1f0a9768?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    Jim
</div>
    
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    
    <div class="wpd-comment-date" title="December 16, 2021 11:01 pm">
    <i class="far fa-clock" aria-hidden="true"></i>
    December 16, 2021 11:01 pm
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-563562"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>The following code outputs the same address for all couts and in every run. what did i do wrong?</p>
<div class="code-toolbar"><pre class="line-numbers language-cpp" tabindex="0"><code class="match-braces language-cpp"><span class="token keyword keyword-int">int</span> <span class="token function">main</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-142-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-142-open">)</span>
<span class="token punctuation brace-curly brace-open brace-level-1" id="pair-146-close">{</span>
string s <span class="token punctuation brace-curly brace-open brace-level-2" id="pair-145-close">{</span> <span class="token string">"01234567"</span> <span class="token punctuation brace-curly brace-close brace-level-2" id="pair-145-open">}</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>s <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>

s <span class="token operator">+=</span> <span class="token string">'a'</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>s <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>

s<span class="token punctuation">.</span><span class="token function">reserve</span><span class="token punctuation brace-round brace-open brace-level-2" id="pair-143-close">(</span><span class="token number">20000000000</span><span class="token punctuation brace-round brace-close brace-level-2" id="pair-143-open">)</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>s <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>

s <span class="token operator">+=</span> <span class="token string">'a'</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>s <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>

s<span class="token punctuation">.</span><span class="token function">shrink_to_fit</span><span class="token punctuation brace-round brace-open brace-level-2" id="pair-144-close">(</span><span class="token punctuation brace-round brace-close brace-level-2" id="pair-144-open">)</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>s <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>

s <span class="token operator">+=</span> <span class="token string">'a'</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token operator">&amp;</span>s <span class="token operator">&lt;&lt;</span> <span class="token string">'\n'</span><span class="token punctuation">;</span>
<span class="token punctuation brace-curly brace-close brace-level-1" id="pair-146-open">}</span><span aria-hidden="true" class="line-numbers-rows"><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span></span><span class="line-numbers-sizer" style="display: none;"></span></code></pre><div class="toolbar"><div class="toolbar-item"><button class="copy-to-clipboard-button" type="button" data-copy-state="copy"><span>Copy</span></button></div></div></div>

</div><div class="wpd-comment-last-edited"><i class="far fa-edit"></i>Last edited 3 months ago by Jim</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    <div class="wpd-toggle wpd-hidden wpd_not_clicked" wpd-tooltip="Hide Replies">
    <i class="fas fa-chevron-up"></i>
</div>
</div>
</div>
</div><div id="wpdiscuz_form_anchor-563562_0"></div><div id="wpd-comm-563581_563562" class="wpd-comment wpd-reply wpd_comment_level-2"><div class="wpd-comment-wrap wpd-blog-user wpd-blog-subadministrator">
    <div id="comment-563581" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="nascardriver" src="https://secure.gravatar.com/avatar/11b09338d6108681887f55d784841888?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/11b09338d6108681887f55d784841888?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    nascardriver
</div>
    <div class="wpd-comment-label" wpd-tooltip="Sub-admin" wpd-tooltip-position="top">
    <span>Sub-admin</span>
</div>
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    <div class="wpd-reply-to">
    <i class="far fa-comments"></i>
    Reply to&nbsp;
    <a href="#comment-563562">
        Jim
    </a>
</div>
    <div class="wpd-comment-date" title="December 17, 2021 9:39 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    December 17, 2021 9:39 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-563581"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>You're printing the address of the <code>std::string</code>, which is a local variable. It never moves.<br>
What you're trying to access is the dynamically allocated buffer of the <code>std::string</code>. It can be accessed with <code>s.data()</code>.<br>
Printing <code>s.data()</code> will print the string, because it's a <code>const char*</code>. You'll need to cast it to <code>void*</code>.</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result wpd-up" title="2">2</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    
</div>
</div>
</div><div id="wpdiscuz_form_anchor-563581_563562"></div></div></div><div id="wpd-comm-562339_0" class="wpd-comment wpd_comment_level-1"><div class="wpd-comment-wrap wpd-blog-guest">
    <div id="comment-562339" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="HangUp" src="https://secure.gravatar.com/avatar/5ac8a30fe03759bf66bed497e4c575cb?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/5ac8a30fe03759bf66bed497e4c575cb?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    HangUp
</div>
    
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    
    <div class="wpd-comment-date" title="October 26, 2021 12:41 pm">
    <i class="far fa-clock" aria-hidden="true"></i>
    October 26, 2021 12:41 pm
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-562339"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>What does it mean for a request to be non-binding?</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    <div class="wpd-toggle wpd-hidden wpd_not_clicked" wpd-tooltip="Hide Replies">
    <i class="fas fa-chevron-up"></i>
</div>
</div>
</div>
</div><div id="wpdiscuz_form_anchor-562339_0"></div><div id="wpd-comm-562388_562339" class="wpd-comment wpd-reply wpd_comment_level-2"><div class="wpd-comment-wrap wpd-blog-user wpd-blog-post_author">
    <div id="comment-562388" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="Alex" src="https://secure.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    Alex
</div>
    <div class="wpd-comment-label" wpd-tooltip="Author" wpd-tooltip-position="top">
    <span>Author</span>
</div>
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    <div class="wpd-reply-to">
    <i class="far fa-comments"></i>
    Reply to&nbsp;
    <a href="#comment-562339">
        HangUp
    </a>
</div>
    <div class="wpd-comment-date" title="October 28, 2021 11:21 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    October 28, 2021 11:21 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-562388"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>It means it can be ignored.</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result wpd-up" title="3">3</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    
</div>
</div>
</div><div id="wpdiscuz_form_anchor-562388_562339"></div></div></div><div id="wpd-comm-562264_0" class="wpd-comment wpd_comment_level-1"><div class="wpd-comment-wrap wpd-blog-guest">
    <div id="comment-562264" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="Tejero Joshua" src="https://secure.gravatar.com/avatar/174cf8953b0a31fe1cc394ffbebe048b?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/174cf8953b0a31fe1cc394ffbebe048b?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    Tejero Joshua
</div>
    
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    
    <div class="wpd-comment-date" title="October 25, 2021 5:55 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    October 25, 2021 5:55 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-562264"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>why this happened:<br>
"We then requested the capacity change to fit the string. This request was ignored, as the capacity did not change."</p>
<p>I've tried it multiple times, but it was always ignored my request to change the capacity to fit the string</p>
<p>any thoughts about this one? or can you give me code example that can change the string capacity to fit the string length</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    <div class="wpd-toggle wpd-hidden wpd_not_clicked" wpd-tooltip="Hide Replies">
    <i class="fas fa-chevron-up"></i>
</div>
</div>
</div>
</div><div id="wpdiscuz_form_anchor-562264_0"></div><div id="wpd-comm-562298_562264" class="wpd-comment wpd-reply wpd_comment_level-2"><div class="wpd-comment-wrap wpd-blog-user wpd-blog-post_author">
    <div id="comment-562298" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="Alex" src="https://secure.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    Alex
</div>
    <div class="wpd-comment-label" wpd-tooltip="Author" wpd-tooltip-position="top">
    <span>Author</span>
</div>
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    <div class="wpd-reply-to">
    <i class="far fa-comments"></i>
    Reply to&nbsp;
    <a href="#comment-562264">
        Tejero Joshua
    </a>
</div>
    <div class="wpd-comment-date" title="October 25, 2021 7:33 pm">
    <i class="far fa-clock" aria-hidden="true"></i>
    October 25, 2021 7:33 pm
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-562298"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>I haven't found a compiler that will shrink capacity via this function, but many seem to shrink capacity when using the shrink_to_fit function().</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    
</div>
</div>
</div><div id="wpdiscuz_form_anchor-562298_562264"></div></div></div><div id="wpd-comm-562217_0" class="wpd-comment wpd_comment_level-1"><div class="wpd-comment-wrap wpd-blog-guest">
    <div id="comment-562217" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="Tejero Joshua" src="https://secure.gravatar.com/avatar/174cf8953b0a31fe1cc394ffbebe048b?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/174cf8953b0a31fe1cc394ffbebe048b?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    Tejero Joshua
</div>
    
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    
    <div class="wpd-comment-date" title="October 23, 2021 7:03 pm">
    <i class="far fa-clock" aria-hidden="true"></i>
    October 23, 2021 7:03 pm
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-562217"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>is there a reason why are avoiding the list initialization when dealing with numbers?</p>
<div class="code-toolbar"><pre class="line-numbers language-cpp" tabindex="0"><code class="match-braces language-cpp">string <span class="token function">sString</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-147-close">(</span><span class="token string">"01234567"</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-147-open">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span style="height: 16px;"></span></span><span class="line-numbers-sizer" style="display: none;"></span></code></pre><div class="toolbar"><div class="toolbar-item"><button class="copy-to-clipboard-button" type="button" data-copy-state="copy"><span>Copy</span></button></div></div></div>
<p>even though it's inside a quotation mark??</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    <div class="wpd-toggle wpd-hidden wpd_not_clicked" wpd-tooltip="Hide Replies">
    <i class="fas fa-chevron-up"></i>
</div>
</div>
</div>
</div><div id="wpdiscuz_form_anchor-562217_0"></div><div id="wpd-comm-562282_562217" class="wpd-comment wpd-reply wpd_comment_level-2"><div class="wpd-comment-wrap wpd-blog-user wpd-blog-post_author">
    <div id="comment-562282" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="Alex" src="https://secure.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    Alex
</div>
    <div class="wpd-comment-label" wpd-tooltip="Author" wpd-tooltip-position="top">
    <span>Author</span>
</div>
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    <div class="wpd-reply-to">
    <i class="far fa-comments"></i>
    Reply to&nbsp;
    <a href="#comment-562217">
        Tejero Joshua
    </a>
</div>
    <div class="wpd-comment-date" title="October 25, 2021 3:22 pm">
    <i class="far fa-clock" aria-hidden="true"></i>
    October 25, 2021 3:22 pm
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-562282"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>Nope.  The lessons in this chapter were written a long time ago (pre-C++11) and need to be updated for modern best practices.  I've updated this one a bit.</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result wpd-up" title="2">2</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    
</div>
</div>
</div><div id="wpdiscuz_form_anchor-562282_562217"></div></div></div><div id="wpd-comm-490584_0" class="wpd-comment wpd_comment_level-1"><div class="wpd-comment-wrap wpd-blog-guest">
    <div id="comment-490584" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="yeokaiwei" src="https://secure.gravatar.com/avatar/7916b50cd254d509c917f65b1bb1fc84?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/7916b50cd254d509c917f65b1bb1fc84?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    yeokaiwei
</div>
    
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    
    <div class="wpd-comment-date" title="January 10, 2021 2:53 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    January 10, 2021 2:53 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-490584"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <ol start="1">
<li>Feedback on pedagogy</li>
</ol>
<p>This method of teaching seems much better as you explain each member function with an example.</p>
<p>I can just copy-paste each part into 1 main function.</p>
<ol start="2">
<li>Feedback on endl</li>
</ol>
<p>Should we use endl or '\n'?</p>
<p>3.&nbsp;&nbsp;std::srand(std::time(nullptr));<br>
It will return error C4244 conversion from 'time_t' to 'unsigned int'.</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    
</div>
</div>
</div><div id="wpdiscuz_form_anchor-490584_0"></div></div><div id="wpd-comm-469490_0" class="wpd-comment wpd_comment_level-1"><div class="wpd-comment-wrap wpd-blog-guest">
    <div id="comment-469490" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="Hubert" src="https://secure.gravatar.com/avatar/7d23882a979d23f7383338a481a48d1a?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/7d23882a979d23f7383338a481a48d1a?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    Hubert
</div>
    
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    
    <div class="wpd-comment-date" title="July 30, 2020 8:43 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    July 30, 2020 8:43 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-469490"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>Hello Alex and nascardriver,</p>
<p>May you add std::prefixes beofore cout, string and so on?<br>
And why you use std::endl here instead of '\n'?</p>
<p>Hubert</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    <div class="wpd-toggle wpd-hidden wpd_not_clicked" wpd-tooltip="Hide Replies">
    <i class="fas fa-chevron-up"></i>
</div>
</div>
</div>
</div><div id="wpdiscuz_form_anchor-469490_0"></div><div id="wpd-comm-469708_469490" class="wpd-comment wpd-reply wpd_comment_level-2"><div class="wpd-comment-wrap wpd-blog-user wpd-blog-subadministrator">
    <div id="comment-469708" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="nascardriver" src="https://secure.gravatar.com/avatar/11b09338d6108681887f55d784841888?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/11b09338d6108681887f55d784841888?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    nascardriver
</div>
    <div class="wpd-comment-label" wpd-tooltip="Sub-admin" wpd-tooltip-position="top">
    <span>Sub-admin</span>
</div>
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    <div class="wpd-reply-to">
    <i class="far fa-comments"></i>
    Reply to&nbsp;
    <a href="#comment-469490">
        Hubert
    </a>
</div>
    <div class="wpd-comment-date" title="August 2, 2020 6:42 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    August 2, 2020 6:42 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-469708"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>Hi</p>
<p>this lesson doesn't add any value to the tutorials, I've marked it for being removed.</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    
</div>
</div>
</div><div id="wpdiscuz_form_anchor-469708_469490"></div></div></div><div id="wpd-comm-469137_0" class="wpd-comment wpd_comment_level-1"><div class="wpd-comment-wrap wpd-blog-guest">
    <div id="comment-469137" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="hausevult" src="https://secure.gravatar.com/avatar/fe62aa995ef5113baf54438d2a75f95f?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/fe62aa995ef5113baf54438d2a75f95f?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    hausevult
</div>
    
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    
    <div class="wpd-comment-date" title="July 26, 2020 7:50 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    July 26, 2020 7:50 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-469137"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>Decided to find out whether or not there is a common ratio for string growth. I was correct!</p>
<div class="code-toolbar"><pre class="line-numbers language-cpp" tabindex="0"><code class="match-braces language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>

<span class="token comment">// conclusion: 1.45735 seems to be the ratio on my compiler/environment/machine/architecture</span>

<span class="token keyword keyword-int">int</span> <span class="token function">main</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-148-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-148-open">)</span>
<span class="token punctuation brace-curly brace-open brace-level-1" id="pair-164-close">{</span>
    <span class="token keyword keyword-int">int</span> iterations<span class="token punctuation brace-curly brace-open brace-level-2" id="pair-157-close">{</span><span class="token punctuation brace-curly brace-close brace-level-2" id="pair-157-open">}</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-int">int</span> offset<span class="token punctuation brace-curly brace-open brace-level-2" id="pair-158-close">{</span><span class="token punctuation brace-curly brace-close brace-level-2" id="pair-158-open">}</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-double">double</span> preAverage<span class="token punctuation brace-curly brace-open brace-level-2" id="pair-159-close">{</span><span class="token punctuation brace-curly brace-close brace-level-2" id="pair-159-open">}</span><span class="token punctuation">;</span>
    std<span class="token double-colon punctuation">::</span>string str<span class="token punctuation">;</span>

    <span class="token comment">// for 100k iterations</span>
    <span class="token comment">// store starting capacity</span>
    <span class="token comment">// format and print starting capacity</span>
    <span class="token comment">// append a character to std::string str</span>
    <span class="token comment">// store ending capacity</span>
    <span class="token comment">// if startCapacity is not equal to endCapacity (endCapacity changed)</span>
    <span class="token comment">// then add (endCapacity / startCapacity) to preAverage</span>
    <span class="token comment">// else store an offset for how many iterations did not increment the average</span>

    <span class="token keyword keyword-while">while</span> <span class="token punctuation brace-round brace-open brace-level-2" id="pair-149-close">(</span>iterations <span class="token operator">&lt;</span> <span class="token number">100000</span><span class="token punctuation brace-round brace-close brace-level-2" id="pair-149-open">)</span>
    <span class="token punctuation brace-curly brace-open brace-level-2" id="pair-162-close">{</span>
        <span class="token keyword keyword-int">int</span> startCapacity<span class="token punctuation brace-curly brace-open brace-level-3" id="pair-160-close">{</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword keyword-int">int</span><span class="token operator">&gt;</span></span></span><span class="token punctuation brace-round brace-open brace-level-4" id="pair-151-close">(</span>str<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation brace-round brace-open brace-level-5" id="pair-150-close">(</span><span class="token punctuation brace-round brace-close brace-level-5" id="pair-150-open">)</span><span class="token punctuation brace-round brace-close brace-level-4" id="pair-151-open">)</span> <span class="token punctuation brace-curly brace-close brace-level-3" id="pair-160-open">}</span><span class="token punctuation">;</span>

        <span class="token comment">// ------------------------------------------------------------</span>
        <span class="token comment">// | NOTE : printing data takes the majority of execution time |</span>
        <span class="token comment">// ------------------------------------------------------------</span>
        <span class="token comment">/*
        if (iterations % 6)
            std::cout &lt;&lt; startCapacity &lt;&lt; ' ';
        else
            std::cout &lt;&lt; '\n';
        */</span>

        str <span class="token operator">+=</span> <span class="token string">'K'</span><span class="token punctuation">;</span>

        <span class="token keyword keyword-int">int</span> endCapacity<span class="token punctuation brace-curly brace-open brace-level-3" id="pair-161-close">{</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword keyword-int">int</span><span class="token operator">&gt;</span></span></span><span class="token punctuation brace-round brace-open brace-level-4" id="pair-153-close">(</span>str<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation brace-round brace-open brace-level-5" id="pair-152-close">(</span><span class="token punctuation brace-round brace-close brace-level-5" id="pair-152-open">)</span><span class="token punctuation brace-round brace-close brace-level-4" id="pair-153-open">)</span> <span class="token punctuation brace-curly brace-close brace-level-3" id="pair-161-open">}</span><span class="token punctuation">;</span>

        <span class="token keyword keyword-if">if</span> <span class="token punctuation brace-round brace-open brace-level-3" id="pair-154-close">(</span>startCapacity <span class="token operator">!=</span> endCapacity<span class="token punctuation brace-round brace-close brace-level-3" id="pair-154-open">)</span>
            preAverage <span class="token operator">+=</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword keyword-double">double</span><span class="token operator">&gt;</span></span></span><span class="token punctuation brace-round brace-open brace-level-3" id="pair-155-close">(</span>endCapacity<span class="token punctuation brace-round brace-close brace-level-3" id="pair-155-open">)</span> <span class="token operator">/</span> startCapacity<span class="token punctuation">;</span>
        <span class="token keyword keyword-else">else</span>
            <span class="token operator">++</span>offset<span class="token punctuation">;</span>

        <span class="token operator">++</span>iterations<span class="token punctuation">;</span>
    <span class="token punctuation brace-curly brace-close brace-level-2" id="pair-162-open">}</span>

    <span class="token comment">// performs average calculation</span>
    <span class="token keyword keyword-double">double</span> average<span class="token punctuation brace-curly brace-open brace-level-2" id="pair-163-close">{</span> preAverage <span class="token operator">/</span> <span class="token punctuation brace-round brace-open brace-level-3" id="pair-156-close">(</span>iterations <span class="token operator">-</span> offset <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation brace-round brace-close brace-level-3" id="pair-156-open">)</span> <span class="token punctuation brace-curly brace-close brace-level-2" id="pair-163-open">}</span><span class="token punctuation">;</span>

    std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"\nAverage growth ratio: "</span> <span class="token operator">&lt;&lt;</span> average<span class="token punctuation">;</span>

    <span class="token keyword keyword-return">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation brace-curly brace-close brace-level-1" id="pair-164-open">}</span><span aria-hidden="true" class="line-numbers-rows"><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 32px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span></span><span class="line-numbers-sizer" style="display: none;"></span></code></pre><div class="toolbar"><div class="toolbar-item"><button class="copy-to-clipboard-button" type="button" data-copy-state="copy"><span>Copy</span></button></div></div></div>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    
</div>
</div>
</div><div id="wpdiscuz_form_anchor-469137_0"></div></div><div id="wpd-comm-468359_0" class="wpd-comment wpd_comment_level-1"><div class="wpd-comment-wrap wpd-blog-guest">
    <div id="comment-468359" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="salah" src="https://secure.gravatar.com/avatar/bd9ec86e30159b7f17353cdbd3d4c45c?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/bd9ec86e30159b7f17353cdbd3d4c45c?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    salah
</div>
    
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    
    <div class="wpd-comment-date" title="July 16, 2020 3:35 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    July 16, 2020 3:35 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-468359"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <div class="code-toolbar"><pre class="line-numbers language-cpp" tabindex="0"><code class="match-braces language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span></span>

<span class="token keyword keyword-int">int</span> <span class="token function">main</span><span class="token punctuation brace-round brace-open brace-level-1" id="pair-165-close">(</span><span class="token punctuation brace-round brace-close brace-level-1" id="pair-165-open">)</span> <span class="token punctuation brace-curly brace-open brace-level-1" id="pair-169-close">{</span>

    std<span class="token double-colon punctuation">::</span>string name<span class="token punctuation">;</span>
    name<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation brace-round brace-open brace-level-2" id="pair-166-close">(</span><span class="token number">50</span><span class="token punctuation brace-round brace-close brace-level-2" id="pair-166-open">)</span><span class="token punctuation">;</span>
    std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"name is "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation brace-round brace-open brace-level-2" id="pair-168-close">(</span>name<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation brace-round brace-open brace-level-3" id="pair-167-close">(</span><span class="token punctuation brace-round brace-close brace-level-3" id="pair-167-open">)</span> <span class="token operator">?</span> <span class="token string">"empty"</span> <span class="token operator">:</span> <span class="token string">"not empty"</span><span class="token punctuation brace-round brace-close brace-level-2" id="pair-168-open">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">"\n"</span><span class="token punctuation">;</span>
    std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> name <span class="token punctuation">;</span>



    <span class="token keyword keyword-return">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation brace-curly brace-close brace-level-1" id="pair-169-open">}</span><span aria-hidden="true" class="line-numbers-rows"><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span></span><span class="line-numbers-sizer" style="display: none;"></span></code></pre><div class="toolbar"><div class="toolbar-item"><button class="copy-to-clipboard-button" type="button" data-copy-state="copy"><span>Copy</span></button></div></div></div>
<p>Why when using resize(50), thought name is empty, I am getting result:<br>
"name is not empty"</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    <div class="wpd-toggle wpd-hidden wpd_not_clicked" wpd-tooltip="Hide Replies">
    <i class="fas fa-chevron-up"></i>
</div>
</div>
</div>
</div><div id="wpdiscuz_form_anchor-468359_0"></div><div id="wpd-comm-468577_468359" class="wpd-comment wpd-reply wpd_comment_level-2"><div class="wpd-comment-wrap wpd-blog-user wpd-blog-subadministrator">
    <div id="comment-468577" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="nascardriver" src="https://secure.gravatar.com/avatar/11b09338d6108681887f55d784841888?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/11b09338d6108681887f55d784841888?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    nascardriver
</div>
    <div class="wpd-comment-label" wpd-tooltip="Sub-admin" wpd-tooltip-position="top">
    <span>Sub-admin</span>
</div>
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    <div class="wpd-reply-to">
    <i class="far fa-comments"></i>
    Reply to&nbsp;
    <a href="#comment-468359">
        salah
    </a>
</div>
    <div class="wpd-comment-date" title="July 19, 2020 2:42 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    July 19, 2020 2:42 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-468577"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p><code>resize</code> appends characters to the string to get to the new size. All those characters are null-terminators, so you don't see anything when you print the name.</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    <div class="wpd-toggle wpd-hidden wpd_not_clicked" wpd-tooltip="Hide Replies">
    <i class="fas fa-chevron-up"></i>
</div>
</div>
</div>
</div><div id="wpdiscuz_form_anchor-468577_468359"></div><div id="wpd-comm-468590_468577" class="wpd-comment wpd-reply wpd_comment_level-3"><div class="wpd-comment-wrap wpd-blog-guest">
    <div id="comment-468590" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="SALAH" src="https://secure.gravatar.com/avatar/bd9ec86e30159b7f17353cdbd3d4c45c?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/bd9ec86e30159b7f17353cdbd3d4c45c?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    SALAH
</div>
    
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    <div class="wpd-reply-to">
    <i class="far fa-comments"></i>
    Reply to&nbsp;
    <a href="#comment-468577">
        nascardriver
    </a>
</div>
    <div class="wpd-comment-date" title="July 19, 2020 5:52 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    July 19, 2020 5:52 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-468590"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>Thanks nascardriver for all<br>
your efforts</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    
</div>
</div>
</div><div id="wpdiscuz_form_anchor-468590_468577"></div></div></div></div><div id="wpd-comm-436938_0" class="wpd-comment wpd_comment_level-1"><div class="wpd-comment-wrap wpd-blog-guest">
    <div id="comment-436938" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="masterOfNothing" src="https://secure.gravatar.com/avatar/3af5e908dddc25a65f24e0653394b5fb?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/3af5e908dddc25a65f24e0653394b5fb?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    masterOfNothing
</div>
    
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    
    <div class="wpd-comment-date" title="November 12, 2019 9:04 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    November 12, 2019 9:04 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-436938"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>What does exactly size_type do? Is it an unsigned int? Is this the standard of C++ library?</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    <div class="wpd-toggle wpd-hidden wpd_not_clicked" wpd-tooltip="Hide Replies">
    <i class="fas fa-chevron-up"></i>
</div>
</div>
</div>
</div><div id="wpdiscuz_form_anchor-436938_0"></div><div id="wpd-comm-436939_436938" class="wpd-comment wpd-reply wpd_comment_level-2"><div class="wpd-comment-wrap wpd-blog-user wpd-blog-subadministrator">
    <div id="comment-436939" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="nascardriver" src="https://secure.gravatar.com/avatar/11b09338d6108681887f55d784841888?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/11b09338d6108681887f55d784841888?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    nascardriver
</div>
    <div class="wpd-comment-label" wpd-tooltip="Sub-admin" wpd-tooltip-position="top">
    <span>Sub-admin</span>
</div>
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    <div class="wpd-reply-to">
    <i class="far fa-comments"></i>
    Reply to&nbsp;
    <a href="#comment-436938">
        masterOfNothing
    </a>
</div>
    <div class="wpd-comment-date" title="November 12, 2019 9:11 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    November 12, 2019 9:11 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-436939"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p><code>size_type</code> is used as a generic type for anything with a size in the standard library. It's type isn't the same for all containers. For <code>std::string</code>, it's <code>std::size_t</code> (Which is an unsigned integer, but not necessarily an <code>unsigned int</code>).</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    <div class="wpd-toggle wpd-hidden wpd_not_clicked" wpd-tooltip="Hide Replies">
    <i class="fas fa-chevron-up"></i>
</div>
</div>
</div>
</div><div id="wpdiscuz_form_anchor-436939_436938"></div><div id="wpd-comm-457257_436939" class="wpd-comment wpd-reply wpd_comment_level-3"><div class="wpd-comment-wrap wpd-blog-guest">
    <div id="comment-457257" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="Sapinder" src="https://secure.gravatar.com/avatar/fef9726e6632f2c5d23156a66456f2b8?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/fef9726e6632f2c5d23156a66456f2b8?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    Sapinder
</div>
    
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    <div class="wpd-reply-to">
    <i class="far fa-comments"></i>
    Reply to&nbsp;
    <a href="#comment-436939">
        nascardriver
    </a>
</div>
    <div class="wpd-comment-date" title="March 16, 2020 1:37 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    March 16, 2020 1:37 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-457257"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>"...but not necessarily an 'unsigned int'"<br>
Do you mean to say there's some difference between 'unsigned integer' and 'unsigned int'?</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    <div class="wpd-toggle wpd-hidden wpd_not_clicked" wpd-tooltip="Hide Replies">
    <i class="fas fa-chevron-up"></i>
</div>
</div>
</div>
</div><div id="wpdiscuz_form_anchor-457257_436939"></div><div id="wpd-comm-457305_457257" class="wpd-comment wpd-reply wpd_comment_level-4"><div class="wpd-comment-wrap wpd-blog-user wpd-blog-subadministrator">
    <div id="comment-457305" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="nascardriver" src="https://secure.gravatar.com/avatar/11b09338d6108681887f55d784841888?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/11b09338d6108681887f55d784841888?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    nascardriver
</div>
    <div class="wpd-comment-label" wpd-tooltip="Sub-admin" wpd-tooltip-position="top">
    <span>Sub-admin</span>
</div>
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    <div class="wpd-reply-to">
    <i class="far fa-comments"></i>
    Reply to&nbsp;
    <a href="#comment-457257">
        Sapinder
    </a>
</div>
    <div class="wpd-comment-date" title="March 16, 2020 8:55 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    March 16, 2020 8:55 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-457305"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>Yes, they're different. <code>unsigned int</code> means</p>
<div class="code-toolbar"><pre class="line-numbers language-cpp" tabindex="0"><code class="match-braces language-cpp"><span class="token keyword keyword-unsigned">unsigned</span> <span class="token keyword keyword-int">int</span><span aria-hidden="true" class="line-numbers-rows"><span style="height: 16px;"></span></span><span class="line-numbers-sizer" style="display: none;"></span></code></pre><div class="toolbar"><div class="toolbar-item"><button class="copy-to-clipboard-button" type="button" data-copy-state="copy"><span>Copy</span></button></div></div></div>
<p>whereas unsigned integer is any integer type that is unsigned, ie.</p>
<div class="code-toolbar"><pre class="line-numbers language-cpp" tabindex="0"><code class="match-braces language-cpp"><span class="token keyword keyword-unsigned">unsigned</span> <span class="token keyword keyword-char">char</span>
<span class="token keyword keyword-unsigned">unsigned</span> <span class="token keyword keyword-short">short</span>
<span class="token keyword keyword-unsigned">unsigned</span> <span class="token keyword keyword-int">int</span>
<span class="token keyword keyword-unsigned">unsigned</span> <span class="token keyword keyword-long">long</span>
<span class="token keyword keyword-unsigned">unsigned</span> <span class="token keyword keyword-long">long</span> <span class="token keyword keyword-long">long</span><span aria-hidden="true" class="line-numbers-rows"><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span><span style="height: 16px;"></span></span><span class="line-numbers-sizer" style="display: none;"></span></code></pre><div class="toolbar"><div class="toolbar-item"><button class="copy-to-clipboard-button" type="button" data-copy-state="copy"><span>Copy</span></button></div></div></div>
<p><code>std::size_t</code> is any one of those, but it's not one in specific.</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    <div class="wpd-toggle wpd-hidden wpd_not_clicked" wpd-tooltip="Hide Replies">
    <i class="fas fa-chevron-up"></i>
</div>
</div>
</div>
</div><div id="wpdiscuz_form_anchor-457305_457257"></div><div id="wpd-comm-457343_457305" class="wpd-comment wpd-reply wpd_comment_level-5"><div class="wpd-comment-wrap wpd-blog-guest">
    <div id="comment-457343" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="Sapinder" src="https://secure.gravatar.com/avatar/fef9726e6632f2c5d23156a66456f2b8?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/fef9726e6632f2c5d23156a66456f2b8?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    Sapinder
</div>
    
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    <div class="wpd-reply-to">
    <i class="far fa-comments"></i>
    Reply to&nbsp;
    <a href="#comment-457305">
        nascardriver
    </a>
</div>
    <div class="wpd-comment-date" title="March 16, 2020 8:07 pm">
    <i class="far fa-clock" aria-hidden="true"></i>
    March 16, 2020 8:07 pm
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-457343"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>Oh it just slipped off my mind! Thanks for reminding!</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    
</div>
</div>
</div><div id="wpdiscuz_form_anchor-457343_457305"></div></div></div></div><div id="wpd-comm-437279_436939" class="wpd-comment wpd-reply wpd_comment_level-3"><div class="wpd-comment-wrap wpd-blog-guest">
    <div id="comment-437279" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="masterOfNothing" src="https://secure.gravatar.com/avatar/3af5e908dddc25a65f24e0653394b5fb?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/3af5e908dddc25a65f24e0653394b5fb?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    masterOfNothing
</div>
    
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    <div class="wpd-reply-to">
    <i class="far fa-comments"></i>
    Reply to&nbsp;
    <a href="#comment-436939">
        nascardriver
    </a>
</div>
    <div class="wpd-comment-date" title="November 14, 2019 10:24 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    November 14, 2019 10:24 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-437279"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>I see. Thanks.</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    
</div>
</div>
</div><div id="wpdiscuz_form_anchor-437279_436939"></div></div></div></div><div id="wpd-comm-376822_0" class="wpd-comment wpd_comment_level-1"><div class="wpd-comment-wrap wpd-blog-guest">
    <div id="comment-376822" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="Trevor29" src="https://secure.gravatar.com/avatar/89e09469e29e27e2e273fda7669329f0?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/89e09469e29e27e2e273fda7669329f0?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    Trevor29
</div>
    
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    
    <div class="wpd-comment-date" title="October 28, 2018 8:56 pm">
    <i class="far fa-clock" aria-hidden="true"></i>
    October 28, 2018 8:56 pm
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-376822"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>My understanding is that if you request a larger capacity, then the run-time will try to increase the size of the memory block which may or may not succeed depending on whether the next memory is free or being used. If it is free, then the increase works without reallocation. If it is not free or not enough of it is free, then a reallocation is needed. If you create a string and the next memory operation is to increase the size of the string, there is a very good chance that the increase can be made into free memory, whereas if you create several strings, then try increasing the size of one of the first strings, that increase will trigger a reallocation.<br>
Trevor</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    <div class="wpd-toggle wpd-hidden wpd_not_clicked" wpd-tooltip="Hide Replies">
    <i class="fas fa-chevron-up"></i>
</div>
</div>
</div>
</div><div id="wpdiscuz_form_anchor-376822_0"></div><div id="wpd-comm-457382_376822" class="wpd-comment wpd-reply wpd_comment_level-2"><div class="wpd-comment-wrap wpd-blog-user wpd-blog-subadministrator">
    <div id="comment-457382" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-avatar ">
    <img alt="nascardriver" src="https://secure.gravatar.com/avatar/11b09338d6108681887f55d784841888?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/11b09338d6108681887f55d784841888?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy">
</div>
    <div class="wpd-user-info">
    <div class="wpd-uinfo-top">
    <div class="wpd-comment-author ">
    nascardriver
</div>
    <div class="wpd-comment-label" wpd-tooltip="Sub-admin" wpd-tooltip-position="top">
    <span>Sub-admin</span>
</div>
    
    
    <div class="wpd-space"></div>
</div>
    <div class="wpd-uinfo-bottom">
    
    <div class="wpd-reply-to">
    <i class="far fa-comments"></i>
    Reply to&nbsp;
    <a href="#comment-376822">
        Trevor29
    </a>
</div>
    <div class="wpd-comment-date" title="March 17, 2020 6:20 am">
    <i class="far fa-clock" aria-hidden="true"></i>
    March 17, 2020 6:20 am
</div>
</div>
</div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-comment-url="https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/#comment-457382"></i></span>
</div>
</div>
    <div class="wpd-comment-text">
    <p>Not quite. When you create a vector, it might reserve more space than required. Say you create a vector with 10 elements, the vector will actually allocate memory for 16 (Varies depending on the implementation) elements. When you go to push the next element, the memory has already been allocated beforehand, so no reallocation is necessary. When you get to insert the 17th element, the vector has to reallocate. Then it will allocate memory for eg. 32 elements, copy the 16 elements over, and insert the 17th.</p>
<p>Another approach, one that is common for strings, is to allocate the exact amount of memory needed (Because it's rare that a string grows). When you append something, a reallocation happens. When you remove something from the string, no reallocation is made. The original memory is still reserved, but not used. When you append something after you shortened the string, that memory can be reused without a reallocation (Unless the string after appending is too long).</p>
<p>EDIT: I thought I received a notification for your comment and didn't look at the post date. I'll leave this reply for other people.</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z"></path></svg>
    </div>
    <div class="wpd-vote-result" title="0">0</div>
    <div class="wpd-vote-down wpd_not_clicked wpd-dislike-hidden">
        <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    
</div>
</div>
</div><div id="wpdiscuz_form_anchor-457382_376822"></div></div></div><div class="wpdiscuz-comment-pagination" style="display:none"><div class="wpd-load-more-submit-wrap"><button name="submit" data-lastparentid="376822" class="wpd-load-more-submit wpd-loaded wpd-prim-button">
Load More Comments</button></div><input id="wpdiscuzHasMoreComments" type="hidden" value="1"></div></div></div></div></div><div id="wpdiscuz-loading-bar" class="wpdiscuz-loading-bar-unauth"></div><div id="wpdiscuz-comment-message" class="wpdiscuz-comment-message-unauth"></div><div class="code-block code-block-14" style="margin: 8px 0; clear: both;">
<div class="cf_monitor"><div id="ezoic-pub-ad-placeholder-104"> </div></div></div>
</main><aside id="primary" class="widget-area sidey" role="complementary" itemscope="" itemtype="http://schema.org/WPSideBar"><section id="custom_html-2" class="widget_text widget-container widget_custom_html"><div class="textwidget custom-html-widget"><div class="cf_monitor" style="float:right"><span id="ezoic-pub-ad-placeholder-103" style="display:block!important;float:none!important;line-height:0;margin-bottom:15px!important;margin-left:0!important;margin-right:0!important;margin-top:15px!important;max-width:100%!important;min-height:600px;min-width:160px;padding:0;text-align:center!important"><div><span class="ezoic-ad" data-ez-name="learncpp_com-large-billboard-2"><span id="div-gpt-ad-learncpp_com-large-billboard-2-0" ezaw="160" ezah="600" style="position:relative;z-index:0;display:block;padding:0;" class="ezoic-ad"></span></span></div></span></div></div></section></aside><aside id="secondary" class="widget-area sidey" role="complementary" itemscope="" itemtype="http://schema.org/WPSideBar"><section id="custom_html-3" class="widget_text widget-container widget_custom_html"><div class="textwidget custom-html-widget"><div class="cf_monitor"><div style="float:left"><span id="ezoic-pub-ad-placeholder-102" style="display:block!important;float:none!important;line-height:0;margin-bottom:15px!important;margin-left:0!important;margin-right:0!important;margin-top:15px!important;max-width:100%!important;min-height:600px;min-width:300px;padding:0;text-align:center!important"><div><span class="ezoic-ad" data-ez-name="learncpp_com-box-1"><span id="div-gpt-ad-learncpp_com-box-1-0" ezaw="300" ezah="600" style="position:relative;z-index:0;display:block;padding:0;" class="ezoic-ad"></span></span></div></span></div></div></div></section></aside>