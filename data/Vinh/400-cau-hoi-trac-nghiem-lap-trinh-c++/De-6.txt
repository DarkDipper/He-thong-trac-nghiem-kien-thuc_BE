@
    #include <stdio.h>
    #include <conio.h>
    void swap(char **, char **);
    int main()
    {
      char *pstr[2] = {"LAPTRINHC++", ".NET"};
      swap(&pstr[0], &pstr[1]);
      printf("%s%s", pstr[0], pstr[1]);
      getch();
    }
    void swap(char **t1, char **t2)
    {
      char *t;
      t=*t1;
      *t1=*t2;
      *t2=t;
    }
    
    Output của chương trình là gì?
A. LAPTRINHC++.NET
B. .NETLAPTRINHC++
C. Địa chỉ của pstr[0] Địa chỉ của pstr[1]
B. .NETLAPTRINHC++
6252a66241a9bed830e0419b;62543f006eddb741297c92ff
@
    ____ là một hàm thành viên đặc biệt được sử dụng để khởi tạo các thành viên dữ liệu của một lớp.
A. Constructor
B. Destructor
C. Static method
A. Constructor
6252a66241a9bed830e041a2
@
    Quyền truy cập mặc định cho các thành viên của một lớp là ___.
A. private
B. public
C. protected
D. protect
A. private
6252a66d41a9bed830e04216
@
   Các hàm thành viên của một lớp thường được tạo ở kiểu ___ và các thành viên dữ liệu của một lớp thường được tạo ở kiểu ___.
A. private, public
B. protected, public
C. public, private
C. public, private
6252a66e41a9bed830e0421c
@
Tính kế thừa cho phép ___ giúp tiết kiệm thời gian phát triển và khuyến khích sử dụng phần mềm chất lượng.
A. khả năng tái sử dụng (reusability)
B. tính đóng gói (encapsulation)
C. tính phát triển (development)
A. khả năng tái sử dụng (reusability)
6252a66d41a9bed830e04219
@
Ba phương thức chỉ định truy cập hàm thành viên là ___, ___ và ___.
A. public, private, protected
B. public, private, protect
C. public, private, static
A. public, private, protected
6252a66e41a9bed830e0421c
@
Một hàm ảo (pure virtual) được chỉ định bằng cách đặt ___ ở cuối nguyên mẫu của nó trong lớp Định nghĩa.
A. =0
B. =1
C. =-1
A. =0
6252a66d41a9bed830e04215
@
Một lớp được gọi là lớp cơ sở trừu tượng nếu nó có hàm ___
A. pure virtual
B. static
C. private
A. pure virtual
6252a66d41a9bed830e04215
@
   Thời gian chạy hoặc cấp phát động của bộ nhớ có thể được thực hiện bằng cách sử dụng toán tử ___ trong C++.
A. new
B. alloc
C. malloc
A. new
6253ed4b9a5e3f8c443f951b
@
    ___ là một tập hợp các thực thể hoặc các giá trị.
A. Class
B. Object
C. Function
B. Object
6252a66741a9bed830e041d6
@
 Con trỏ là ___ chứa địa chỉ của các biến khác và ____.
A. giá trị, đối tượng
B. đối tượng, lớp
C. biến, hàm
C. biến, hàm
6252a66241a9bed830e0419d
@
    The(assert.h) header được sử dụng cho việc ___ .
A. debugging
B. kiểm tra rò rỉ bộ nhớ
C. library for time
A. debugging
62551233f214278e765adeed
@
Hai hoặc nhiều hàm có thể có cùng tên, miễn là ___ của chúng khác nhau.
A. giá trị trả về
B. danh sách các tham số
C. Tất cả đều đúng
B. danh sách các tham số
6252a66b41a9bed830e04203
@
    Constructor được tạo với các đối số mặc định cho tất cả các tham số của nó được gọi là ___ constructor.
A. static
B. run-time
C. default
C. default
6252a66241a9bed830e041a3
@
    Static member functions chỉ có thể truy cập các ___ data members của một lớp
A. dynamic
B. static
C. public
B. static
6252a66f41a9bed830e04230
@
  Với tính kế thừa, các thành viên public và được bảo vệ của lớp cơ sở trở thành thành viên ___ của lớp dẫn xuất.
A. private
B. public
C. protected
A. private
6252a66d41a9bed830e0421a
@
    Khối ___ chứa mã trực tiếp hoặc gián tiếp có thể gây ra một ngoại lệ.
A. catch
B. try
C. Tất cả đều sai
B. try
6252a67041a9bed830e0423c
@
Khi viết hàm hoặc mẫu lớp, người ta sử dụng ___ để chỉ định kiểu dữ liệu chung.
A. template parameters
B. keyword
C. Tất cả đều đúng
A. template parameters
6252a66d41a9bed830e04210
