Câu 1:
Cách sử dụng đúng các toán tử điều kiện được sử dụng trong C/C++?
A. a > b ? c = 20 : c = 21;
B. a > b ? c = 20;
C. max = a>b ? a>c ? a : c : b>c ? b : c;
D. return (a>b)?(a:b);
C là đáp án đúng
Câu lệnh max = a>b ? a>c ? a : c : b>c ? b : c;  => max = a > b ? (a > c ? a : c):(b > c ? b : c);
Câu 2:
Biểu thức bên tay phải của || toán tử không được đánh giá nếu phía bên trái xác định kết quả.
A. Đúng
B. Sai
A là đáp án đúng
Ví dụ: if(a || b) nếu a là khác 0, b sẽ không được đánh giá.
Câu 3:
Điều nào sau đây thể hiện đúng thứ bậc của toán tử số học trong C?
A. / + * –
B. * – / +
C. + – / *
D. / * + –
D là đáp án đúng
Câu 4:
Thứ tự đánh giá biểu thức nào sau đây là đúng?
z = x + y * z / 4% 2 - 1;
A. * / % + – =
B. = * / % + –
C. / * % – + =
D. * % / – + =
A là đáp án đúng
Câu 5:
#include<stdio.h>
#include<conio.h>
int main(){
int i = 4, j = -1, k = 0, w, x, y, z;
w = i || j || k;
x = i && j && k;
y = i || j && k;
z = i && j || k;
printf("%d %d %d %d", w, x, y, z);
getch();
}
Output của chương trình này là gì?
A. 1 1 1 1
B. 1 0 0 1
C. 1 0 1 1
D. Kết quả khác
C là đáp án đúng
Câu 6:
#include <stdio.h>
#include <conio.h>
void main(){
static int a[20];
int i = 0;
a[i] = i;
printf("%d %d %d", a[0], a[1], i);
getch();
}
Output của chương trình này là gì?
A. 1 0 1
B. 1 1 1
C. 0 0 0
D. 0 1 0
C là đáp án đúng
Mảng static được tự động khởi tạo với giá trị 0
Câu 7:
#include <stdio.h>
#include <conio.h>
void main()
{
int x = 12, y = 7, z = 2;
z = x != 4 || y == 2;
printf("z = %d", z);
getch();
}
Output của chương trình này là gì?
A. z = 0
B. z = 1
C. z = 4
D. z = 3
B là đáp án đúng
z = x != 4 || y == 2 = (x != 4) || (y == 2) = 1 || 0 = 1
Câu 8:
Mỗi toán tử đều có một trình tự kết hợp
A. Có
B. Không
B là đáp án đúng
Trình tự kết hợp của mỗi toán tử phụ thuộc vào nó đi kèm với toán tử nào.
Câu 9:
#include <stdio.h>
#include <conio.h>
void main()
{
int i = 3, j = 2, k = -1, m;
m = ++i||++j&&++k;
printf("%d %d %d %d", i, j, k, m);
getch();
}
Output của chương trình này là gì?
A. 4 2 -1 1
B. 4 3 0 1
C. 3 2 -1 1
A là đáp án đúng
m = ++i || ++j && ++k = (++i) || (++j && ++k). Vì ++i = 4 != 0 nên (++j && ++k) không được
thực hiện.
Câu 10:
#include <stdio.h>
#include <conio.h>
void main()
{
int i = 3, j = 2, k = -1, m;
m = ++i&&++j&&++k;
printf("%d %d %d %d", i, j, k, m);
getch();
}
Output của chương trình này là gì?
A. 4 3 0 0
B. 3 3 0 1
C. 4 2 0 0
D. Tất cả đều sai
A là đáp án đúng
m = ++i && ++j && ++k = (++i) && (++j) && (++k) = 4 && 3 && 0 = 0
Câu 11:
a <= 20 ? (b = 30) : (c = 30);
(a <= 20) ? b : (c = 30);
Hai câu lệnh sau có giống nhau không?
A. Có
B. Không
A là đáp án đúng
a <= 20 ? (b = 30) : (c = 30) luôn trả về 30
Giá trị của “(a <= 20) ? b : (c = 30)” phụ thuộc vào giá trị của b
Câu 12:
#include <stdio.h>
#include <conio.h>
void main()
{
int i = 2;
int j = i + (1, 2, 3, 4);
printf("j = %d", j);
getch();
}
Output của chương trình này là gì?
A. 6
B. 3
C. 12
D. Complier error
A là đáp án đúng
j = i + (1, 2, 3, 4) = i + 4 = 6
Câu 13:
#include <stdio.h>
#include <conio.h>
void main()
{
int n = 2;
printf("%d %d %d", n <= 3, n = 4, n >= 2);
getch();
}
Output của chương trình này là gì?
A. 0 4 1
B. 1 4 1
C. 4 4 1
D. Tất cả đều sai
A là đáp án đúng
Thứ tự thực hiện các phép toán trong printf từ phải sang trái.
(n >= 2) = (2 >= 2) = 1
n = 4
n <= 3 = (4 <= 3) = 0
Câu 14:
#include <stdio.h>
#include <conio.h>
void main()
{
int n = 2;
printf("%d %d", ++n, ++n);
getch();
}
Output của chương trình này là gì?
A. 4 4
B. 3 4
C. 2 2
D. 2 3
A là đáp án đúng
Câu 15:
#include <stdio.h>
#include <conio.h>
void main()
{
int a = 10, b = 19;
int c;
c = (a == 10 || b < 20);
printf("c = %d", c);
getch();
}
Output của chương trình này là gì?
A. c = 1
B. c = 29
C. c = 10
D. c = 19
A là đáp án đúng
Câu 16:
#include <stdio.h>
#include <conio.h>
void main()
{
int x = 4, y, z;
y = --x;
z = x--;
printf("%d %d %d", x, y, z);
getch();
}
Output của chương trình này là gì?
A. 4 3 2
B. 4 3 3
C. 2 3 2
D. 2 3 3
D là đáp án đúng
Câu 17:
#include <stdio.h>
#include <conio.h>
void main()
{
int k, num = 20;
k = (num>5 ? (num <= 10 ? 10 : 30): 40);
printf("%d", k);
getch();
}
Output của chương trình này là gì?
A. 20
B. 30
C. 40
D. 10
B là đáp án đúng
Câu 18:
#include <stdio.h>
#include <conio.h>
void main()
{
int i = 3;
i = i++;
printf("%d", i);
getch();
}
Output của chương trình này là gì?
A. 4
B. 3
C. Complier error
D. None of above
A là đáp án đúng
Câu 19:
#include <stdio.h>
#include <conio.h>
void main()
{
int arr[3] = {3};
int i;
for(i = 0; i <= 2; i++)
printf("%d, ", arr[i]);
getch();
}
A. 3, 0, 0,
B. 3, 3, 3,
C. 3, garbage, garbage
D. Kết quả khác
A là đáp án đúng
Câu 20:
float func()
{
int r = 0, d = 0, i = 0;
for (i; i < 2; i++)
{
r += 5 / d;
}
return r;
}
What is returned by function func()?
A. 5
B. 0
C. Exception
D. Kết quả khác
C là đáp án đúng
Câu 21:
void main()
{
char s[] = "man";
int i;
for(i = 0; s[i]; i++)
printf("%c%c%c%c\t", s[i], *(s+i), *(i+s), i[s]);
getch();
}
What will be output when you will execute following c code?
A. mmmm aaaa nnnn
B. mmm aaa nnn
C. mmmm aaa nnn
D. Kết quả khác
A là đáp án đúng
Vòng for() sẽ bắt đầu với i = 0, vòng for() sẽ kết thúc khi s[i] = NULL (kết thúc chuỗi s).
s[i] = *(s+i) = *(i+s) = i[s] : kí tự thứ i của mảng s.
Câu 22:
void main()
{
int i = 0;
char ch = 'A';
do
{
putchar(ch);
}
while(i++ < 5 || ++ch <= 'F');
getch();
}
What will be output when you will execute following c code?
A. AAAAAABCDEF
B. AAAAAABCDE
C. ABCDEF
D. Kết quả khác
A là đáp án đúng
Vòng lặp do while(). Vòng lặp này kết thúc khi biểu thức trong while là Sai. i = 0 ---> in ra kí tự: A ,
i++ < 5 ---> giá trị i sẽ được so sánh với 5 trước. Sau đó, i++ mới được thực hiện.
Vì i = 0 nên biểu thức i++ < 5 là Đúng nên biếu thức ++ch <= 'F' sẽ không được thực hiện.
i = 1 ---> in ra kí tự: AA
...
i = 4 ---> in ra kí tự :AAAAA
i = 5 ---> in ra kí tự :AAAAAA, thì i++ < 5 là Sai. Biểu thức ++ch <= 'F' sẽ được thực hiện. Vòng
lặp sẽ tiếp tục in ra: BCDEF.
Câu 23:
void main()
{
int array[2][2] = {0, 1, 2, 3};
int i;
int sum = 0;
for (i = 0; i < 4; ++i)
{
int x, y;
x = i % 2;
if (x)
{
y = 0;
}
else
{
y = 1;
}
sum += array[x][y];
}
printf("%d\n", sum);
getch();
}
Output của chương trình là gì?
A. 3
B. 4
C. 5
D. 6
D là đáp án đúng
i = 0 →x = 0,y = 1 → array[0][1] = 1
i = 1 → x = 1,y = 0 → array[1][0] = 2
i = 2 → x = 0,y = 1 → array[0][1] = 1
i = 3 → x = 1,y = 0 → array[1][0] = 2
Câu 24:
#include <stdio.h>
#include <conio.h>
void main()
{
int k;
for (k = -3; k < -5; k++)
printf("Hello");
getch();
}
Output của chương trình là gì?
A. Hello
B.Nothing
C. Complier Error
D. Run time error
B là đáp án đúng
Ở trên là cách viết tắt của vòng lặp for. Dạng đầy đủ là:
for (k = -3; k < -5; k++){ printf("Hello");}
Với k = -3 ( k > -5) nên các lệnh trong vòng for không được thực hiện.
Câu 25:
void main()
{
double k = 0;
for (k = 0.0; k < 3.0; k++);
printf("%lf", k);
getch();
}
Output của chương trình là gì?
A. 012
B. Run time error
C. 3
D. 2
C là đáp án đúng
Cách viết for (k = 0.0; k < 3.0; k++); tương đương với cách viết đầy đủ: for (k = 0.0; k < 3.0; k++) {}
khi vòng for kết thúc, lệnh printf("%lf", k) mới được thực hiện.
Câu 26:
#include <stdio.h>
int main()
{
int i = 0;
for (; ; ; )
printf("In for loop\n");
printf("After loop\n");
}
Output của chương trình là gì?
A. Biên dịch lỗi thời gian
B. Vòng lặp vô hạn tuần hoàn
C. Không có gì cả
A là đáp án đúng
Vòng lặp for() không có biểu thức khởi tạo.
Câu 27:
#include <conio.h>
#include <stdio.h>
int foo();
void main()
{
int i = 0;
for (foo(); i == 1; i = 2)
printf("In for loop\n");
printf("After loop\n");
getch();
}
int foo()
{
return 1;
}
Output của chương trình là gì?
A. In for loop
B. After loop
C. Complie error
B là đáp án đúng
Biến i = 0, giá trị logic của biểu thức “i == 1” = Sai → vòng for kết thúc. Lệnh printf(“In for loop\n”)
không được thực hiện.
Câu 28:
#include <conio.h>
#include <stdio.h>
int main()
{
int i = 0;
while (i = 0)
printf("Đúng\n");
printf("Sai\n");
getch();
}
Output của chương trình là gì?
A. Đúng
B. Sai
C. Complie Error
D. Kết quả khác
B là đáp án đúng
Vòng while sẽ kết thúc khi biểu thức trong while là Sai. Biểu thức i = 0 chỉ là phép gán. Giá trị của biểu
thức này là 0 tương đương với Sai. Lệnh printf(“Đúng\n”) sẽ không được thực hiện.
Câu 29:
#include <conio.h>
#include <stdio.h>
int main()
{
int i = 0, j = 0;
while (i < 5, j < 10)
{
i++;
j++;
}
printf("%d, %d\n", i, j);
getch();
}
Output của chương trình là gì?
A. 5, 5
B. 10, 10
C. Syntax error
B là đáp án đúng
Biểu thức của vòng lặp while có thể là nhiều biểu thức và vòng lặp while sẽ chỉ quan tâm đến biểu thức cuối
cùng.
Câu 30:
#include <conio.h>
#include <stdio.h>
int main()
{
int a = 0, i = 0, b = 0 ;
for (i = 0; i < 5; i++)
{
a++;
continue;
b++;
}
printf("\n a = %d,b =%d", a, b);
getch();
}
Output của chương trình là gì?
A. a = 5,b = 5
B. a = 4,b = 4
C. a = 5,b = 0
D. Kết quả khác
C là đáp án đúng
Gặp lệnh continue, complier sẽ bỏ qua các câu lệnh tiếp theo và thực hiện hiện 1 vòng lặp mới. Như vậy, câu
lệnh b++ sẽ không bao giờ được thực hiện.
Câu 31:
void main()
{
int i = 0;
for (i = 0; i < 5; i++)
if (i < 4)
{
printf("Hello");
break;
}
getch();
}
Output của chương trình là gì?
A. Hello
B. Hello được in ra màn hình 3 lần
C. Hello được in ra màn hình 4 lần
D. Hello được in ra màn hình 5 lần
A là đáp án đúng
Khi gặp lệnh break chương trình sẽ thoát khỏi vòng lặp gần nhất với nó.
Câu 32:
#include <stdio.h>
#include <conio.h>
void main()
{
int i = 0;
for(; i <= 2; )
printf(" %d", ++i);
getch();
}
Output của chương trình là gì?
A. 1 2 3
B. 0 1 2 3
C. 0 1 2
A là đáp án đúng
Câu 33:
#include <stdio.h>
#include <conio.h>
void main()
{
int x;
for(x = 1; x <= 5; x++);
printf("%d", x);
getch();
}
Output của chương trình là gì?
A. 12345
B. 123456
C. 6
D. 1234
C là đáp án đúng
Câu 34:
#include <stdio.h>
#include <conio.h>
int main()
{
int i = 3;
while (i--)
{
int i = 100;
i--;
printf("%d ", i);
}
getch();
}
Output của chương trình là gì?
A. 99 99 99
B. Complier Error
C. 1
A là đáp án đúng
Nếu chương trình được biên dịch bằng trình biên dịch C, chương trình biên dịch báo lỗi vì biến chỉ được khai
báo đầu hàm.
Chương trình được biên dịch C++, không xảy ra lỗi
– Câu lệnh int i = 3 là biến global. Giá trị i trong biểu thức while có giá trị khởi tạo là 3.
– Câu lệnh int i = 100 là biến local. Câu lệnh trong vòng lặp lấy giá trị i = 100.
Câu 35:
#include <stdio.h>
#include <conio.h>
int main()
{
int i = 1024;
for (; i; i >>= 1)
printf("\nlaptrinhc++");
getch();
}
Bao nhiêu lần "laptrinhc++" sẽ được in trên màn hình?
A. 10
B. 11
C. Vô hạn
A là đáp án đúng
Vì i >>=1 -> i = i >> 1 = i/2. Mà 1024 = 2^10 = 1000000000 -> "laptrinhc++" sẽ được in ra 10 lần.
Câu 36:
#include <stdio.h>
#include <conio.h>
void main()
{
int i = 2, j = 2;
while(i+1? --i : j++)
printf("%d", i);
getch();
}
Output của chương trình là gì?
A. 1
B. 2
C. Complier Error
A là đáp án đúng
i+1 = 3 (trong ngôn ngữ C/C++, 3 có nghĩa là Đúng) -> lệnh --i = 1 được thực hiện.
Trong ngôn ngữ C/C++, 1 có nghĩa là Đúng -> in 1 ra màn hình.
Câu 37:
#include <stdio.h>
#include <conio.h>
void main()
{
int i, j;
i = j = 2;
while(--i&&j++)
printf("%d %d", i, j);
getch();
}
Output của chương trình là gì?
A. 1 3
B. 1 2
C. Không in ra kí tự nào
A là đáp án đúng
--i && j++ = 1 && 2 = 1 (Đúng), sau lệnh này i = 1 và j = 3 -> in 1 3 ra màn hình.(chú ý:
trong ngôn ngữ C/C++, với toán tử && cả hai toán hạng khác không thì kết quả sẽ bằng 1)
--i && j++ = 0 && 3 = 0 (Sai) -> thoát khỏi vòng lặp
Câu 38:
#include <stdio.h>
#include <conio.h>
int main()
{
int x = 011, i;
for(i = 0; i < x; i += 3)
{
printf("Start ");
continue;
printf("End");
}
getch();
}
Output của chương trình là gì?
A. Start End Start End
B. Start Start Start
C. Start Start Start Start
B là đáp án đúng
011 là số octal = 9. Lệnh printf("Start"); sẽ thực hiện 3 lần.
Câu 39:
#include <stdio.h>
#include <conio.h>
void main()
{
int s = 0;
while (s++ < 10)
{
if (s < 4 && s < 9)
continue;
printf(" %d ", s);
}
getch();
}
Output của chương trình này là gì?d
A. 1 2 3 4 5 6 7 8 9
B. 3 4 5 6 7 8 9
C. 4 5 6 7 8 9
D. 4 5 6 7 8 9 10
D là đáp án đúng
Xét biểu thức (s++ < 10). Giá trị của biến s được tăng sau khi so sánh s < 10. Do vậy, giá trị của biến
s trong vòng while từ 1 đến 10. Khi s = 1→ 3, biểu thức logic (s < 4 && s < 9) = Đúng,
lệnh continue được thực hiện và câu lệnh printf bị bỏ qua. Kết quả: 4 5 6 7 8 9 10 được in ra.
Câu 40:
#include <stdio.h>
#include <conio.h>
void main()
{
int i = 6;
while(i)
{
if (i > 5)
{
i--;
}
i = i + 5;
if (i > 34)
{
break;
}
}
printf("%d", i);
getch();
}
Output của chương trình là gì?
A. Vòng lặp vô hạn
B. 35
D. 39
C là đáp án đúng
Câu 41:
#include <stdio.h>
#include <conio.h>
int print(int i);
void main()
{
int i = 6;
while(print(i) || --i);
getch();
}
int print(int i)
{
printf("%d, ", i);
return 0;
}
Output của chương trình là gì?
A. 6, 5, 4, 3, 2, 1,
B. 6, 5, 4, 3, 2, 1, 0,
C. Complier Error
D. Vòng lặp vô hạn
A là đáp án đúng
Câu 42:
#include <stdio.h>
#include <conio.h>
int func(int* i);
void main()
{
int i = 15;
while(func(&i) && i++ > 0);
printf("%d", i);
getch();
}
int func(int* i)
{
*i -= 5;
return(*i);
}
Output của chương trình là gì?
A. 0
B. -1
C. -2
D. -3
B là đáp án đúng
Câu 43:
#include <stdio.h>
#include <conio.h>
void main()
{
static int i;
int j;
for(j = 0; j <= 5; j++)
switch(j)
{
case 1:
i++;
break;
case 2:
i+=2;
case 4:
i /= 1;
j += 1;
continue;
default:
--i;
continue;
}
printf ("%d", i);
getch();
}
Output của chương trình là gì?
A. 0
B. 2
C. 3
D. -4
B là đáp án đúng
Câu 44:
#include <stdio.h>
#include <conio.h>
void main()
{
int i, j;
for(i = 0, j = 0; i < 5, j < 6; i++, j++)
{
printf("i = %d \t j = %d\n", i, j);
}
getch();
}
Output của chương trình là gì?
A. Xuất ra i và j từ 0 đến 4
B. Xuất ra i và j từ 0 đến 5
C. Xuất ra i từ 0 đến 4 và j từ 0 đến 5
D. Complier Error
B là đáp án đúng
Câu 45:
void main()
{
int i = 3;
if (!i)
i++;
i++;
if (i == 3)
i += 2;
i += 2;
printf("%d\n", i);
getch();
}
Output của chương trình là gì?
A. 5
B. 6
C. 7
D. Kết quả khác
B là đáp án đúng
Vì !i = 0 nên câu lệnh i++ đầu tiên không được thực hiện, câu lệnh i++ tiếp theo được thực hiện (i = 4).
Gặp lệnh if tiếp theo không thỏa mãn, câu lệnh i+=2 thứ 2 được thực hiện.
Câu 46:
void main()
{
int x;
if(x = 0)
printf ("Value of x is");
else
printf ("Value of x is not");
getch();
}
Output của chương trình là gì?
A. Value of x is
B. Value of x is not
C. Error
B là đáp án đúng
Vì biểu thức x=0 của lệnh if(x=0) là phép gán 0 cho biến x mà ko phải biểu thức so sánh. Biểu thức gán này có
giá trị là 0 nên câu lệnh của else sẽ được thực hiện.
Câu 47:
void main()
{
int i;
for(i = 0; i < 20; i++)
{
switch(i)
{
case 0:i+=5;
case 1:i+=2;
case 5:i+=5;
default: i+=4;
break;
}
printf("%d,", i);
}
getch();
}
Output của chương trình là gì?
A. 14,18,
B. 16,20,
C. 16,21,
C là đáp án đúng
i=0. Do không có lệnh break giữa các case nên tất cả các case được thực hiện i = 16, gặp lệnh break thoát ra
khỏi switch case, in ra : 16
Vòng lặp mới i++ (i = 17), nhảy vào case default i = 17+4 = 21, gặp lệnh break thoát khỏi switch case và in
ra: 16,21. Vì i = 21 > 20, vòng for kết thúc.
Câu 48:
void main()
{
static int i;
while(i <= 10&&i >= 0)
(i > 2 ? i++ : i--);
printf("%d", i);
getch();
}
Output của chương trình là gì?
A. -1
B. 0
C. 1
D. Complier error
A là đáp án đúng
Biến i là biến static nên complier sẽ tự động khởi tạo cho i = 0. Vì i < 2, nên i-- được thực hiện i = -1.
Câu 49:
void main()
{
int i = 10, j = 20;
if(i = 20)
printf(" Hello");
else
printf(" Hi");
getch();
}
Output của chương trình là gì?
A. Hello
B. Hi
C. Complier error
A là đáp án đúng
i = 20 là biểu thức gán (không phải biểu thức so sánh). Giá trị của biểu thức này trả về là #0.Nên lệnh
printf(" Hello"); được thực hiện
Câu 50:
void main()
{
int x = 0, y = 0;
if(x == 0 || ++y)
printf("x=%d", x);
printf(" y=%d", y);
getch();
}
Output của chương trình là gì?
A. x=0 y=1
B. x=0 y=0
C. Error syntax
B là đáp án đúng
Biểu thức so sánh x == 0 là Đúng nên biểu thức ++y sẽ không được thực hiện.
