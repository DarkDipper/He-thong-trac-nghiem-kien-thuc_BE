Cài đặt môi trường lập trình C++ | Codelearn
---------------------------------------
<p>Đây là bài đầu tiên trong loạt bài hướng dẫn học lập trình C++ cho người mới bắt đầu, mục tiêu của bài này là giúp bạn làm quen với hệ thống và cài đặt môi trường lập trình C++.</p>
<p>Nếu bạn đã quen với hệ thống và có môi trường lập trình C++ trên máy của mình thì có thể bỏ qua bài hướng dẫn này bằng cách bấm <span>nút <strong>CHẠY THỬ</strong> sau đó bấm <strong>NỘP BÀI</strong>&nbsp;</span><span>bên góc phải phía dưới của màn hình.<br></span></p>
<p>Bạn có thể xem video dưới đây để biết cách cài đặt môi trường và nộp bài trên hệ thống (nên xem ở chế độ toàn màn hình).</p>
<p><video width="700px" height="auto" src="/Media/Default/Users/blackcat/CPPBasic/bandicam%202020-03-07%2022-29-29-119.mp4" controls="controls"></video></p>
<h3><span>Cài đặt môi trường lập trình</span></h3>
<p>Nếu bạn là người mới bắt đầu thì mình khuyên bạn nên sử dụng phần mềm Dev-C++ để lập trình vì nó nhẹ, dễ cài đặt và dễ sử dụng.</p>
<p><strong>Cài đặt Dev-C++</strong></p>
<p><a href="https://sourceforge.net/projects/orwelldevcpp/files/latest/download" target="_blank" rel="noopener">Bấm vào đây để tải Dev-C++.</a></p>
<p>Sau khi bấm vào link bạn hãy chờ 5 giây để file được tải xuống. Sau khi tải xong bạn hãy mở file vừa tải về và làm như sau:</p>
<p>Bấm vào <strong>OK</strong></p>
<p><img width="362" height="193" alt="" src="/Media/Default/Users/blackcat/CPPBasic/1.png"></p>
<p>Bấm vào <strong>I A<span style="text-decoration: underline;">g</span>ree</strong></p>
<p><img width="623" height="485" alt="" src="/Media/Default/Users/blackcat/CPPBasic/2.png"></p>
<p>Bấm vào <strong>Next</strong></p>
<p><img width="623" height="485" alt="" src="/Media/Default/Users/blackcat/CPPBasic/3.png"></p>
<p>Bấm vào <strong>Install</strong> và chờ khoảng 1 phút.</p>
<p><img width="623" height="485" alt="" src="/Media/Default/Users/blackcat/CPPBasic/4.png"></p>
<p>Bấm <strong>Finish</strong>.</p>
<p><img width="623" height="485" alt="" src="/Media/Default/Users/blackcat/CPPBasic/5.png"></p>
<p>Bấm <strong>Next</strong></p>
<p><img width="702" height="433" alt="" src="/Media/Default/Users/blackcat/CPPBasic/6.png"></p>
<p>Bấm <strong>Next</strong> tiếp</p>
<p><img width="702" height="433" alt="" src="/Media/Default/Users/blackcat/CPPBasic/7.png"></p>
<p>Bấm <strong>OK</strong></p>
<p><img width="702" height="433" alt="" src="/Media/Default/Users/blackcat/CPPBasic/8.png"></p>
<p>Tới đây bạn đã đặt thành công Dev-C++, giao diện của Dev-C++ sẽ trông như sau:</p>
<p><img width="960" height="540" alt="" src="/Media/Default/Users/blackcat/CPPBasic/8.5.png"></p>
<p><strong>Sử dụng Dev-C++ để viết chương trình C++</strong></p>
<p>Từ giao diện của phần mềm Dev-C++, bấm tổ hợp phím <strong>Ctrl + N</strong> hoặc bấm vào <strong>File -&gt; New -&gt; Source File.</strong></p>
<p><img width="960" height="540" alt="" src="/Media/Default/Users/blackcat/CPPBasic/9.png"></p>
<p>Sau đó hãy copy đoạn code mẫu bên dưới vào cửa sổ vừa hiện ra (đoạn code này bạn sẽ được học và hiểu ở các bài sau).</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	cout<span class="token operator">&lt;&lt;</span><span class="token string">"Hello C++"</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Kết quả sau khi copy xong:</p>
<p><strong><img width="960" height="515" alt="" src="/Media/Default/Users/blackcat/CPPBasic/10%20(1).jpg"></strong></p>
<p>Tiếp theo đó bạn hãy bấm <strong>F11</strong>&nbsp;(hoặc <strong>Fn + F11</strong>) và <strong>Enter,</strong> sẽ có 1 chương trình hiển thị ra:&nbsp;</p>
<p><img width="1102" height="289" alt="" src="/Media/Default/Users/blackcat/CPPBasic/13.png"></p>
<p>Đây chính là chương trình được chạy từ đoạn code bên trên, tới đây bạn đã biết cách sử dụng Dev-C++ để viết chương trình C++. Hãy đọc tiếp phần sau để biết cách nộp bài trên hệ thống.</p>
<h3>Hướng dẫn sử dụng hệ thống</h3>
<p>Ở các bài tập tiếp theo bạn hãy viết code trên phần mềm Dev-C++ và nếu thấy kết quả của chương trình giống như trong đề bài thì có thể copy code vào và bấm nút&nbsp;<b>CHẠY THỬ&nbsp;</b>bên góc phải phía dưới màn hình, sau đó hệ thống sẽ kiểm tra nếu code của bạn đúng thì bạn có thể bấm <strong>NỘP BÀI</strong>&nbsp;và chuyển qua bài tiếp theo.</p>
<p>Quay lại bài này, bạn hãy bấm bấm nút&nbsp;<strong>CHẠY THỬ&nbsp;</strong>và <strong>NỘP BÀI&nbsp;</strong>để làm bài tiếp theo<strong>.&nbsp;</strong></p>
<p><strong>Đọc thêm: </strong><a href="https://codelearn.io/sharing/chuong-trinh-cpp-duoc-bien-dich-the-nao">https://codelearn.io/sharing/chuong-trinh-cpp-duoc-bien-dich-the-nao</a></p>
Viết chương trình Hello World đầu tiên trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy&nbsp;thay dấu <code>...</code> bằng các đoạn code để chương trình hiển thị ra màn hình dòng chữ:</p>
<pre class=" language-markup"><code class=" language-markup">Hello World!</code></pre>
<p>Hãy đọc phần lý thuyết và xem hướng dẫn để biết cách làm bài này!</p>
<h3>Lý thuyết</h3>
<p>Trước tiên bạn hãy chạy thử đoạn code sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Xin chao!"</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Sau khi chạy sẽ có 1 chương trình được hiển thị lên màn hình với dòng chữ:</p>
<pre class=" language-markup"><code class=" language-markup">Xin chao!</code></pre>
<p>Nếu bạn là người mới bắt đầu thì trong đoạn code trên có khá nhiều câu lệnh mà bạn không biết như <code>#include&lt;iostream&gt;</code>,&nbsp;<code>using namespace std;</code>,&nbsp;<code>int main() {</code> và <code>return 0;</code> nhưng bạn đừng quan tâm tới các câu lệnh này vội,&nbsp;<span>hãy coi như những lệnh này là bắt buộc đối với 1 chương trình C++.</span></p>
<p>Bây giờ bạn hãy thay từ <code>"Xin chao!"</code> trong dòng code:</p>
<pre class=" language-cpp"><code class=" language-cpp">cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Xin chao!"</span><span class="token punctuation">;</span>
</code></pre>
<p>thành tên của bạn và chạy thử. Ví dụ nếu bạn tên là Minh thì hãy sửa đoạn code trên thành:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Minh"</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Lúc này chương trình của bạn sẽ hiển thị lên dòng chữ:</p>
<pre class=" language-markup"><code class=" language-markup">Minh</code></pre>
<p>Tới đây chắc bạn cũng đã hiểu được câu lệnh <code>cout &lt;&lt;</code> là gì, nó đơn giản chỉ là một câu lệnh giúp bạn hiển thị lên màn hình một dòng chữ nào đó.</p>
<p>Đọc tới đây bạn đã có thể quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn vẫn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Bạn chỉ cần điền <code>cout &lt;&lt; "Hello World!";</code> vào dấu <code>...</code>&nbsp;giống trong video sau (bấm vào toàn màn hình để xem rõ hơn):</p>
<p><video width="700px" height="auto" src="/Media/Default/Users/blackcat/CPPBasic/ex2.mp4" controls="controls"></video></p>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello World!"</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: câu lệnh cout | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình hiện ra màn hình dòng chữ:</p>
<pre class=" language-markup"><code class=" language-markup">Welcome to Codelearn.io!</code></pre>
<h3>Hướng dẫn</h3>
<p>Để hiển thị lên màn hình một dòng chữ nào đó bạn có thể dùng câu lệnh <code>cout &lt;&lt;</code>. Ví dụ bạn có thể viết chương trình hiển thị ra hình dòng chữ</p>
<pre class=" language-markup"><code class=" language-markup">Welcome</code></pre>
<p>bằng các câu lệnh:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Welcome"</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: tính tổng hai số | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình hiển thị ra màn hình tổng của <code>12</code> và <code>15</code>.</p>
<h3>Lý thuyết</h3>
<p>Trước tiên bạn hãy chạy thử đoạn code dùng để tính tổng 2 số như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token number">8</span> <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Sau khi chạy bạn sẽ thấy số <code>12</code> được hiển thị lên màn hình.</p>
<p>Đoạn code này rất đơn giản và dễ hiểu: gọi tới lệnh <code>cout &lt;&lt;</code> để hiển thị ra màn hình kết quả của phép tính&nbsp;<code>8 + 4</code>.</p>
<p>Tương tự bạn có thể tạo ra 1 chương trình tính toán đơn giản bằng cách thay <code>8 + 4</code> bằng các biểu thức khác như <code>9 - 7</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token number">9</span> <span class="token operator">-</span> <span class="token number">7</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Chương trình này sẽ hiển thị lên màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">2</code></pre>
<p>Quay trở lại phần bài tập, bạn hãy viết chương trình hiển thị lên màn hình tổng của <code>12</code> và <code>15</code>.</p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn bên dưới.</p>
<h3><strong>Hướng dẫn</strong></h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token number">12</span> <span class="token operator">+</span> <span class="token number">15</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: tính tổng hai số (tiếp) | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình hiển thị ra màn hình tổng của <code>1489</code> và <code>7348</code>.</p>
<h3>Hướng dẫn</h3>
<p>Ví dụ về chương trình tính tổng của <code>67</code> và <code>83</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token number">67</span> <span class="token operator">+</span> <span class="token number">83</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Comment trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy sử dụng comment để chương trình hiển thị ra màn hình dòng chữ</p>
<pre class=" language-cpp"><code class=" language-cpp">Hello World<span class="token operator">!</span></code></pre>
<h3>Lý thuyết</h3>
<p>Comment hay còn gọi là chú thích được dùng để giải thích các dòng code, giúp cho người đọc hay chính người viết code sau này hiểu được source code dễ dàng hơn. Các ký tự và đoạn code trong comment sẽ không được chương trình thực thi.</p>
<p>Trong C++ có 2 loại comment là comment trên một dòng và comment trên nhiều dòng.</p>
<p>Comment trên một dòng sẽ được bắt đầu với&nbsp;<code>//</code>. Ví dụ đơn giản về comment một dòng:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Dùng lệnh cout để hiển thị Hello World! ra màn hình</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello World!"</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">Hello World!</code></pre>
<p>Bạn cũng có thể đặt comment ngay sau câu lệnh:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello World!"</span><span class="token punctuation">;</span> <span class="token comment">// Dùng lệnh cout để hiển thị Hello World! ra màn hình</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Comment trên nhiều dòng trong ngôn ngữ lập trình C++ sẽ bắt đầu bằng dấu&nbsp;<code>/*</code> và kết thúc bằng dấu&nbsp;<code>*/</code>. Ví dụ:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token comment">/*
Chương trình c++ hiển thị ra màn hình dòng chữ Hello World!
sử dụng câu lệnh cout
*/</span>
<span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello World!"</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">Hello World!</code></pre>
<p>Tới đây bạn đã hiểu và biết cách sử dụng comment, hãy quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn vẫn chưa quen cách sử dụng comment để làm bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token comment">/*
A simple C++ program to display "Hello World!" on the screen
using cout statement
*/</span>
<span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Display Hello World on the screen</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello World!"</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập về cộng hai số trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình hiển thị ra màn hình dòng chữ sau:</p>
<pre class=" language-markup"><code class=" language-markup">324 + 553 = {P}</code></pre>
<p>với <code>{P}</code> là tổng của <code>324</code> và <code>553</code>.</p>
<h3>Lý thuyết</h3>
<p>Như đã được làm ở các bài trước, để hiển thị ra <code>324 + 553 =</code>&nbsp;bạn sử dụng câu lệnh:</p>
<pre class=" language-cpp"><code class=" language-cpp">cout <span class="token operator">&lt;&lt;</span> <span class="token string">"324 + 553 = "</span><span class="token punctuation">;</span></code></pre>
<p>Để hiển thị ra tổng của <code>324</code> và <code>553</code> bạn sử dụng câu lệnh:</p>
<pre class=" language-cpp"><code class=" language-cpp">cout <span class="token operator">&lt;&lt;</span> <span class="token number">324</span> <span class="token operator">+</span> <span class="token number">553</span><span class="token punctuation">;</span></code></pre>
<p>Bạn có thể tự nhận thấy sự khác biệt giữa 2 dòng lệnh này:</p>
<p>Khi câu lệnh&nbsp;<code>cout &lt;&lt;&nbsp;</code>&nbsp;được sử dụng cùng 2 dấu&nbsp;<code>"</code> thì chương trình của bạn sẽ hiển thị tất cả những thứ có trong 2 dấu nháy đó.</p>
<p>Ngược lại chương trình của bạn sẽ hiển thị giá trị của biểu thức được đặt cạnh câu lệnh <code>cout &lt;&lt;</code></p>
<p>Do đó bạn có thể giải bài trên bằng cách kết hợp câu lệnh <code>cout &lt;&lt; "324 + 553";</code>&nbsp;và <code>cout &lt;&lt; 324 + 553;</code></p>
<p>Ví dụ chương trình sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"12 + 15 = "</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token number">12</span> <span class="token operator">+</span> <span class="token number">15</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Sẽ hiển thị lên màn hình</p>
<pre class=" language-markup"><code class=" language-markup">12 + 15 = 27</code></pre>
<p>Câu lệnh <code>cout</code> còn có thể viết theo kiểu liền mạch nên chương trình trên còn có thể rút gọn thành:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"12 + 15 = "</span> <span class="token operator">&lt;&lt;</span> <span class="token number">12</span> <span class="token operator">+</span> <span class="token number">15</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Đọc tới đây bạn đã có thể quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn vẫn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"324 + 553 = "</span> <span class="token operator">&lt;&lt;</span> <span class="token number">324</span> <span class="token operator">+</span> <span class="token number">553</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: tính hiệu 2 số | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình hiển thị ra màn hình dòng chữ sau:</p>
<pre class=" language-markup"><code class=" language-markup">3472 - 2355 = {P}</code></pre>
<p>với <code>{P}</code> là hiệu của <code>3472</code>&nbsp;và <code>2355</code>.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"3472 - 2355 = "</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3472</span> <span class="token operator">-</span> <span class="token number">2355</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: hiển thị thông tin trên nhiều dòng | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình hiển thị ra màn hình thông tin sau:</p>
<pre class=" language-markup"><code class=" language-markup">Name: Codelearn.
Date of birth: 2019.</code></pre>
<h3>Lý thuyết</h3>
<p>Đầu tiên bạn hãy chạy thử chương trình sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Name: Codelearn."</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Date of birth: 2019."</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Chương trình trên sẽ hiển thị lên màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">Name: Codelearn.Date of birth: 2019.</code></pre>
<p>Có thể thấy đoạn code trên không hiển thị được thông tin trên 2 dòng. Để hiển thị được trên nhiều dòng bạn cần sử dụng câu lệnh <code>cout &lt;&lt; endl;</code>&nbsp;hoặc <code>cout &lt;&lt; '\n';</code></p>
<p>Ví dụ chương trình sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Line1"</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Line2"</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Sẽ hiển thị lên màn hình</p>
<pre class=" language-markup"><code class=" language-markup">Line1
Line2</code></pre>
<p>Nếu thấy câu lệnh <code>endl</code> khó nhớ thì bạn có thể hiểu nó là viết tắt của <strong>end line</strong>. Ngoài ra bạn còn 1 số cách khác để hiển thị trên nhiều dòng. Ví dụ chương trình sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Line1\nLine2"</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Line3"</span> <span class="token operator">&lt;&lt;</span> endl <span class="token operator">&lt;&lt;</span> <span class="token string">"Line4"</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Sẽ hiển thị lên màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">Line1
Line2
Line3
Line4</code></pre>
<p>Đọc tới đây bạn đã có thể quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn vẫn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Name: Codelearn."</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Date of birth: 2019."</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: tính tổng, hiệu, tích và thương 2 số | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Bạn hãy viết chương trình hiển thị ra màn hình thông tin sau:</p>
<pre class=" language-markup"><code class=" language-markup">2468 + 1234 = {P1}
2468 - 1234 = {P2}
2468 * 1234 = {P3}
2468 / 1234 = {P4}</code></pre>
<p>Với <code>{P1}</code> là tổng của <code>2468</code> và <code>1234</code>.</p>
<p>Với <code>{P2}</code> là hiệu của <code>2468</code>&nbsp;và <code>1234</code>.</p>
<p>Với <code>{P3}</code> là tích của <code>2468</code>&nbsp;và <code>1234</code>.</p>
<p>Với <code>{P4}</code> là thương của <code>2468</code>&nbsp;và <code>1234</code>.</p>
<p>Đây là bài ôn tập lại các bài trước, nếu bạn chưa làm được thì có thể xem hướng dẫn ở phía dưới:</p>
<h4>Hướng dẫn</h4>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"2468 + 1234 = "</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2468</span> <span class="token operator">+</span> <span class="token number">1234</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"2468 - 1234 = "</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2468</span> <span class="token operator">-</span> <span class="token number">1234</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"2468 * 1234 = "</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2468</span> <span class="token operator">*</span> <span class="token number">1234</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"2468 / 1234 = "</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2468</span> <span class="token operator">/</span> <span class="token number">1234</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Biến và cách khai báo biến trong C++ | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Bạn hãy viết chương trình khai báo 2 biến<span>&nbsp;</span><code>a</code><span>&nbsp;</span>và<span>&nbsp;</span><code>b</code>&nbsp;kiểu số nguyên, sau đó gán giá trị cho<span>&nbsp;</span><code>a = 254</code>,<span>&nbsp;</span><code>b = 343</code>&nbsp;và hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">a + b = {P}</code></pre>
<p>Với<span>&nbsp;</span><code>{P}</code><span>&nbsp;</span>là tổng của biến<span>&nbsp;</span><code>a</code><span>&nbsp;</span>và biến<span>&nbsp;</span><code>b</code>.</p>
<h4>Lý thuyết</h4>
<p><span>Biến trong lập trình được dùng để đại diện cho một giá trị mà có thể thay đổi trong quá trình chạy. Ví dụ như biến thể hiện số tuổi, số tiền trong tài khoản, ... các giá trị này hoàn toàn có thể thay đổi theo thời gian và cần sử dụng biến để lưu trữ.</span><span></span></p>
<p><span>Ứng với mỗi kiểu dữ liệu như số nguyên, số thực, xâu ký tự, ... thì lại có một cách khai báo biến khác nhau. Trong đó cú pháp để khai báo biến kiểu số nguyên sẽ giống như sau:</span></p>
<pre class=" language-markup"><code class=" language-markup">int tên_biến;</code></pre>
<p>Ví dụ về chương tình khai báo và sử dụng biến kiểu số nguyên:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Khai báo biến x kiểu số nguyên</span>
	<span class="token keyword">int</span> x<span class="token punctuation">;</span>
	<span class="token comment">// Gán giá trị cho x = 5</span>
	x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
	<span class="token comment">// Hiển thị giá trị của biến x ra màn hình</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x = "</span> <span class="token operator">&lt;&lt;</span> x<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Trong ví dụ trên thì<span>&nbsp;</span><code>int</code>&nbsp;là từ khóa được dùng để khai báo biến kiểu số nguyên (int là viết tắt của cụm từ<span>&nbsp;</span><strong>integer&nbsp;</strong>- có nghĩa là số nguyên).</p>
<p>Bạn còn có thể gán giá trị cho biến ngay khi khai báo giống như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Khai báo và gán giá trị cho biến x</span>
	<span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x = "</span> <span class="token operator">&lt;&lt;</span> x <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	x <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
	<span class="token comment">// Hiển thị ra màn hình giá trị của x sau khi thay đổi</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x = "</span> <span class="token operator">&lt;&lt;</span> x <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">x = 5
x = 7</code></pre>
<p>Có thể thấy cách khai báo và sử dụng biến rất đơn giản, bạn cũng có thể sử dụng biến để thực hiện các phép toán:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Khai báo biến a kiểu số nguyên và gán giá trị cho a = 438</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">438</span><span class="token punctuation">;</span>
	<span class="token comment">// Khai báo biến b kiểu số nguyên và gán giá trị cho b = 238</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">238</span><span class="token punctuation">;</span>
	<span class="token comment">// Hiển thị ra màn hình hiệu của a và b</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a - b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">a - b = 200</code></pre>
<p><strong>Lưu ý:</strong><span>&nbsp;</span>Khi đặt tên cho biến bạn cần tuân theo 1 số nguyên tắc sau:</p>
<ul>
<li>Tên biến có thể có chữ cái, chữ số và dấu gạch dưới nhưng ký tự đầu tiên của tên biến bắt buộc phải là dấu gạch dưới hoặc chữ cái.
<ul></ul>
</li>
<li>Tên biến không được có khoảng trắng.</li>
<li>Tên biến không được trùng với các từ khóa như<span>&nbsp;</span><code>int, float, static, struct...</code></li>
</ul>
<p>Một số tên biến hợp lệ:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">int</span> a<span class="token punctuation">;</span>
<span class="token keyword">int</span> _a<span class="token punctuation">;</span>
<span class="token keyword">int</span> a10_<span class="token punctuation">;</span></code></pre>
<p>Một số tên biến không hợp lệ:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">int</span> <span class="token number">10</span>a<span class="token punctuation">;</span>
<span class="token keyword">int</span> a <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token keyword">int</span><span class="token punctuation">;</span></code></pre>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">254</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">343</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a + b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p><strong>Đọc thêm</strong>:&nbsp;<a href="https://codelearn.io/sharing/20-tu-khoa-cpp-ai-hoc-cung-can-biet-phan-1">20 từ khóa C++ ai cũng cần biết</a>&nbsp;</p>
Bài tập C++ cơ bản: khai báo biến và tính hiệu | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình tạo ra 2 biến&nbsp;<code>a</code><span>&nbsp;</span>và<span>&nbsp;</span><code>b</code> kiểu số nguyên, gán giá trị cho<span>&nbsp;</span><code>a = 8343</code> và<span>&nbsp;</span><code>b = 6453</code>. Sau đó hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">a - b = {P}</code></pre>
<p>Với<span>&nbsp;</span><code>{P}</code><span>&nbsp;</span>là hiệu của biến<span>&nbsp;</span><code>a</code><span>&nbsp;</span>và biến<span>&nbsp;</span><code>b</code>.</p>
<h3>Hướng dẫn</h3>
<p>Câu lệnh để khai báo biến <code>a</code>&nbsp;kiểu số nguyên và gán giá trị cho <code>a = 8343</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">8343</span><span class="token punctuation">;</span></code></pre>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">8343</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">6453</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a - b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập C++ cơ bản: khai báo biến và tính tổng, hiệu, tích, thương | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p><span>Bạn hãy viết chương trình tạo ra 2 biến&nbsp;</span><code>a</code><span>&nbsp;và&nbsp;</span><code>b</code>&nbsp;kiểu số nguyên, sau đó<span>&nbsp;gán giá trị cho&nbsp;</span><code>a = 6,&nbsp;b = 2</code>&nbsp;và thực hiện hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">a + b = {P1}
a - b = {P2}
a * b = {P3}
a / b = {P4}</code></pre>
<p><code>{P1}</code> là tổng của <code>a</code> và <code>b</code>.</p>
<p><code>{P2}</code> là hiệu của <code>a</code> và <code>b</code>.</p>
<p><code>{P3}</code> là tích của <code>a</code> và <code>b</code>.</p>
<p><code>{P4}</code> là thương của <code>a</code> và <code>b</code>.</p>
<h4>Hướng dẫn</h4>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a + b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">+</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a - b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">-</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a * b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">*</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a / b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">/</span> b<span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Kiểu dữ liệu chuỗi ký tự (string) trong C++ | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Bạn hãy viết chương trình tạo ra biến <code>name</code>&nbsp;kiểu xâu ký tự, sau đó gán giá trị cho biến <code>name = "Codelearn"</code>&nbsp;và thực hiện hiển thị lên màn hình dòng chữ:</p>
<pre class=" language-markup"><code class=" language-markup">Hello Codelearn</code></pre>
<h4>Lý thuyết</h4>
<p>Như bạn đã biết, cú pháp để khai báo biến sẽ giống như sau:</p>
<pre class=" language-markup"><code class=" language-markup">kiểu_dữ_liệu tên_biến;</code></pre>
<p>Với biến kiểu số nguyên thì kiểu dữ liệu sẽ chính là <code>int</code> và đối với biến kiểu xâu thì kiểu dữ liệu sẽ là <code>string</code>. Ví dụ để khai báo và sử dụng biến kiểu xâu bạn làm như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Khai báo biến name kiểu string và gán giá trị cho name = "Codelearn"</span>
	string name <span class="token operator">=</span> <span class="token string">"Codelearn"</span><span class="token punctuation">;</span>
	<span class="token comment">// Hiển thị biến name ra màn hình</span>
	cout <span class="token operator">&lt;&lt;</span> name<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">Codelearn</code></pre>
<p>Qua bài này bạn đã biết cách khai báo và sử dụng biến kiểu&nbsp;<code>string</code>.</p>
<h4>Hướng dẫn</h4>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	string name <span class="token operator">=</span> <span class="token string">"Codelearn"</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello "</span> <span class="token operator">&lt;&lt;</span> name<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: khai báo và hiển thị biến kiểu string và int | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Bạn hãy viết chương trình tạo ra biến <code>name</code> kiểu <code>string</code> và biến <code>dob</code> kiểu <code>int</code>. Sau đó gán giá trị cho <code>name = "Codelearn"</code>, <code>dob = 2019</code> và thực hiện hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">Name: Codelearn
Date of birth: 2019</code></pre>
<h4>Hướng dẫn</h4>
<p>Câu lệnh dùng để tạo và gán giá trị cho biến kiểu <code>string</code></p>
<pre class=" language-cpp"><code class=" language-cpp">string name <span class="token operator">=</span> <span class="token string">"Codelearn"</span><span class="token punctuation">;</span></code></pre>
<p>Câu lệnh dùng để tạo và gán giá trị cho biến kiểu <code>int</code></p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">int</span> dob <span class="token operator">=</span> <span class="token number">2019</span><span class="token punctuation">;</span></code></pre>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string name <span class="token operator">=</span> <span class="token string">"Codelearn"</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> dob <span class="token operator">=</span> <span class="token number">2019</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Name: "</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Date of birth: "</span> <span class="token operator">&lt;&lt;</span> dob<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Kiểu số thực (float và double) trong C++ | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Bạn hãy viết chương trình tạo ra 2 biến <code>a, b</code>&nbsp;kiểu số thực. Sau đó gán giá trị cho <code>a = 10.5, b = 7</code> và thực hiện hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">a / b = {P}</code></pre>
<p>Với <code>{P}</code> là thương của <code>a</code> và <code>b</code> (<code>{P}</code> là kết quả của phép chia:&nbsp;<code>a / b</code>).</p>
<h4>Lý thuyết</h4>
<p>Kiểu dữ liệu số trong C++ được chia làm 2 loại là kiểu số nguyên và kiểu số thực. Để khai báo và gán giá trị cho biến kiểu số thực bạn dùng từ khóa <code>double</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token comment">// Khai báo biến a kiểu số thực và gán giá trị cho a = 10.5</span>
<span class="token keyword">double</span> a <span class="token operator">=</span> <span class="token number">10.5</span><span class="token punctuation">;</span></code></pre>
<p>Ví dụ chương trình tạo và hiển thị biến kiểu số thực ra màn hình:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Khai báo biến a kiểu số thực và gán giá trị cho a = 1.5</span>
	<span class="token keyword">double</span> a <span class="token operator">=</span> <span class="token number">1.5</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a = "</span> <span class="token operator">&lt;&lt;</span> a<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">a = 1.5</code></pre>
<p>Ngoài <code>double</code> ra thì bạn cũng có thể dùng&nbsp;<code>float</code>&nbsp;để khai báo biến kiểu số thực nhưng trong hầu hết mọi trường hợp bạn nên sử dụng kiểu <code>double</code>.</p>
<p><strong>Lưu ý:</strong>&nbsp;nếu bạn dùng biến kiểu số nguyên để lưu trữ các số thực thì kết quả thu được sẽ chỉ có phần nguyên. Ví dụ chương trình sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1.5</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> pi <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"pi = "</span> <span class="token operator">&lt;&lt;</span> pi <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">a = 1
pi = 3</code></pre>
<p><span>Do đó, nếu bài này bạn khai báo biến <code>a</code> và biến <code>b</code> với kiểu <code>int</code>&nbsp;giống chương trình sau:</span></p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10.5</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a / b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">/</span> b<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Thì kết quả khi sẽ chương trình sẽ là:</p>
<pre class=" language-markup"><code class=" language-markup">a / b = 1</code></pre>
<p>Giải thích: ban đầu bạn khởi tạo giá trị cho biến <code>a</code> là <code>10.5</code> nhưng do <code>a</code> là biến kiểu <code>int</code> nên giá trị của <code>a</code> sẽ là <code>10</code>. Do đó,&nbsp;<code>a / b</code> bản chất sẽ là <code>10 / 7</code> và kết quả sẽ phải là&nbsp;<span><code>1.42857</code>&nbsp;nhưng chương trình lại hiển thị <code>1</code> ra màn hình do kết quả của phép chia 2 số nguyên sẽ là 1 số nguyên =&gt; <code>1.42857</code> sẽ bị chuyển về <code>1</code>. Để màn hình hiển thị được <code>1.42857</code> bạn cần ép kiểu của phép chia về <code>double</code> giống chương trình sau:</span></p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10.5</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a / b = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>a <span class="token operator">/</span> b<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">a / b = 1.42857</code></pre>
<p>Trong đó,&nbsp;<code>(double)a / b</code> nghĩa là thực hiện ép kiểu cho giá trị của biến&nbsp;<code>a</code> về <code>double</code>, sau đó thực hiện chia <code>a</code> cho <code>b</code>. Lúc này, phép chia 1 số kiểu <code>double</code> và 1 số kiểu <code>int</code> sẽ là 1 số kiểu <code>double</code> nên kết quả sẽ là <code>1.42857</code>.</p>
<p>Bạn cũng có thể ép kiểu cho biến kiểu <code>double</code> về kiểu <code>int</code> giống như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">double</span> pi <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>pi<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Đọc tới đây bạn đã hiểu về cách khai báo biến kiểu số thực, hãy quay lại phần bài tập và làm thử.</p>
<h4>Hướng dẫn</h4>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">double</span> a <span class="token operator">=</span> <span class="token number">10.5</span><span class="token punctuation">;</span>
	<span class="token keyword">double</span> b <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a / b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">/</span> b<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Do 7 là một số nguyên nên bạn cũng có thể khai báo biến <code>b</code>&nbsp;với kiểu <code>int</code>&nbsp;thay vì <code>double</code> giống như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">double</span> a <span class="token operator">=</span> <span class="token number">10.5</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a / b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">/</span> b<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: tính diện tích hình chữ nhật | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Cho trước hình chữ nhật có chiều dài và chiều rộng lần lượt là <code>7.5</code> và <code>3.8</code>. Bạn hãy viết chương trình hiển thị diện tích của hình chữ nhật này ra màn hình giống như sau:</p>
<pre class=" language-markup"><code class=" language-markup">Area = {P}</code></pre>
<p>Với <code>{P}</code> là diện tích của hình chữ nhật.</p>
<h4>Hướng dẫn</h4>
<p>Do chiều dài và chiều rộng của hình chữ nhật là một số thực nên bạn cần khai báo biến với kiểu dữ liệu <code>double</code></p>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">double</span> length <span class="token operator">=</span> <span class="token number">7.5</span><span class="token punctuation">;</span>
    <span class="token keyword">double</span> width <span class="token operator">=</span> <span class="token number">3.8</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Area = "</span> <span class="token operator">&lt;&lt;</span> length <span class="token operator">*</span> width<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Bạn cũng có thể làm như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Area = "</span> <span class="token operator">&lt;&lt;</span> <span class="token number">7.5</span> <span class="token operator">*</span> <span class="token number">3.8</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Kiểu ký tự (char) trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình tạo ra biến <code>c</code> kiểu ký tự, sau đó gán giá trị cho biến <code>c = 'x'</code> và thực hiện hiển thị biến <code>c</code> ra màn hình.</p>
<h3>Lý thuyết</h3>
<p>Kiểu ký tự trong C++ là kiểu dữ liệu chỉ lưu trữ được 1 ký tự trong bảng mã <a href="https://vi.wikipedia.org/wiki/ASCII">ASCII</a>, ký tự này có thể là một chữ cái <code>(a, b, c, ... x, y, z)</code>, một chữ số&nbsp;<code>(0, 1, 2,..., 9)</code>, một phép toán <code>(+, -, *, /)</code> hay một ký tự bất kỳ khác <code>(!, &amp;, ...)</code>.</p>
<p>Biến kiểu ký tự được khai báo bằng từ khóa <code>char</code>&nbsp;(<code>char</code> là viết tắt của <strong>character</strong>)<strong>.&nbsp;</strong>Ví dụ chương trình tạo và hiển thị biến kiểu ký tự:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Khai báo biến c kiểu ký tự và gán trị cho c = 'a'</span>
	<span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span>
	<span class="token comment">// Hiển thị biến c ra màn hình</span>
	cout <span class="token operator">&lt;&lt;</span> c<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Chương trình này sẽ hiển thị lên màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">a</code></pre>
<p>Đọc tới đây bạn đã biết cách tạo và hiển thị biến kiểu ký tự, hãy quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token string">'x'</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> c<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: chuyển ký tự thành ký tự tiếp theo trong bảng chữ cái | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình hiển thị ký tự <code>'d'</code> ra màn hình.</p>
<h3>Lý thuyết</h3>
<p>Mục đích của bài này là giúp bạn hiểu hơn về kiểu ký tự nên hãy tìm cách điền code vào dấu <code>...</code> để màn hình hiển thị ra ký tự <code>'d'</code>.</p>
<p>Kiểu ký tự bản chất là một kiểu số nguyên, bạn có thể hiện thị giá trị nguyên của một ký tự bằng câu lệnh&nbsp;<code>cout &lt;&lt; (int)ký_tự;</code>&nbsp;giống như chương trình sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'a'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"b = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'b'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"c = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'c'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"d = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'d'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"e = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'e'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"..."</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"x = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'x'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"y = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'y'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"z = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'z'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">a = 97
b = 98
c = 99
d = 100
e = 101
...
x = 120
y = 121
z = 122</code></pre>
<div>Từ kết quả trên có thể thấy, giá trị số của các chữ cái từ <code>'a'</code> đến <code>'z'</code> tăng dần, mỗi giá trị liên tiếp&nbsp;cách nhau 1 đơn vị.</div>
<p>Do kiểu ký tự là một kiểu số nguyên nên bạn có thể áp dụng các phép toán <code>+, -, *, /</code>. Từ đoạn code bên trên có thể thấy để hiển thị ký tự <code>'d'</code> bạn có thể lấy ký tự <code>'a' + 3</code>, để hiển thị ký tự <code>'e'</code> bạn có thể lấy ký tự <code>'d' + 1</code> như chương trình sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">char</span> d <span class="token operator">=</span> <span class="token string">'a'</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span>
	<span class="token keyword">char</span> e <span class="token operator">=</span> <span class="token string">'d'</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> d <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> e<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">d
e</code></pre>
<p>Đọc tới đây bạn đã có thể làm được bài này, hãy quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn chưa làm được thì có thể xem hướng dẫn bên dưới</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">char</span> d <span class="token operator">=</span> <span class="token string">'a'</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> d<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Hoặc</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">char</span> d <span class="token operator">=</span> <span class="token string">'a'</span> <span class="token operator">-</span> <span class="token string">'a'</span> <span class="token operator">+</span> <span class="token string">'d'</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> d<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Các kiểu dữ liệu số nguyên trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p><span>Bạn hãy viết chương trình tạo ra 2 biến <code>a</code> và <code>b</code></span><span>&nbsp;kiểu số nguyên. Sau đó gán giá trị cho&nbsp;</span><code>a = 384847522, b = 988347273</code><span>&nbsp;và thực hiện hiển thị ra màn hình tích của biến <code>a</code> và biến <code>b</code>.</span></p>
<h3>Lý thuyết</h3>
<p>Trong ngôn ngữ lập trình C++ có các kiểu dữ liệu lưu trữ số nguyên như: <code>short, int, long, long long...</code></p>
<p>Sự khác biệt giữa các kiểu dữ liệu này là miền giá trị:</p>
<p>Miền giá trị của kiểu <code>short</code> là từ <code>-32768</code> tới&nbsp;<code>32767</code>.</p>
<p>Miền giá trị của kiểu <code>int</code> là từ <code>-2147483648</code> tới <code>2147483647</code>.</p>
<p>Miền giá trị của kiểu <code>long</code> là từ <code>-2147483647</code> tới <code>2147483647</code>&nbsp;(giống với miền dữ liệu của kiểu <code>int</code>).</p>
<p>Miền giá trị của kiểu <code>long long</code> là từ <code>-9223372036854775808</code> tới <code>9223372036854775807</code>.</p>
<p>Có thể thấy miền giá trị của kiểu <code>long long</code> là lớn nhất, do đó bạn có thể dùng kiểu dữ liệu này để thay cho các kiểu dữ liệu khác nhưng bù lại dùng kiểu dữ liệu này sẽ tốn bộ nhớ hơn (kiểu dữ liệu có miền giá trị càng lớn sẽ càng tốn bộ nhớ). Do đó bạn cần sử dụng các kiểu dữ liệu một cách hợp lý, ví dụ biến để lưu trữ số học sinh trong một lớp học&nbsp;nên là kiểu <code>short</code> vì thường một lớp chỉ có vài chục học sinh.</p>
<p><strong>Lưu ý:</strong> Miền giá trị của các kiểu dữ liệu còn phụ thuộc vào yếu tố khác nhưng thường sẽ giống như trên.</p>
<p>Quay lại bài này, bạn không thể dùng kiểu <code>int</code> để lưu giá trị cho biến <code>a</code> và <code>b</code> do kết quả của phép nhân 2 số kiểu <code>int</code> sẽ là 1 số kiểu <code>int</code> mà miền giá trị của kiểu <code>int</code> là không đủ để lưu trữ kết quả của phép nhân&nbsp;<code>384847522 *&nbsp;988347273</code>. Ví dụ chương trình:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">384847522</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">988347273</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">*</span> b<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Sẽ cho ra kết quả:</p>
<pre class=" language-markup"><code class=" language-markup">-628954446</code></pre>
<p>Có thể thấy kết quả này là sai hoàn toàn, bạn cần dùng một kiểu dữ liệu lớn hơn cho biến <code>a</code> và biến&nbsp;<code>b</code>.</p>
<p>Đọc tới đây chắc bạn cũng đã đoán được sẽ phải dùng kiểu dữ liệu gì để làm bài này. Hãy quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn vẫn chưa làm được thì có thể xem hướng dẫn ở bên dưới.</p>
<h3><strong>Hướng dẫn</strong></h3>
<p>Dùng kiểu <code>long long</code>&nbsp;thay vì <code>int</code> cho biến <code>a</code> và biến&nbsp;<code>b</code>.</p>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> <span class="token keyword">long</span> a <span class="token operator">=</span> <span class="token number">384847522</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> <span class="token keyword">long</span> b <span class="token operator">=</span> <span class="token number">988347273</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">*</span> b<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Hoặc nếu bạn muốn dùng kiểu <code>int</code> cho biến&nbsp;<code>a</code> và biến&nbsp;<code>b</code> thì có thể làm như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">384847522</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">988347273</span><span class="token punctuation">;</span>
    <span class="token comment">/* 
    Mặc định kết quả của phép nhân 2 số kiểu int 
    sẽ là một số kiểu int nên bạn cần dùng câu lệnh (long long) 
    để báo rằng kết quả của phép nhân này là một số kiểu long long
    */</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">)</span>a <span class="token operator">*</span> b<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Kiểu bool trong C++ | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Bạn hãy viết chương trình tạo ra biến <code>b</code> kiểu <code>bool</code> (kiểu luận lý), sau đó gán giá trị cho biến <code>b = true</code> và thực hiện hiển thị biến <code>b</code> ra màn hình.</p>
<h4>Lý thuyết</h4>
<p>Ngoài các kiểu dữ liệu bạn đã được học như&nbsp;<code>char, string, short, int, long long, ...</code> thì trong C++ còn một kiểu dữ liệu căn bản nữa là kiểu <code>bool</code> (kiểu luận lý).</p>
<p>Kiểu dữ liệu này chỉ nhận 2 giá trị là <code>true</code> và <code>false</code>&nbsp;(tương ứng với đúng và sai), kiểu <code>bool</code> bản chất cũng là kiểu số nguyên nên giá trị <code>true</code> và <code>false</code> thực ra là <code>1</code> và <code>0</code>. Xem chương trình sau để hiểu rõ hơn:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Khai báo biến a kiểu bool và gán giá trị cho a = true</span>
	<span class="token keyword">bool</span> a <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	<span class="token comment">// Khai báo biến b kiểu bool và gán giá trị cho b = false</span>
	<span class="token keyword">bool</span> b <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token comment">// Hiển thị biến a và b ra màn hình</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"b = "</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-cpp"><code class=" language-cpp">a <span class="token operator">=</span> <span class="token number">1</span>
b <span class="token operator">=</span> <span class="token number">0</span></code></pre>
<p>Kiểu <code>bool</code> thường được dùng để lưu các giá trị của các biểu thức mang tính đúng sai. Ví dụ:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">bool</span> b1 <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">&gt;</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// &gt; là toán tử so sánh lớn hơn, b1 sẽ có giá trị là true</span>
<span class="token keyword">bool</span> b2 <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// &lt; là toán tử so sánh nhỏ hơn, b2 sẽ có giá trị là false</span>
<span class="token keyword">bool</span> b3 <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// == là toán tử so sánh bằng, b3 có giá trị là true</span>
<span class="token keyword">bool</span> b4 <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">!=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// != là toán tử so sánh khác bằng b4 có giá trị là false</span></code></pre>
<p>Các toán tử <code>&gt;, &lt;, ==, !=</code> là các toán tử so sánh được dùng trong các biểu thức điều kiện, bạn sẽ được học về các toán tử này rõ hơn trong các bài về mệnh đề <code>if-else</code>.</p>
<p><strong>Lưu ý:</strong>&nbsp;bạn cũng có thể gán các giá trị số nguyên cho biến kiểu <code>bool</code>, các giá trị khác <code>0</code> sẽ được hiểu là <code>true</code> và giá trị <code>0</code> sẽ được hiểu là <code>false</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">bool</span> b1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// b1 sẽ nhận giá trị false</span>
<span class="token keyword">bool</span> b2 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// b2 sẽ nhận giá trị true</span>
<span class="token keyword">bool</span> b3 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// b2 sẽ nhận giá trị true</span>
<span class="token keyword">bool</span> b4 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">// b3 sẽ nhận giá trị true</span>
<span class="token keyword">bool</span> b5 <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">// b3 sẽ nhận giá trị true</span></code></pre>
<h4>Hướng dẫn</h4>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">bool</span> b <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> b<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Các kiểu dữ liệu trong C++ | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Cho biến <code>a</code> kiểu số nguyên, biết giá trị của biến <code>a</code>&nbsp;luôn nằm trong khoảng <code>[-1000, 1000]</code>, kiểu dữ liệu nào sau đây là phụ hợp nhất để khai báo biến <code>a</code>.</p>
<h4>Lý thuyết</h4>
<p>Ở các bài trước bạn đã được học một số kiểu dữ liệu như <code>short, int, long long, double, bool, ...</code> ngoài các kiểu dữ liệu này ra trong C++ còn một số kiểu dữ liệu nữa, xem bảng sau để hiểu rõ hơn:</p>
<table class="table table-bordered" style="height: 229px;">
<tbody>
<tr style="height: 18px;">
<th style="height: 18px;">Kiểu dữ liệu</th>
<th style="height: 18px;">Kích thước</th>
<th style="height: 18px;">Miền giá trị</th>
</tr>
<tr style="height: 18px;">
<td style="height: 18px;">bool</td>
<td style="height: 18px;">1byte</td>
<td style="height: 18px;">0 tới 1</td>
</tr>
<tr style="height: 18px;">
<td style="height: 18px;">char</td>
<td style="height: 18px;">1byte</td>
<td style="height: 18px;">-128 tới 127</td>
</tr>
<tr style="height: 18px;">
<td style="height: 18px;">unsigned char</td>
<td style="height: 18px;">1byte</td>
<td style="height: 18px;">0 tới 255</td>
</tr>
<tr style="height: 18px;">
<td style="height: 18px;">int</td>
<td style="height: 18px;">4bytes</td>
<td style="height: 18px;">-2147483648 tới 2147483647</td>
</tr>
<tr style="height: 18px;">
<td style="height: 18px;">unsigned int</td>
<td style="height: 18px;">4bytes</td>
<td style="height: 18px;">0 tới 4294967295</td>
</tr>
<tr style="height: 18px;">
<td style="height: 18px;">short</td>
<td style="height: 18px;">2bytes</td>
<td style="height: 18px;">-32768 tới 32767</td>
</tr>
<tr style="height: 18px;">
<td style="height: 18px;">unsigned short</td>
<td style="height: 18px;">2bytes</td>
<td style="height: 18px;">0 tới 65,535</td>
</tr>
<tr style="height: 21px;">
<td style="height: 21px;">long long</td>
<td style="height: 21px;">8bytes</td>
<td style="height: 21px;">-(2<sup>63</sup>) tới (2<sup>63</sup>) - 1</td>
</tr>
<tr style="height: 18px;">
<td style="height: 18px;">unsigned long long</td>
<td style="height: 18px;">8bytes</td>
<td style="height: 18px;">0 tới 18446744073709551615</td>
</tr>
<tr style="height: 18px;">
<td style="height: 18px;">float</td>
<td style="height: 18px;">4bytes</td>
<td style="height: 18px;"></td>
</tr>
<tr style="height: 18px;">
<td style="height: 18px;">double</td>
<td style="height: 18px;">8bytes</td>
<td style="height: 18px;"></td>
</tr>
<tr style="height: 18px;">
<td style="height: 18px;">string</td>
<td style="height: 18px;"></td>
<td style="height: 18px;"></td>
</tr>
</tbody>
</table>
<p>Ở trong bảng trên thì cột <strong>Kích thước</strong>&nbsp;được dùng để thể hiện<span>&nbsp;số <code>byte</code> mà chương trình cần để lưu trữ cho biến của kiểu dữ liệu tương ứng. Ví dụ nếu bạn khai báo biến&nbsp;<code>a</code>&nbsp;kiểu <code>int</code> thì chương trình sẽ cần sử dụng <code>4 bytes</code> trên RAM để lưu trữ biến&nbsp;<code>a</code>. Cột kích thước không có giá trị cho biến kiểu </span><span><code>string</code>&nbsp;do số bytes cần cho biến kiểu&nbsp;<code>string</code>&nbsp;sẽ bị phụ thuộc vào số ký tự của nó.</span><span></span></p>
<p><span>Có thể thấy kiểu dữ liệu có miền giá trị càng lớn thì càng tốn bộ nhớ nên bạn cần chọn kiểu dữ liệu phù hợp cho các biến. Ví dụ bạn không nên dùng biến kiểu <code>long long</code> chỉ để lưu trữ số học sinh của một lớp học hay số nhân viên của một công ty, thay vào đó bạn nên dùng kiểu dữ liệu <code>short</code> hoặc <code>int</code>.</span></p>
<p><span>Các kiểu dữ liệu mà có từ <code>unsigned</code>&nbsp;đằng trước là các kiểu dữ liệu chỉ lưu trữ được các giá trị lớn hơn hoặc bằng <code>0</code> (<code>unsigned</code> trong tiếng anh là không dấu, có thể hiểu là các số không có dấu <code>-</code> đằng trước và đây là các số không âm).</span></p>
<p><strong>Lưu ý:</strong> Khi sử dụng kiểu <code>unsigned</code> với phép trừ thì bạn nên cẩn thận vì đây là kiểu dữ liệu không lưu được các giá trị âm, hãy xem ví dụ sau để hiểu hơn:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">unsigned</span> <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
	<span class="token keyword">unsigned</span> <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">4294967293</code></pre>
Nhập xuất dữ liệu cơ bản trong C++ | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Bạn hãy viết chương trình nhập vào tên của mình từ bàn phím và thực hiện hiển thị ra màn hình dòng chữ:</p>
<pre class=" language-markup"><code class=" language-markup">Hello {P}</code></pre>
<p>Với <code>{P}</code> là tên bạn vừa nhập từ bàn phím.</p>
<p>Ví dụ nếu bạn nhập tên là <strong>Trung</strong> thì màn hình sẽ hiển thị lên dòng chữ:</p>
<pre class=" language-markup"><code class=" language-markup">Hello Trung</code></pre>
<h4>Lý thuyết</h4>
<p>Để nhập dữ liệu cho 1 biến từ bàn phím bạn có thể dùng câu lệnh <code>cin &gt;&gt; tên_biến;</code></p>
<p>Bạn hãy chạy thử chương trình sau để hiểu rõ hơn:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Khai báo biến name kiểu string</span>
	string name<span class="token punctuation">;</span>
	<span class="token comment">// Dùng lệnh cin để nhập giá trị cho biến name từ bàn phím</span>
	cin <span class="token operator">&gt;&gt;</span> name<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello "</span> <span class="token operator">&lt;&lt;</span> name<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Sau khi chạy bạn hãy nhập từ bàn phím:</p>
<pre class=" language-markup"><code class=" language-markup">Trung</code></pre>
<p>Và bấm phím <strong>Enter</strong> thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">Hello Trung</code></pre>
<p>Có thể thấy việc nhập dữ liệu từ bàn phím vào 1 biến là rất đơn giản, bạn chỉ cần dùng câu lệnh <code>cin &gt;&gt; tên_biến;</code></p>
<p><strong>Lưu ý:</strong>&nbsp;với <code>cout</code> thì bạn dùng cặp dấu nhỏ hơn (<code>&lt;&lt;</code>) còn với <code>cin</code> thì bạn dùng cặp dấu lớn hơn (<code>&gt;&gt;</code>).</p>
<h4>Hướng dẫn</h4>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	string name<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> name<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello "</span> <span class="token operator">&lt;&lt;</span> name<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: nhập tên và địa chỉ sau đó hiển thị thông tin vừa nhập | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Bạn hãy viết chương trình nhập vào tên và địa chỉ của một người sau đó hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">Name: {P1}
Address: {P2}</code></pre>
<p>Với <code>{P1}</code> và <code>{P2}</code> lần lượt là tên và địa chỉ của người đó.</p>
<p>Ví dụ nếu bạn nhập:</p>
<pre class=" language-markup"><code class=" language-markup">Kien
HaNoi</code></pre>
<p>Thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">Name: Kien
Address: HaNoi</code></pre>
<p><strong>Lưu ý:</strong>&nbsp;khi chạy chương trình ở trên máy, bạn không nhập tên và địa chỉ có khoảng trắng vì lệnh&nbsp;<code>cin</code> không đọc được khoảng trắng. Ví dụ chương trình sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	string s<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Nếu bạn nhập</p>
<pre class=" language-cpp"><code class=" language-cpp">Welcome to Codelearn</code></pre>
<p>Thì chương trình sẽ chỉ hiển thị:</p>
<pre class=" language-markup"><code class=" language-markup">Welcome</code></pre>
<p>Để nhập được dữ liệu có khoảng trắng vào cho biến <code>s</code> bạn cần dùng câu lệnh&nbsp;<code>getline(cin, s);</code>&nbsp;nhưng bạn chưa cần lo về vấn đề này vội vì các test cases trong bài này cũng như các bài khác đều không có khoảng trắng khi nhập dữ liệu.</p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h4>Hướng dẫn</h4>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string name<span class="token punctuation">,</span> address<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> name <span class="token operator">&gt;&gt;</span> address<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Name: "</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Address: "</span> <span class="token operator">&lt;&lt;</span> address<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Hoặc nếu bạn muốn nhập được dữ liệu có khoảng trắng cho biến <code>name</code> và <code>address</code> thì có thể làm như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;string&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string name<span class="token punctuation">,</span> address<span class="token punctuation">;</span>
    <span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span> address<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Name: "</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Address: "</span> <span class="token operator">&lt;&lt;</span> address<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: tính tổng 2 số được nhập vào từ bàn phím | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Bạn hãy viết chương trình tạo ra 2 biến <code>a</code> và <code>b</code>&nbsp;kiểu số nguyên. Sau đó nhập giá trị cho&nbsp;<code>a</code> và <code>b</code> từ bàn phím và hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">a + b = {P}</code></pre>
<p>Với <code>{P}</code> là tổng của <code>a</code> và <code>b</code>.</p>
<p>Ví dụ nếu bạn nhập</p>
<pre class=" language-markup"><code class=" language-markup">7 9</code></pre>
<p>thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">a + b = 16</code></pre>
<h4>Lý thuyết</h4>
<p>Nhập dữ liệu cho biến kiểu <code>int</code> cũng giống như nhập dữ liệu cho biến kiểu <code>string</code>. Ví dụ về chương trình nhập từ bàn phím 2 số nguyên và hiển thị ra hiệu của chúng:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a - b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Nếu bạn nhập</p>
<pre class=" language-markup"><code class=" language-markup">5 8</code></pre>
<p>Và bấm phím <strong>Enter</strong> thì chương trình này sẽ hiển thị lên màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">a - b = -3</code></pre>
<p><strong>Lưu ý:</strong>&nbsp;nếu bạn nhập giá trị không hợp lệ cho các biến kiểu số&nbsp;thì giá trị nhận được sẽ là <code>0</code>. Ví dụ nếu bạn nhập giá trị cho biến <code>a</code> kiểu <code>int</code> là <code>"abc"</code>, <code>"xyz"</code>, ... thì <code>a</code> sẽ nhận giá trị 0.</p>
<p>Đọc tới đây bạn đã có thể quay lại phần bài tập và làm thử.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a + b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: tính diện tích hình chữ nhật | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Bạn hãy viết chương trình nhập từ bàn phím chiều dài và chiều rộng của một hình chữ nhật (chiều dài và chiều rộng của hình chữ nhật này là một số nguyên) sau đó hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">Area = {P}</code></pre>
<p>Với <code>{P}</code> là diện tích của hình chữ nhật.</p>
<h4>Hướng dẫn</h4>
<p>Chiều dài và chiều rộng của hình chữ nhật là một số nguyên nên bạn cần khai bao biến với kiểu dữ liệu số nguyên:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">int</span> length<span class="token punctuation">,</span> width<span class="token punctuation">;</span></code></pre>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> length<span class="token punctuation">,</span> width<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> length <span class="token operator">&gt;&gt;</span> width<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Area = "</span> <span class="token operator">&lt;&lt;</span> length <span class="token operator">*</span> width<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Toán tử chia lấy phần dư trong C++ | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Cho 2 biến <code>a</code><span>&nbsp;</span>và<span>&nbsp;</span><code>b</code><span>&nbsp;kiểu số nguyên&nbsp;</span>được nhập vào từ bàn phím, bạn hãy viết chương trình hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">a % b = {P}</code></pre>
<p>Với <code>{P}</code> là phần dư của phép chia&nbsp;<code>a/b</code>.</p>
<p>Ví dụ nếu bạn nhập</p>
<pre class=" language-markup"><code class=" language-markup">7 3</code></pre>
<p>thì màn hình sẽ hiển thị:</p>
<pre class=" language-markup"><code class=" language-markup">a % b = 1</code></pre>
<p>Giải thích: <code>7</code> chia <code>3</code> dư <code>1</code></p>
<h4>Lý thuyết</h4>
<p>Để lấy phần dư của một phép chia bạn có thể sử dụng toán tử <code>%</code>. Ví dụ chương trình:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token number">5</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Sẽ hiển thị lên màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">2</code></pre>
<p>Do <code>2</code> là phần dư của phép chia <code>5/3</code>.</p>
<p><strong>Lưu ý:</strong>&nbsp;toán tử chia lấy phần dư <code>%</code> chỉ có thể được áp dụng cho các số nguyên chứ không thể áp dụng cho các số thực.</p>
<h4>Hướng dẫn</h4>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a % b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">%</span> b<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: Tính tổng, hiệu, tích, thương của 2 số | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Cho 2 biến <code>a</code> và <code>b</code> kiểu số nguyên được nhập vào từ bàn phím, bạn hãy viết chương trình hiển thị ra màn hình các phép toán trên 2 biến này giống như sau:</p>
<pre class=" language-markup"><code class=" language-markup">a + b = {P1}
a - b = {P2}
a * b = {P3}
a / b = {P4}
a % b = {P5}</code></pre>
<p>Trong đó:</p>
<p><code>{P1}</code> là tổng của <code>a</code> và <code>b</code>.</p>
<p><code>{P2}</code> là hiệu của <code>a</code> và <code>b</code>.</p>
<p><code>{P3}</code> là tích của <code>a</code> và <code>b</code>.</p>
<p><code>{P4}</code> là thương của <code>a</code> và <code>b</code>.</p>
<p><code>{P5}</code> là phần dư của phép chia <code>a/b</code>.</p>
<p>Ví dụ nếu bạn nhập:</p>
<pre class=" language-markup"><code class=" language-markup">10 5</code></pre>
<p>thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">a + b = 15
a - b = 5
a * b = 50
a / b = 2
a % b = 0</code></pre>
<h4>Hướng dẫn</h4>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a + b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">+</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a - b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">-</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a * b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">*</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a / b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">/</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a % b = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">%</span> b<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: hiển thị tuổi của một người sau 15 năm | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Bạn hãy viết chương trình nhập vào từ bàn phím tên, tuổi của một người. Sau đó hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">In 15 years, age of {P1} will be {P2}</code></pre>
<p>Với <code>{P1}</code> là tên của người đó, <code>{P2}</code> là tuổi của người đó sau 15 năm.</p>
<p>Ví dụ nếu bạn nhập:</p>
<pre class=" language-markup"><code class=" language-markup">Tuan 23</code></pre>
<p>Thì màn hình sẽ hiển thị lên:</p>
<pre class=" language-markup"><code class=" language-markup">In 15 years, age of Tuan will be 38</code></pre>
<h4>Hướng dẫn</h4>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	string name<span class="token punctuation">;</span>
	<span class="token keyword">int</span> age<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> name <span class="token operator">&gt;&gt;</span> age<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"In 15 years, age of "</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token string">" will be "</span> <span class="token operator">&lt;&lt;</span> age <span class="token operator">+</span> <span class="token number">15</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: hoán đổi giá trị 2 biến | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p><span>Cho 2 biến </span><code>a</code><span>&nbsp;và&nbsp;</span><code>b</code>&nbsp;kiểu số nguyen<span>&nbsp;được nhập vào từ bàn phím,</span>&nbsp;bạn hãy viết chương trình hoán đổi giá trị của hai biến này&nbsp;sau đó hiển thị ra màn hình:</p>
<pre class=" language-cpp"><code class=" language-cpp">after swapping<span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>P1<span class="token punctuation">}</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>P2<span class="token punctuation">}</span></code></pre>
<p>Với <code>{P1}</code> và <code>{P2}</code> lần lượt là giá trị của <code>a</code> và <code>b</code> sau khi đã hoán đổi.</p>
<p>Ví dụ nếu bạn nhập <code>a = 3, b = 4</code> như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">3 4</code></pre>
<p>Thì chương trình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">after swapping, a = 4, b = 3</code></pre>
<p>Nếu bạn chưa giải được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h4>Hướng dẫn</h4>
<p>Để hoán đổi giá trị của 2 biến bạn không thể gán trực tiếp <code>a = b, b = a;</code>&nbsp;(do nếu gán <code>a = b</code> thì lúc này giá trị của <code>a</code> sẽ bằng <code>b</code> và sau đó gán lại <code>b = a</code> thì thực chất là gán giá trị của <code>b</code> cho chính nó). Ví dụ:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
	a <span class="token operator">=</span> b<span class="token punctuation">,</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">4 4</code></pre>
<p>Do đó bạn cần lưu lại được giá trị của biến <code>a</code>, gán <code>a</code> cho <code>b</code> và gán ngược lại <code>b</code> cho giá trị ban đầu của <code>a</code>. Để làm được việc này bạn cần&nbsp;tạo ra biến trung gian&nbsp;<code>c</code> và làm giống như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">int</span> c <span class="token operator">=</span> a<span class="token punctuation">;</span>
a <span class="token operator">=</span> b<span class="token punctuation">;</span>
b <span class="token operator">=</span> c<span class="token punctuation">;</span></code></pre>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
	<span class="token keyword">int</span> c <span class="token operator">=</span> a<span class="token punctuation">;</span>
	a <span class="token operator">=</span> b<span class="token punctuation">;</span>
	b <span class="token operator">=</span> c<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"after swapping, a = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">", b = "</span> <span class="token operator">&lt;&lt;</span> b<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Ngoài ra, còn có một số cách làm mà không tạo ra biến trung gian giống như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
	a <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
	b <span class="token operator">=</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>
	a <span class="token operator">=</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"after swapping, a = "</span> <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">", b = "</span> <span class="token operator">&lt;&lt;</span> b<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: tính chu vi của một hình tròn | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Viết chương trình nhập vào bán kính <code>r</code> của một hình tròn và hiển thị ra màn hình chu vi của hình tròn đó biết <code>π&nbsp;= 3.14</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp">Circumference <span class="token operator">=</span> <span class="token punctuation">{</span>P<span class="token punctuation">}</span></code></pre>
<p>Với <code>{P}</code>&nbsp;là chu vi của hình tròn có bán kính <code>r.</code></p>
<p>Ví dụ nếu bạn nhập:</p>
<pre class=" language-markup"><code class=" language-markup">7.5</code></pre>
<p>Thì chương trình sẽ in ra:</p>
<pre class=" language-markup"><code class=" language-markup">Circumference = 47.1</code></pre>
<h4>Hướng dẫn</h4>
<p>Bán kính của của hình tròn có thể là một số thực nên bạn cần khai báo biến với kiểu&nbsp;<code>double</code>.</p>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">double</span> r<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> r<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Circumference = "</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span> <span class="token operator">*</span> r <span class="token operator">*</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: hiển thị ký tự tiếp theo trong bảng chữ cái | Codelearn
---------------------------------------
<h4>Đề bài</h4>
<p>Bạn hãy viết chương trình nhập vào một ký tự từ bàn phím và thực hiện hiển thị ký tự tiếp theo trong bảng bảng chữ cái của ký tự đó ra màn hình.</p>
<p>Ví dụ nếu bạn nhập</p>
<pre class=" language-markup"><code class=" language-markup">c</code></pre>
<p>thì chương trình sẽ hiển thị ra</p>
<pre class=" language-markup"><code class=" language-markup">d</code></pre>
<p>Giải thích: <code>'d'</code> là ký tự tiếp theo của <code>'c'</code> trong bảng chữ cái.</p>
<h4>Hướng dẫn</h4>
<p>Như đã được học ở chương <b>Biến và các kiểu dữ liệu</b>, bạn có thể hiển thị ký tự tiếp theo của một ký tự bằng cách cộng ký tự đó với <code>1</code>.</p>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">char</span> c<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> c<span class="token punctuation">;</span>
	c <span class="token operator">=</span> c <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> c<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Mệnh đề if else trong C++ | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Bạn hãy viết chương trình nhập vào từ bàn phím số nguyên <code>n</code>. Sau đó kiểm tra xem nếu <code>n</code> là số chẵn thì hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">n is an even number</code></pre>
<p>Ngược lại, nếu <code>n</code> là số lẻ thì hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">n is an odd number</code></pre>
<h4>Lý thuyết</h4>
<p><span>Khi lập trình chắc chắn sẽ có những lúc bạn muốn sử dụng tới câu điều kiện, ví dụ như khi bạn muốn viết chương trình kiểm tra tính chẵn lẻ của một số hay kiểm tra xem tên của 2 người có giống nhau hay không, ... để viết được chương trình theo yêu cầu trên thì bạn cần biết cách sử dụng mệnh đề</span><span>&nbsp;</span><code>if</code><span>&nbsp;</span><span>hoặc mệnh đề</span><span>&nbsp;</span><code>if-else</code>.</p>
<p><strong>Mệnh đề if:</strong></p>
<p>Mệnh đề <code>if</code> được dùng để kiểm tra một biểu thức điều kiện có đúng hay không, nếu đúng thì các câu lệnh bên trong mệnh đề <code>if</code> sẽ được thực thi. Ví dụ để kiểm tra xem <code>n</code> có chia hết cho 2 không bạn có thể làm như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Nếu n chia hết cho 2 thì hiển thị n is an even number</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is an even number"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Nếu n không chia hết cho 2 thì hiển thị n is an odd number</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is an odd number"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Trong ngôn ngữ lập trình C++,&nbsp;<code>==</code>&nbsp;là toán tử kiểm tra xem 2 giá trị có bằng nhau không, <code>!=</code> là toán tử kiểm tra xem 2 giá trị có khác nhau không. Như ở ví dụ trên&nbsp;<code>if (n % 2 == 0)</code>&nbsp;là câu lệnh kiểm tra xem <code>n</code> chia dư cho 2 có bằng 0 không, <code>if (n % 2 != 0)</code>&nbsp;là câu lệnh kiểm tra xem <code>n</code> chia dư cho 2 có khác 0 không.</p>
<p><strong>Lưu ý:</strong> Một số bạn hay nhầm giữa toán tử <code>=</code> và toán tử <code>==</code>, toán tử <code>=</code> là toán tử gán giá trị chứ không phải toán tử so sánh nên nếu bạn dùng toán tử <code>=</code> để so sánh hay giá trị thì chương trình sẽ cho ra kết quả sai.</p>
<p><strong>Mệnh đề if-else:</strong></p>
<p>Tương tự như mệnh đề <code>if</code> nhưng nếu biểu thức điều kiện trong <code>if</code> sai thì đoạn code bên trong <code>else</code> sẽ được thực thi:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Nếu n chia hết cho 2 thì hiển thị n is an even number</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is an even number"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
	<span class="token comment">// Ngược lại (n không chia hết cho 2) thì hiển thị n is an odd number</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is an odd number"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Nếu bạn vẫn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h4>Hướng dẫn</h4>
<p>Code mẫu sử dụng mệnh đề <code>if</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> n<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is an even number"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is an odd number"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Code mẫu sử dụng mệnh đề <code>if-else</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> n<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is an even number"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is an odd number"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: kiểm tra một số là số nguyên âm hay nguyên dương | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Bạn hãy viết chương trình nhập vào từ bàn phím số nguyên <code>n</code> và hiển thị ra màn hình:</p>
<p>Nếu <code>n</code> là số nguyên dương thì hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">n is a positive number</code></pre>
<p>Nếu <code>n</code> là số nguyên âm thì hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">n is a negative number</code></pre>
<p>Nếu <code>n = 0</code> thì hiển thị ra:</p>
<pre class=" language-cpp"><code class=" language-cpp">n is equal to <span class="token number">0</span></code></pre>
<h4>Lý thuyết</h4>
<p>Để kiểm tra một số có bằng 0 không bạn có thể sử dụng mệnh đề<span>&nbsp;</span><code>if</code>&nbsp;và toán tử<span>&nbsp;</span><code>==</code>&nbsp;giống như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Nếu n = 0 thì hiển thị ra màn hình n is equal to 0</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is equal to 0"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Để kiểm tra một số là nguyên âm hay nguyên dương bạn có thể sử dụng mệnh đề<span>&nbsp;</span><code>if</code>&nbsp;với các toán tử<span>&nbsp;</span><code>&gt;</code>&nbsp;và<span>&nbsp;</span><code>&lt;</code>. Ví dụ chương trình sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Nếu n lớn hơn 0 thì hiển thị n is a positive number</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is a positive number"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Nếu n nhỏ hơn 0 thì hiển thị n is a negative number</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is a negative number"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Sẽ hiển thị lên màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">n is a positive number</code></pre>
<p>Đọc tới đây bạn đã biết cách sử dụng toán tử <code>&gt;</code> và <code>&lt;</code> để so sánh, hãy quay lại phần bài tập và làm thử.</p>
<h3>Hướng dẫn</h3>
<p>Bạn hãy tham khảo cả 3 đoạn code mẫu bên dưới.</p>
<p>Code mẫu sử dụng mệnh đề <code>if</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> n<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is a positive number"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is a negative number"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> 
	<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is equal to 0"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Code mẫu sử dụng mệnh đề&nbsp;<code>if-else</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is a positive number"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is a negative number"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is equal to 0"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Code trên có thể viết ngắn hơn bằng cách viết liền <code>else if</code> và <code>else</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is a positive number"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is a negative number"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"n is equal to 0"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: so sánh giá trị 2 số được nhập vào từ bàn phím | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Bạn hãy viết chương trình nhập vào từ bàn phím số 2 nguyên <code>a</code> và <code>b</code>. Sau đó hiển thị ra màn hình:</p>
<p>Nếu <code>a</code> lớn hơn hoặc bằng <code>b</code> thì hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">a is greater than or equal to b</code></pre>
<p>Ngược lại nếu <code>a</code> nhỏ hơn <code>b</code> thì hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">a is smaller than b</code></pre>
<h4>Lý thuyết</h4>
<p>Để kiểm tra một số có lớn hơn hoặc bằng số khác không bạn có thể sử dụng toán tử&nbsp;<code>&gt;=</code>. Ví dụ để kiểm tra biến&nbsp;<code>a</code> có lớn hơn hoặc bằng biến&nbsp;<code>b</code> bạn có thể làm như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;=</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">/* 
	Nếu a lớn hơn hoặc bằng b thì hiển thị ra màn hình
	a is greater than or equal to b
	*/</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a is greater than or equal to b"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Đọc tới đây bạn đã có thể quay lại phần bài tập và làm thử.</p>
<h4>Hướng dẫn</h4>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;=</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a is greater than or equal to b"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">else</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a is smaller than b"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập C++ cơ bản: nhập và so sánh biến kiểu string | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Viết chương trình nhập vào tên của 2 người, bạn hãy kiểm tra xem tên của 2 người này có giống nhau hay không. Nếu có thì hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">two people have the same name</code></pre>
<p>Ngược lại nếu tên của 2 người này không giống nhau thì hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">two people don't have the same name</code></pre>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h4>Hướng dẫn</h4>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"two people have the same name"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"two people don't have the same name"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Mệnh đề if-else và toán tử AND trong C++ | Codelearn
---------------------------------------
<h4>Bài tập</h4>
<p>Viết chương trình nhập từ bàn phím 2 số nguyên <code>a, b</code>. Bạn hãy kiểm tra xem giá trị của cả <code>a</code> và <code>b</code> có khác <code>0</code> không. Nếu có hiển thị:</p>
<pre class=" language-markup"><code class=" language-markup">a is not equal to 0 and b is not equal to 0</code></pre>
<p>Ngược lại nếu <code>a</code> hoặc <code>b</code> có giá trị bằng <code>0</code> thì hiển thị:</p>
<pre class=" language-markup"><code class=" language-markup">a is equal to 0 or b is equal to 0</code></pre>
<h4>Lý thuyết</h4>
<p>Để kiểm tra xem một số có khác<span>&nbsp;</span><code>0</code><span>&nbsp;</span>rất đơn giản, bạn có thể sử dụng mệnh đề<span>&nbsp;</span><code>if</code><span>&nbsp;</span>và toán tử<span>&nbsp;</span><code>!=</code>. Ví dụ để kiểm tra xem biến<span>&nbsp;</span><code>a</code><span>&nbsp;</span>có khác<span>&nbsp;</span><code>0</code><span>&nbsp;</span>bạn có thể làm như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Nếu a khác 0 thì hiển thị a is not equal to zero</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a is not equal to 0"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Vậy để kiểm tra xem cả <code>a</code> và <code>b</code> có khác <code>0</code>&nbsp;bạn cần kết hợp được 2 câu lệnh <code>if (a != 0)</code> và <code>if (b != 0)</code>&nbsp;lại với nhau. Trong C++ bạn có thể kết hợp 2 câu lệnh này bằng toán tử <code>&amp;&amp;</code>. Ví dụ:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> b <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Nếu cả a và b đều khác 0 thì hiển thị a is not equal to 0 and b is not equal to 0</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a is not equal to 0 and b is not equal to 0"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Hoặc bạn cũng có thể dùng 2 câu lệnh <code>if</code> lồng nhau nhưng bạn không nên làm theo cách này:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a is not equal to 0 and b is not equal to 0"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<p>Đọc tới đây bạn đã có thể quay lại phần bài tập và làm thử.</p>
<h4>Hướng dẫn</h4>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> b <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a is not equal to 0 and b is not equal to 0"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"a is equal to 0 or b is equal to 0"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: tìm số lớn nhất trong 3 số | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Viết chương trình nhập từ bàn phím 3 số nguyên. Sau đó hiển thị lên màn hình số lớn nhất trong 3 số này.</p>
<p>Ví dụ nếu bạn nhập:</p>
<pre class=" language-markup"><code class=" language-markup">4 7 3</code></pre>
<p>thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">7</code></pre>
<p>Nếu bạn nhập:</p>
<pre class=" language-markup"><code class=" language-markup">4 4 4</code></pre>
<p>thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">4</code></pre>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p><strong>Sử dụng toán tử 3 ngôi</strong></p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b <span class="token operator">&gt;&gt;</span> c<span class="token punctuation">;</span>
	<span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b <span class="token operator">&amp;&amp;</span> a <span class="token operator">&gt;</span> c<span class="token punctuation">)</span> <span class="token operator">?</span> a <span class="token operator">:</span> <span class="token punctuation">(</span>b <span class="token operator">&gt;</span> c <span class="token operator">?</span> b <span class="token operator">:</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> max<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p><strong>Sử dụng mệnh đề if hoặc if-else</strong></p>
<p>Bạn cần lưu ý trường hợp giá trị của <code>a, b</code> và <code>c</code> là như nhau, trong trường hợp này nếu bạn sử dụng 3 câu lệnh <code>if</code> thì chương trình sẽ cho kết quả sai, xem chương trình sau để hiểu rõ hơn:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span>
	a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
	b <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
	c <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;=</span> b <span class="token operator">&amp;&amp;</span> a <span class="token operator">&gt;=</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">&gt;=</span> a <span class="token operator">&amp;&amp;</span> b <span class="token operator">&gt;=</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;=</span> a <span class="token operator">&amp;&amp;</span> c <span class="token operator">&gt;=</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> c <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">5
5
5</code></pre>
<p>Để làm bài này bạn cần sử dụng câu lệnh <code>if-else</code>. Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b <span class="token operator">&gt;&gt;</span> c<span class="token punctuation">;</span>
	
	<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;=</span> b <span class="token operator">&amp;&amp;</span> a <span class="token operator">&gt;=</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> a<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">&gt;=</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> b<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> c<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Đoạn code trên có thể rút gọn thành:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b <span class="token operator">&gt;&gt;</span> c<span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;=</span> b <span class="token operator">&amp;&amp;</span> a <span class="token operator">&gt;=</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> a<span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">&gt;=</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> b<span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> c<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: kiểm tra giá trị một số có nằm trong một đoạn cho trước | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Viết chương trình nhập từ bàn phím số nguyên <code>a</code>. Bạn hãy kiểm tra xem <code>a</code> có nằm trong đoạn <code>[10, 100]</code> không, nếu có thì hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">{P} is in the range [10, 100]</code></pre>
<p>Ngược lại hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">{P} is not in the range [10, 100]</code></pre>
<p>Với <code>{P}</code> là giá trị của biến <code>a</code>.</p>
<p>Lưu ý: nếu bạn đã quên khái niệm về đoạn thì&nbsp;<code>[10, 100]</code> chính là đoạn bao gồm các số lớn hơn hoặc bằng 10 và nhỏ hơn hoặc bằng 100.</p>
<p>Ví dụ nếu bạn nhập:</p>
<pre class=" language-markup"><code class=" language-markup">55</code></pre>
<p>Thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">55 is in the range [10, 100]</code></pre>
<h3>Hướng dẫn</h3>
<p>Lưu ý: Bạn không thể viết<span>&nbsp;</span><code>if (10 &lt;= a &lt;= 100)</code><span>&nbsp;</span>để kiểm tra xem<span>&nbsp;</span><code>a</code><span>&nbsp;</span>có nằm trong đoạn<span>&nbsp;</span><code>[10, 100]</code><span>&nbsp;</span>không, để làm bài này bạn cần sử dụng toán tử<span>&nbsp;</span><code>&amp;&amp;</code>.&nbsp;</p>
<p>Code mẫu sử dụng toán tử 3 ngôi:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">&gt;=</span> <span class="token number">10</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"is in the range[10, 100]"</span> <span class="token operator">:</span> <span class="token string">" is not in the range [10, 100]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Code mẫu sử dụng mệnh đề <code>if-else</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;=</span> <span class="token number">10</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">" is in the range [10, 100]"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">" is not in the range [10, 100]"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: kiểm tra xem điểm nhập vào có hợp lệ hay không | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Viết chương trình nhập từ bàn phím điểm của một học sinh. Biết điểm hợp lệ là điểm nằm trong đoạn từ 0 đến 10, bạn hãy kiểm tra xem điểm vừa nhập có hợp lệ không, nếu có thì hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">The score is valid</code></pre>
<p>Ngược lại nếu điểm không hợp lệ&nbsp;thì hiển thị:</p>
<pre class=" language-markup"><code class=" language-markup">The score is not valid</code></pre>
<h3>Lý thuyết</h3>
<p>Bài này bạn có thể dùng mệnh đề <code>if</code>&nbsp;và toán tử <code>&amp;&amp;</code> như bài trước hoặc cũng có thể dùng mệnh đề <code>if</code> và toán tử <code>||</code>. <span>Ngược với toán tử&nbsp;</span><code>&amp;&amp;</code><span>, toán tử&nbsp;</span><code>||</code><span>&nbsp;dùng để kiểm tra xem một trong các biểu thức có đúng không, nếu có thì đoạn code bên trong mệnh đề&nbsp;<code>if</code> sẽ được thực thi (với toán tử <code>&amp;&amp;</code> thì tất cả các biểu thức phải đúng thì code bên trong mệnh đề <code>if</code> mới được thực thi, hiểu đơn giản hơn thì <code>||</code> là toán tử <strong>hoặc</strong> còn <code>&amp;&amp;</code> là toán tử <strong>và</strong>). Ví dụ để kiểm tra biến&nbsp;</span><code>score</code><span>&nbsp;có nhỏ hơn&nbsp;</span><code>0</code><span>&nbsp;hoặc lớn hơn&nbsp;</span><code>10</code><span>&nbsp;bạn có thể làm như sau:</span></p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> score <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Nếu score nhỏ hơn 0 hoặc score lớn hơn 10 thì đoạn code trong khối lệnh này sẽ được thực thi</span>
<span class="token punctuation">}</span></code></pre>
<p>Đọc tới đây bạn đã biết cách dùng toán tử <code>||</code>, hãy sử dụng cả 2 toán tử là <code>&amp;&amp;</code> và <code>||</code> để làm bài này.</p>
<p>Nếu bạn chưa làm được thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu sử dụng toán tử <code>||</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> score<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> score<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> score <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"The score is not valid"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"The score is valid"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Code mẫu sử dụng toán tử <code>&amp;&amp;</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> score<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> score<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> score <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"The score is valid"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"The score is not valid"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: kiểm xem 3 số có tạo thành dãy tăng hoặc giảm hay không | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Viết chương trình nhập từ bàn phím 3 số nguyên <code>a, b, c</code>. Sau đó hãy kiểm tra xem <code>a, b, c</code> có tạo thành một dãy số tăng dần hoặc giảm dần hay không.</p>
<p>Nếu <code>a&nbsp;≤&nbsp;b</code> và <code>b&nbsp;≤&nbsp;c</code> thì&nbsp;chỉ hiển thị:</p>
<pre class=" language-markup"><code class=" language-markup">increasing</code></pre>
<p>Nếu <code>a&nbsp;≥&nbsp;b</code> và <code>b&nbsp;≥&nbsp;c</code>&nbsp;thì hiển thị:</p>
<pre class=" language-markup"><code class=" language-markup">decreasing</code></pre>
<p>Ngược lại, nếu không vào 1 trong hai trường hợp trên thì hiển thị:</p>
<pre class=" language-markup"><code class=" language-markup">neither increasing nor decreasing order</code></pre>
<h3>Hướng dẫn</h3>
<p>Sử dụng các câu lệnh <code>if, else if</code> và <code>else</code> cùng với toán tử so sánh <code>&gt;=</code></p>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b <span class="token operator">&gt;&gt;</span> c<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;=</span> b <span class="token operator">&amp;&amp;</span> b <span class="token operator">&lt;=</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"increasing"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;=</span> b <span class="token operator">&amp;&amp;</span> b <span class="token operator">&gt;=</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"decreasing"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"neither increasing nor decreasing order"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Câu lệnh switch case trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Cho 2 biến kiểu số nguyên <code>a, b</code> và 1 biến kiểu ký tự <code>c</code>. Cả 3 biến này đều được nhập từ bàn phím. Biết biến&nbsp;<code>c</code> là 1 trong 4 ký tự&nbsp;<code>'+'</code>, <code>'-'</code>, <code>'*'</code>&nbsp;hoặc&nbsp;<code>'/'</code>. Bạn hãy viết chương trình hiển thị giá trị của biểu thức khi áp dụng phép toán <code>c</code> lên <code>a</code> và <code>b</code>. Ví dụ nếu bạn nhập <code>a = 7, c = '+', b = 9</code> như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">7 + 9</code></pre>
<p>Thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">16</code></pre>
<h3>Lý thuyết</h3>
<p>Bài này bạn hoàn toàn có thể làm bằng mệnh đề <strong>if</strong> như đã học nhưng cách tốt hơn là sử dụng lệnh <strong>switch case.</strong></p>
<p>Cấu trúc của lệnh <strong>switch case</strong>:</p>
<pre class=" language-cpp"><code class=" language-cpp">	<span class="token keyword">switch</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">case</span> giá_trị_1<span class="token operator">:</span>
		<span class="token comment">// Nếu x có giá trị bằng giá_trị_1 thì đoạn code trong khối lệnh này sẽ được thực thi</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">case</span> giá_trị_2<span class="token operator">:</span>
		<span class="token comment">// Nếu x có giá trị bằng giá_trị_2 thì đoạn code trong khối lệnh này sẽ được thực thi</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">case</span> giá_trị_3<span class="token operator">:</span>
		<span class="token comment">// Nếu x có giá trị bằng giá_trị_3 thì đoạn code trong khối lệnh này sẽ được thực thi</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token keyword">case</span> giá_trị_n<span class="token operator">:</span>
		<span class="token comment">// Nếu x có giá trị bằng giá_trị_n thì đoạn code trong khối lệnh này sẽ được thực thi</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">default</span><span class="token operator">:</span>
		<span class="token comment">/* 
		Nếu x không bằng giá trị nào trong các giá trị trên 
		thì code trong khối lệnh này sẽ được thực thi
		*/</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span></code></pre>
<p>Biến hoặc biểu thức bên trong lệnh <strong>switch</strong> phải là một số nguyên và giá trị trong các lệnh <strong>case</strong> phải là một hằng số. Ví dụ về chương trình nhập vào một số từ 1 tới 7 và hiển thị ngày trong tuần tương ứng với số đó:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> n<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
	<span class="token keyword">switch</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Monday"</span><span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Tuesday"</span><span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Wednesday"</span><span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Thursday"</span><span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Friday"</span><span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Saturday"</span><span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Sunday"</span><span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">default</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Invalid input! Please enter week number between 1-7"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p><strong>Lưu ý:&nbsp;</strong>nếu trong lệnh <code>case</code> không có <code>break</code>&nbsp;thì chương trình sẽ tiếp tục thực thi các lệnh trong các <code>case</code> tiếp theo cho tới khi gặp lệnh <code>break</code>. Ví dụ về chương trình nhập vào tháng và hiển thị ra số ngày trong tháng đó (không tính năm nhuận):</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> month<span class="token punctuation">,</span> day<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> month<span class="token punctuation">;</span>

	<span class="token keyword">switch</span> <span class="token punctuation">(</span>month<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
		<span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
		<span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>
		<span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>
		<span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>
		<span class="token keyword">case</span> <span class="token number">10</span><span class="token operator">:</span>
		<span class="token keyword">case</span> <span class="token number">12</span><span class="token operator">:</span>
		<span class="token punctuation">{</span>
			day <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
		<span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>
		<span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>
		<span class="token keyword">case</span> <span class="token number">11</span><span class="token operator">:</span>
		<span class="token punctuation">{</span>
			day <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			day <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	cout <span class="token operator">&lt;&lt;</span> day<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Đọc tới đây bạn đã có thể làm được bài này bằng câu lệnh <strong>switch case</strong>, hãy quay lại phần bài tập và làm thử.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
	<span class="token keyword">char</span> c<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> c <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
	<span class="token keyword">switch</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">case</span> <span class="token string">'+'</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">case</span> <span class="token string">'-'</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">case</span> <span class="token string">'*'</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">*</span> b<span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">case</span> <span class="token string">'/'</span><span class="token operator">:</span>
		cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">/</span> b<span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Vòng lặp for trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình nhập vào từ bàn phím số nguyên<span>&nbsp;</span><code>n</code><span>&nbsp;</span>và hiển thị ra các số từ <code>1</code> tới <code>n</code>.</p>
<p>Ví dụ nếu nhập <code>n = 10</code> thì chương trình sẽ hiển thị ra màn hình:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span> </code></pre>
<h3>Lý thuyết</h3>
<p>Bài này sẽ được giải bằng vòng lặp <code>for</code>. Cách đơn giản nhất để hiểu được vòng lặp trong C++ là xem nhiều các ví dụ.</p>
<p>Ví dụ về chương trình sử dụng vòng lặp<span>&nbsp;</span><code>for</code><span>&nbsp;</span>để in ra các số từ<span>&nbsp;</span><code>1</code><span>&nbsp;</span>tới<span>&nbsp;</span><code>5</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// i++ tương đương với i = i + 1 hoặc i += 1.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> </code></pre>
<p>Ví dụ về chương trình sử dụng vòng lặp<span>&nbsp;</span><code>for</code><span>&nbsp;</span>để in ra các số từ&nbsp;<code>10</code>&nbsp;về&nbsp;<code>1</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// i-- tương đương với i = i - 1 hoặc i -= 1</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token number">10</span> <span class="token number">9</span> <span class="token number">8</span> <span class="token number">7</span> <span class="token number">6</span> <span class="token number">5</span> <span class="token number">4</span> <span class="token number">3</span> <span class="token number">2</span> <span class="token number">1</span></code></pre>
<p>Ví dụ về chương trình sử dụng vòng lặp<span>&nbsp;</span><code>for</code><span>&nbsp;</span>để in ra các số chẵn từ<span>&nbsp;</span><code>2</code><span>&nbsp;</span>tới<span>&nbsp;</span><code>100</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p></p>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token number">2</span> <span class="token number">4</span> <span class="token number">6</span> <span class="token number">8</span> <span class="token number">10</span> <span class="token number">12</span> <span class="token number">14</span> <span class="token number">16</span> <span class="token number">18</span> <span class="token number">20</span> <span class="token number">22</span> <span class="token number">24</span> <span class="token number">26</span> <span class="token number">28</span> <span class="token number">30</span> <span class="token number">32</span> <span class="token number">34</span> <span class="token number">36</span> <span class="token number">38</span> <span class="token number">40</span> <span class="token number">42</span> <span class="token number">44</span> <span class="token number">46</span> <span class="token number">48</span> <span class="token number">50</span> <span class="token number">52</span> <span class="token number">54</span> <span class="token number">56</span> <span class="token number">58</span> <span class="token number">60</span> <span class="token number">62</span> <span class="token number">64</span> <span class="token number">66</span> <span class="token number">68</span> <span class="token number">70</span> <span class="token number">72</span> <span class="token number">74</span> <span class="token number">76</span> <span class="token number">78</span> <span class="token number">80</span> <span class="token number">82</span> <span class="token number">84</span> <span class="token number">86</span> <span class="token number">88</span> <span class="token number">90</span> <span class="token number">92</span> <span class="token number">94</span> <span class="token number">96</span> <span class="token number">98</span> <span class="token number">100</span></code></pre>
<p>Tới đây chắc bạn cũng đã hiểu sơ qua về cách sử dụng vòng lặp <code>for</code>. Vòng lặp được hiểu đơn giản là lặp lại 1 đoạn code. Ví dụ vòng <code>for</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Sẽ hoạt động theo thứ tự như sau:</p>
<p>Bước 1. Tạo ra biến <code>i</code> kiểu nguyên và gán giá trị cho <code>i = 1</code></p>
<p>Bước 2. Nếu <code>i &lt;= 5</code> thì thực hiện khối lệnh bên trong vòng <code>for</code> (chính là đoạn code <code>cout &lt;&lt; i &lt;&lt; " ";</code>). Ngược lại nếu <code>i &gt; 5</code>&nbsp;thì dừng không chạy tiếp bước 3.</p>
<p>Bước 3. Tăng <code>i</code> lên <code>1</code> đơn vị và quay lại bước 2 (<code>i++</code> tương đương với <code>i = i + 1</code> hoặc <code>i += 1</code>).</p>
<p>Đọc tới đây bạn đã có thể quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn vẫn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập C++ cơ bản: hiển thị ra màn hình các số từ a tới b | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình nhập từ bàn phím số nguyên<span>&nbsp;</span><code>a</code><span>&nbsp;</span>và <code>b</code>. Sau đó hiển thị ra các số từ <code>a</code> tới <code>b</code>:</p>
<p>Ví dụ nếu nhập <code>a = 5, b = 9</code> thì chương trình sẽ hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">5 6 7 8 9 </code></pre>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> a<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> b<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập về vòng lặp trong C++: tính tổng các số từ n về -5 | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình nhập vào từ bàn phím số nguyên <code>n</code> và thực hiện hiển thị các số từ <code>n</code> về <code>-5</code>.</p>
<p>Ví dụ nếu nhập <code>n = 5</code> thì chương trình sẽ hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">5 4 3 2 1 0 -1 -2 -3 -4 -5</code></pre>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> n<span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập về vòng lặp trong C++: tính tổng các số từ a tới b | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình nhập vào từ bàn phím số nguyên<span>&nbsp;</span><code>a</code><span>&nbsp;</span>và <code>b</code>. Sau đó hiển thị ra màn hình tổng các số từ <code>a</code> tới <code>b</code>:</p>
<p>Ví dụ nếu nhập <code>a = 5, b = 9</code> thì chương trình sẽ hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">35</code></pre>
<p>Giải thích: <code>5 + 6 + 7 + 8 + 9 = 35</code></p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
    <span class="token comment">// sum là biến lưu trữ tổng các số từ a tới b</span>
    <span class="token comment">// Lưu ý: bạn cần khởi tạo giá trị cho biến sum = 0</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> a<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> b<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sum <span class="token operator">=</span> sum <span class="token operator">+</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> sum<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập về vòng lặp trong C++: tính tổng các số lẻ từ 0 tới n | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình nhập vào từ bàn phím số nguyên <code>n</code> và thực hiện hiển thị ra tổng các số lẻ từ <code>0</code> tới <code>n</code>.</p>
<p>Ví dụ nếu nhập <code>n = 7</code> thì chương trình sẽ hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">16</code></pre>
<p>Giải thích: <code>1 + 3 + 5 + 7 = 16</code></p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// sum += i; tương đương với sum = sum + i;</span>
            sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> sum<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập về vòng lặp trong C++: hiển thị ra màn hình các số chia hết cho 3 từ a tới b | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình nhập vào từ bàn phím số nguyên<span>&nbsp;</span><code>a</code><span>&nbsp;</span>và <code>b</code>. Sau đó hiển thị ra màn hình các số chia hết cho 3 từ <code>a</code> tới <code>b</code>:</p>
<p>Ví dụ nếu nhập <code>a = 1, b = 20</code> thì chương trình sẽ hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">3 6 9 12 15 18</code></pre>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Để kiểm tra biến <code>i</code>&nbsp;có chia hết cho 3 không bạn có thể dùng câu lệnh:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"i is divisible by 3"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> a<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> b<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập về vòng lặp trong C++: tính n giai thừa | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình&nbsp;nhập từ bàn phím số nguyên <code>n</code>&nbsp;và hiển thị ra màn hình <code>n!</code> (<code>n</code> giai thừa).</p>
<p>Ví dụ nếu nhập <code>n = 5</code> thì chương trình sẽ hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">120</code></pre>
<p>Giải thích: <code>1 * 2 * 3 * 4 * 5 = 120</code>.</p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token comment">// Biến lưu trữ kết quả của n!</span>
    <span class="token comment">// Lưu ý: bạn cần khởi tạo giá trị cho biến này = 1</span>
    <span class="token keyword">int</span> factorial <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        factorial <span class="token operator">=</span> factorial <span class="token operator">*</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> factorial<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập C++ cơ bản: hiển thị ra màn hình các ước của một số | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình&nbsp;nhập từ bàn phím một số nguyên <code>n</code>&nbsp;và hiển thị ra màn hình các ước của <code>n</code>&nbsp;với <code>n &gt; 0</code>.</p>
<p>Ví dụ nếu nhập <code>n = 12</code> thì chương trình sẽ hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">1 2 3 4 6 12</code></pre>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Nếu n chia hết cho i thì i chính là ước của n</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Vòng lặp while trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình nhập vào bàn phím số nguyên&nbsp;<code>n</code>&nbsp;và hiển thị ra các số chẵn từ <code>n</code> tới <code>100</code>.</p>
<p>Ví dụ nếu nhập <code>n = 90</code> thì chương trình sẽ hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">90 92 94 96 98 100</code></pre>
<h3>Lý thuyết</h3>
<p>Bài này bạn có thể làm bằng vòng lặp <code>for</code>&nbsp;như các bài trước nhưng tôi sẽ hướng dẫn bạn sử dụng vòng lặp <code>while</code> để làm.</p>
<p>Cấu trúc vòng lặp <code>while</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">while</span> <span class="token punctuation">(</span>biểu_thức<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// Nếu biểu thức đúng thì thực hiện đoạn code trong khối lệnh này</span>
<span class="token punctuation">}</span></code></pre>
<p>Có thể thấy cách sử dụng vòng lặp <code>while</code> rất đơn giản, khi <code>biểu_thức</code> còn đúng thì thực hiện đoạn code bên trong vòng <code>while</code>.</p>
<p>Hãy xem một vài ví dụ về vòng lặp <code>while</code>&nbsp;để hiểu rõ hơn:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> n <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
        n<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Chương trình này sẽ hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">5 4 3 2 1 </code></pre>
<p>Đoạn code trên có thể hiểu đơn giản là: Khi <code>n</code> còn khác <code>0</code> thì hiển thị ra màn hình giá trị của <code>n</code> và giảm <code>n</code> đi <code>1</code>.</p>
<p>Ví dụ khác về hiển thị các số chẵn từ <code>1</code> tới <code>100</code> sử dụng vòng lặp <code>while</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cout <span class="token operator">&lt;&lt;</span> n <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        n<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Đọc tới đây bạn đã có thể quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu sử dụng vòng lặp <code>while</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> n<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> n <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		n<span class="token operator">++</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Code mẫu sử dụng vòng lặp <code>for</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> n<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> n <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> n <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập C++ cơ bản: đếm số ước của một số được nhập vào từ bàn phím | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình nhập từ bàn phím số nguyên&nbsp;<code>n</code>&nbsp;và hiển thị ra màn hình số các ước số của <code>n</code>.</p>
<p>Ví dụ nếu nhập <code>n = 12</code> thì chương trình sẽ hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">6</code></pre>
<p>Giải thích: <code>12</code> có <code>6</code> ước là <code>1, 2, 3, 4, 6, 12</code></p>
<h3>Hướng dẫn</h3>
<p>Code mẫu sử dụng vòng lặp <code>while</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> n<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
	<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			count<span class="token operator">++</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		i<span class="token operator">++</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	cout <span class="token operator">&lt;&lt;</span> count<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Code mẫu sử dụng vòng lặp <code>for</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> n<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
	<span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			count<span class="token operator">++</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	cout <span class="token operator">&lt;&lt;</span> count<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập về vòng lặp trong C++: tính lũy thừa bậc b của a (a mũ b) | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình nhập từ bàn phím hai số nguyên dương&nbsp;<code>a</code>&nbsp;và <code>b</code>. Sau đó hiển thị ra màn hình kết quả của <code><span>a</span><sup>b</sup></code>.</p>
<p>Ví dụ nếu nhập <code>a = 2, b = 3</code> thì chương trình sẽ hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">8</code></pre>
<p>Giải thích: <code>2 * 2 * 2 = 8.</code></p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu sử dụng vòng lặp <code>while</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
    <span class="token comment">// answer là biến lưu trữ kết quả của a mũ b</span>
    <span class="token comment">// Lưu ý: bạn phải khởi tạo giá trị cho answer = 1</span>
    <span class="token keyword">int</span> answer <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>b <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// answer *= a tương đương với answer = answer * a</span>
        answer <span class="token operator">*=</span> a<span class="token punctuation">;</span>
        b<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> answer<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Code mẫu sử dụng vòng lặp <code>for</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
    <span class="token keyword">int</span> answer <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> b <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> answer <span class="token operator">*=</span> a<span class="token punctuation">,</span> b<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> answer<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập C++ cơ bản: tính tổng các số chia hết cho 3 và 5 trong đoạn [a, b] | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình nhập từ bàn phím hai số nguyên&nbsp;<code>a</code>&nbsp;và <code>b</code>. Sau đó hiển thị ra màn hình các số từ <code>a</code> tới <code>b</code> mà chia hết cho cả <code>3</code> và <code>5</code>.</p>
<p>Ví dụ nếu nhập <code>a = 1, b = 50</code> thì chương trình sẽ hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">15 30 45</code></pre>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu sử dụng vòng lặp <code>while</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;=</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		a<span class="token operator">++</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Code mẫu sử dụng vòng lặp <code>for</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> a<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> b<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập C++ cơ bản về câu lệnh break | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy điền code vào dấu <code>...</code> để màn hình hiển thị ra các số từ <code>1</code> tới <code>50</code>.</p>
<h3>Lý thuyết</h3>
<p>Bài này bạn sẽ học được cách dừng vòng lặp với câu lệnh <code>break</code>.</p>
<p>Câu lệnh <code>break</code> là câu lệnh dùng để dừng một vòng lặp, cách sử dụng câu lệnh <code>break</code> rất đơn giản, ví dụ chương trình sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Sẽ hiển thị ra</p>
<pre class=" language-markup"><code class=" language-markup">1 2 3 4 5 6 7 8 9 10</code></pre>
<p>thay vì</p>
<pre class=" language-markup"><code class=" language-markup">1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20</code></pre>
<p>do&nbsp;khi <code>i = 11</code> thì câu lệnh <code>break</code>&nbsp;sẽ được thực thi và tất cả code trong vòng lặp sẽ không được thực hiện tiếp.</p>
<p>Trong chương trình trên nếu bạn đặt câu lệnh <code>cout &lt;&lt; i &lt;&lt; " ";</code> lên trước câu lệnh <code>break;</code> giống như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">1 2 3 4 5 6 7 8 9 10 11</code></pre>
<p>Do khi <code>i = 11</code> thì câu lệnh <code>cout &lt;&lt; i &lt;&lt; " ";</code> sẽ được thực thi trước câu lệnh <code>break;</code></p>
<p>Bạn cũng có thể dùng câu lệnh <code>break</code> với vòng lặp <code>while</code>&nbsp;giống chương trình sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">1 2 3 4 5 6 7 8 9 10</code></pre>
<p>Đọc tới đây bạn đã hiểu cách sử dụng câu lệnh <code>break</code> và có thể quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">51</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập về câu lệnh continue trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy điền code vào dấu <code>...</code> để màn hình hiển thị ra các số lẻ từ <code>1</code> tới <code>100</code>.</p>
<h3>Lý thuyết</h3>
<p>Bài này bạn sẽ học được cách sử dụng câu lệnh <code>continue</code>.</p>
<p>Khi gặp câu lệnh <code>continue</code> trong vòng lặp, các đoạn code bên dưới câu lênh này trong vòng lặp sẽ không được thực thi.</p>
<p>Ví dụ chương trình hiển thị các số chẵn từ <code>1</code> tới <code>100</code>&nbsp;sử dụng câu lệnh <code>continue</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Trong đoạn code trên khi câu lệnh <code>continue</code> được thực thi thì câu lệnh <code>cout &lt;&lt; i &lt;&lt; " ";</code> sẽ không được thực thi (do câu lệnh này nằm trong vòng lặp và nằm dưới câu lệnh <code>continue</code>).</p>
<p>Bạn cũng có thể dùng câu lệnh <code>continue</code> với vòng lặp <code>while</code>.</p>
<p>Đọc tới đây bạn đã có thể quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Vòng lặp do-while trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình hiển thị ra màn hình các số từ <code>1</code> tới <code>5</code> sử dụng vòng lặp <code>do-while</code>.</p>
<h3>Lý thuyết</h3>
<p>Ở các bài trước bạn đã được học về vòng lặp <code>for</code> và <code>while</code>, bài này bạn sẽ học được cách sử dụng vòng lặp&nbsp;<code>do-while</code>. Cấu trúc vòng lặp <code>do-while</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">do</span> <span class="token punctuation">{</span>
	<span class="token comment">// Khối lệnh</span>
<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>biểu_thức<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>Đầu tiên khối lệnh bên trong vòng lặp <code>do-while</code> sẽ được thực thi trước. Sau đó vòng lặp <code>do-while</code> sẽ kiểm tra biểu thức điều kiện, nếu biểu thức điều kiện đúng thì chương trình sẽ tiếp tục thực thi khối lệnh trong <code>do-while</code>, ngược lại nếu biểu thức điều kiện sai thì dừng vòng lặp.</p>
<p>Vòng lặp <code>do-while</code> khác vòng lặp <code>while</code> ở chỗ vòng lặp <code>while</code> sẽ kiểm tra điều kiện trước, còn vòng lặp <code>do-while</code> sẽ thực hiện khối lệnh trước nên khối lệnh trong <code>do-while</code> sẽ được thực thi ít nhất 1 lần.</p>
<p>Ví dụ về sự khác nhau giữa 2 vòng lặp:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">do</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"do-while"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"while"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Chương trình trên sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">do-while</code></pre>
<p><strong>Lưu ý:</strong> Vòng lặp <code>do-while</code> kết thúc bằng dấu chấm phẩy.</p>
<p>Bạn hãy quay lại phần bài tập và làm thử bằng vòng lặp <code>do-while</code>.</p>
<p>Nếu bạn chưa biết cách làm bài này bằng vòng lặp <code>do-while</code> thì có thể xem hướng dẫn bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">do</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
		i<span class="token operator">++</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập về vòng lặp do-while trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình hiển thị ra màn hình các số&nbsp;có số <code>0</code> ở cuối từ <code>1</code> tới <code>1000</code>&nbsp;(màn hình sẽ hiển thị lên các số <code>10, 20, 30, ..., 990, 1000</code>)</p>
<h3>Hướng dẫn</h3>
<p>Nếu 1 số chia hết cho <code>10</code> thì chữ số cuối cùng của số đó luôn là số <code>0</code>, nên bài này thực ra là in ra những số chia hết cho <code>10</code> từ <code>1</code> tới <code>100</code>.</p>
<p>Do đó bạn có thể làm như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">do</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">10</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Mảng (array) trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình nhập vào từ bàn phím 10 số nguyên và hiển thị ra tổng của 10 số này.</p>
<p>Ví dụ nếu nhập:</p>
<pre class=" language-markup"><code class=" language-markup">2 7 6 3 4 8 9 7 6 10</code></pre>
<p>Thì màn hình sẽ hiển thị:</p>
<pre class=" language-markup"><code class=" language-markup">62</code></pre>
<h3>Lý thuyết</h3>
<p>Bài này có thể làm bằng cách thông thường là tạo ra 10 biến như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> a0<span class="token punctuation">,</span> a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> a3<span class="token punctuation">,</span> a4<span class="token punctuation">,</span> a5<span class="token punctuation">,</span> a6<span class="token punctuation">,</span> a7<span class="token punctuation">,</span> a8<span class="token punctuation">,</span> a9<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> a0 <span class="token operator">&gt;&gt;</span> a1 <span class="token operator">&gt;&gt;</span> a2 <span class="token operator">&gt;&gt;</span> a3 <span class="token operator">&gt;&gt;</span> a4 <span class="token operator">&gt;&gt;</span> a5 <span class="token operator">&gt;&gt;</span> a6 <span class="token operator">&gt;&gt;</span> a7 <span class="token operator">&gt;&gt;</span> a8 <span class="token operator">&gt;&gt;</span> a9<span class="token punctuation">;</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> a0 <span class="token operator">+</span> a1 <span class="token operator">+</span> a2 <span class="token operator">+</span> a3 <span class="token operator">+</span> a4 <span class="token operator">+</span> a5 <span class="token operator">+</span> a6 <span class="token operator">+</span> a7 <span class="token operator">+</span> a8 <span class="token operator">+</span> a9<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> sum<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Có thể thấy cách làm này không được hay, bạn phải tạo ra rất nhiều biến. Nếu chương trình yêu cầu nhập 100 số nguyên thì bạn cũng phải tạo ra 100 biến. Rất may là vấn đề này có thể giải quyết bằng mảng.</p>
<p>Mảng được hiểu đơn giản là một tập hợp các biến. Ví dụ bài này nếu làm bằng mảng thì sẽ như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Khai báo mảng a kiểu số nguyên với 10 phần tử</span>
    <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// Khai báo biến lưu trữ tổng các phần tử trong mảng</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// Dùng vòng for để nhập dữ liệu cho các phần tử trong mảng</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Dùng vòng for để tính tổng các phần tử trong mảng</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sum <span class="token operator">+=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// In ra tổng các phần tử trong mảng</span>
    cout <span class="token operator">&lt;&lt;</span> sum<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Có thể thấy thay vì tạo ra 10 biến thì bạn chỉ cần tạo ra 1 mảng với 10 phần tử. Thay vì nhập dữ liệu và tính tổng trên từng biến thì bạn nhập dữ liệu và tính tổng trên từng phần tử của mảng.</p>
<p>Các phần tử của mảng được truy xuất bằng toán tử <code>[]</code>. Ví dụ:</p>
<ul>
<li><code>a[0]</code> tương đương với phần tử thứ nhất.</li>
<li><code>a[1]</code> tương đương với phần tử thứ hai.</li>
<li>...</li>
</ul>
<p>Nhìn chung cách làm bài này với mảng cũng giống việc tạo ra nhiều biến, chỉ khác ở chỗ thay vì phải viết <code>a0, a1, a2, ..., a9</code> thì bạn có thể dùng vòng lặp <code>for</code> và viết là <code>a[i]</code>.</p>
<p>Ngoài ra bạn còn có thể khai báo và khởi tạo giá trị cho mảng bằng 1 số cách dưới đây:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token comment">// Khai báo mảng a 5 phần tử với giá trị từ 1 tới 5</span>
<span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// Khai báo mảng a 5 phần tử với giá trị từ 1 tới 5</span>
<span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// Khai báo mảng a 20 phần tử và gán giá trị cho 5 phần tử đầu tiên</span>
<span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre>
<p>Nếu bạn vẫn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sum <span class="token operator">+=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> sum<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Bài này còn có thể làm đơn giản hơn như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> a<span class="token punctuation">;</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">;</span>
        sum <span class="token operator">+=</span> a<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> sum<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập về mảng trong C++: tìm phần tử lớn nhất trong mảng | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p><span>Cho một mảng các số nguyên&nbsp;</span><code>n</code><span>&nbsp;phần tử&nbsp;</span><code>arr</code><span>&nbsp;được nhập từ bàn phím</span>.&nbsp;Bạn hãy viết chương trình hiển thị ra phần tử lớn nhất trong mảng. Ví dụ nếu bạn nhập <code>n = 5, arr = [2, 7, 6, 8, 9]</code> như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">5
2 7 6 8 9</code></pre>
<p>Thì màn hình sẽ hiển thị:</p>
<pre class=" language-markup"><code class=" language-markup">9</code></pre>
<p>Giải thích: mảng này có <code>5</code> phần tử và <code>9</code> là phần tử lớn nhất trong mảng.</p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Để tạo ra mảng <code>a</code> có <code>n</code> phần tử bạn có thể viết như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">int</span> a<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p><strong>Lưu ý:</strong> nếu trên máy bạn báo lỗi ở đoạn code này thì là do trình biên dịch trên máy bạn không hỗ trợ C99. Bạn có thể khắc phục bằng cách sửa <code>int a[n];</code> thành <code>int a[1000];</code>&nbsp;(cứ khai báo mảng <code>1000</code> phần tử, không dùng tới cũng không sao).</p>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">int</span> maxValue <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> maxValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            maxValue <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> maxValue<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập về mảng trong C++: tính tổng của phần tử đầu tiên và cuối cùng trong mảng | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p><span>Cho một mảng các số nguyên&nbsp;</span><code>n</code><span>&nbsp;phần tử&nbsp;</span><code>arr</code><span>&nbsp;được nhập từ bàn phím</span>.&nbsp;Bạn hãy viết chương trình hiển thị ra tổng của phần tử đầu tiên và cuối cùng trong mảng <code>arr</code>. Ví dụ nếu bạn nhập <code>n = 5, arr = [2, 7, 6, 8, 9]</code> như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">5
2 7 6 8 9</code></pre>
<p>Thì màn hình sẽ hiển thị:</p>
<pre class=" language-markup"><code class=" language-markup">11</code></pre>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p><code>arr[0] + arr[n - 1]</code> chính là tổng của phần tử đầu tiên và cuối cùng.</p>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cin <span class="token operator">&gt;&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập về mảng trong C++: hiển thị ra màn hình các số chẵn trong mảng | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Cho một mảng các số nguyên <code>n</code> phần tử <code>arr</code> được nhập từ bàn phím. Bạn hãy viết chương trình hiển thị ra màn hình những số chẵn trong mảng. Ví dụ nếu bạn nhập:</p>
<pre class=" language-markup"><code class=" language-markup">5
2 7 6 8 9</code></pre>
<p>Thì màn hình sẽ hiển thị:</p>
<pre class=" language-markup"><code class=" language-markup">2 6 8 </code></pre>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cout <span class="token operator">&lt;&lt;</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: đếm số phần tử có giá trị bằng k trong mảng | Codelearn
---------------------------------------
<h3><span>Bài tập</span></h3>
<p><span>Cho một mảng các số nguyên&nbsp;</span><code>n</code><span>&nbsp;phần tử <code>arr</code> và số nguyên <code>k</code> được nhập từ bàn phím. Bạn hãy viết chương trình hiển thị ra màn hình số phần tử có giá trị bằng <code>k</code> trong mảng <code>arr</code>.</span></p>
<p><span>Ví dụ nếu bạn nhập <code>n = 6, arr = [3, 8, 7, 8, 3, 3], k = 3</code> như bên dưới:</span></p>
<pre class=" language-markup"><code class=" language-markup">6
3 8 7 8 3 3
3</code></pre>
<p>Thì màn hình hiển thị lên:</p>
<pre class=" language-markup"><code class=" language-markup">3</code></pre>
<p>Giải thích: trong mảng có 3 phần tử có giá trị bằng 3.</p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">,</span> k<span class="token punctuation">;</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cin <span class="token operator">&gt;&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cin <span class="token operator">&gt;&gt;</span> k<span class="token punctuation">;</span>

    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            count<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> count<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: tính tổng các phần tử có giá trị lớn hơn 0 trong mảng | Codelearn
---------------------------------------
<h3><span>Bài tập</span></h3>
<p><span>Cho một mảng các số nguyên&nbsp;</span><code>n</code><span>&nbsp;phần tử <code>arr</code>. Bạn hãy viết chương trình tính tổng các số lẻ lớn hơn 0 trong mảng.</span></p>
<p>Ví dụ nếu bạn nhập:</p>
<pre class=" language-markup"><code class=" language-markup">8
3 -7 2 5 9 -6 10 12</code></pre>
<p>Thì màn hình hiển thị lên:</p>
<pre class=" language-markup"><code class=" language-markup">17</code></pre>
<p>Giải thích: <code>3 + 5 + 9 = 17</code>.</p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cin <span class="token operator">&gt;&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sum <span class="token operator">+=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> sum<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập C++ cơ bản: hiển thị các phần tử nằm trong đoạn [0, 10] trong mảng | Codelearn
---------------------------------------
<h3><span>Bài tập</span></h3>
<p><span>Cho một mảng các số nguyên&nbsp;</span><code>n</code><span>&nbsp;phần tử <code>arr</code>. Bạn hãy viết chương trình hiển thị những số lớn hơn hoặc bằng&nbsp;<code>0</code> và nhỏ hơn hoặc bằng&nbsp;<code>10</code> trong mảng <code>arr</code>.</span></p>
<p>Ví dụ nếu bạn nhập:</p>
<pre class=" language-markup"><code class=" language-markup">8
3 -7 2 5 9 -6 10 12</code></pre>
<p>Thì màn hình hiển thị lên:</p>
<pre class=" language-markup"><code class=" language-markup">3 2 5 9 10 </code></pre>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cin <span class="token operator">&gt;&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cout <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập C++ cơ bản: sắp xếp mảng theo thứ tự tăng dần | Codelearn
---------------------------------------
<h3><span>Bài tập</span></h3>
<p><span>Cho một mảng các số nguyên&nbsp;</span><code>n</code><span>&nbsp;phần tử <code>arr</code>. Bạn hãy viết chương trình sắp xếp các phần tử của mảng theo thứ tự tăng dần và hiển thị ra màn hình mảng sau khi đã sắp xếp.</span></p>
<p><span>Ví dụ nếu bạn nhập <code>n = 6, arr = [5,3,2,6,7,7]</code>&nbsp;như bên dưới:</span></p>
<pre class=" language-markup"><code class=" language-markup">6
5 3 2 6 7 7</code></pre>
<p>Thì màn hình hiển thị lên:</p>
<pre class=" language-markup"><code class=" language-markup">2 3 5 6 7 7</code></pre>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cin <span class="token operator">&gt;&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Nếu arr[i] &gt; arr[j] thì hoán đổi giá trị của arr[i] và arr[j]</span>
                <span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Mảng 2 chiều trong C++ | Codelearn
---------------------------------------
<h3><span>Bài tập</span></h3>
<p><span>Cho một mảng 2 chiều các số nguyên <code>n</code> hàng <code>m</code> cột&nbsp;<code>arr</code> được nhập từ bàn phím</span><span>. Bạn hãy viết chương trình tính tổng các phần tử trong mảng <code>arr</code>.</span></p>
<p><span>Ví dụ nếu bạn nhập <code>n = 2, m = 3, arr = [[5, 7, 3], [1, 2, 4]]</code>&nbsp;như bên dưới:</span></p>
<pre class=" language-markup"><code class=" language-markup">2 3
5 7 3
1 2 4</code></pre>
<p>Thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">22</code></pre>
<h3>Lý thuyết</h3>
<p>Mảng 2 chiều hay còn được gọi là ma trận là một mảng các mảng 1 chiều. Mảng 2 chiều giống như một cái bảng, mảng 1 chiều là các dòng trong bảng và các phần tử của mảng là các ô.</p>
<p>Cú pháp để khai báo mảng 2 chiều với 3 hàng và 5 cột:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>Ví dụ chương trình nhập vào một mảng 2 chiều và in mảng 2 chiều này ra màn hình:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>

	cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cin <span class="token operator">&gt;&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> <span class="token string">"arr["</span> <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">"]["</span> <span class="token operator">&lt;&lt;</span> j <span class="token operator">&lt;&lt;</span> <span class="token string">"] = "</span> <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Nếu bạn nhập</p>
<pre class=" language-markup"><code class=" language-markup">3 4
3 4 8 2
5 6 4 9
2 3 8 1
</code></pre>
<p>Thì chương trình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">arr[0][0] = 3
arr[0][1] = 4
arr[0][2] = 8
arr[0][3] = 2
arr[1][0] = 5
arr[1][1] = 6
arr[1][2] = 4
arr[1][3] = 9
arr[2][0] = 2
arr[2][1] = 3
arr[2][2] = 8
arr[2][3] = 1</code></pre>
<p>Có thể thấy cách sử dụng mảng 2 chiều rất đơn giản, bạn hãy quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn bên dưới:</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>

	cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cin <span class="token operator">&gt;&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			sum <span class="token operator">+=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	cout <span class="token operator">&lt;&lt;</span> sum<span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập về mảng 2 chiều trong C++ | Codelearn
---------------------------------------
<h3><span>Bài tập</span></h3>
<p><span>Cho một mảng 2 chiều các số nguyên <code>n</code> hàng <code>m</code> cột&nbsp;<code>arr</code> được nhập từ bàn phím</span><span>. Bạn hãy viết chương trình tính tổng các phần tử chia hết cho 5 trong <code>arr</code>.</span></p>
<p>Ví dụ nếu bạn nhập <code>n = 3, m = 4, arr = [[10, 4, 8, 2], [5, 6, 4, 9], [20, 3, 8, 1]]</code> như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">3 4
10 4 8 2
5 6 4 9
20 3 8 1
</code></pre>
<p>Thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">35</code></pre>
<p>Giải thích: Tổng các phần tử chia hết cho 5 trong arr là <code>10 + 5 + 20 = 35</code>.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>

	cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cin <span class="token operator">&gt;&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				sum <span class="token operator">+=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	
	cout <span class="token operator">&lt;&lt;</span> sum<span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: hiển thị ký tự thứ k trong string | Codelearn 
---------------------------------------
<h3>Bài tập</h3>
<p>Cho xâu <code>s</code> và số nguyên <code>k</code> được nhập từ bàn phím. Bạn hãy viết chương trình in ra màn hình ký tự thứ <code>k</code> trong xâu <code>s</code>.</p>
<p>Ví dụ nếu bạn nhập <code>s = "Codelearn", k = 2</code> như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">Codelearn
2</code></pre>
<p>Thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">o</code></pre>
<p>Giải thích: ký tự thứ 2 trong xâu <code>Codelearn</code> là ký tự <code>o</code></p>
<h3>Lý thuyết</h3>
<p>Xâu bản chất là một mảng các ký tự do đó bạn có thể truy xuất tới các ký tự trong xâu giống như truy xuất tới các phần tử trong mảng. Ví dụ chương trình sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string s <span class="token operator">=</span> <span class="token string">"Codelearn"</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Sẽ hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">Co</code></pre>
<p>Từ đó bạn có thể lấy ra phần tử thứ <code>k</code> trong xâu <code>s</code> bằng <code>s[k - 1];</code></p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string s<span class="token punctuation">;</span>
    <span class="token keyword">int</span> k<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> s <span class="token operator">&gt;&gt;</span> k<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">[</span>k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập về xâu trong C++: đếm số lần xuất hiện của một ký tự trong một xâu | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Cho xâu <code>s</code> và ký tự&nbsp;<code>c</code>&nbsp;được nhập từ bàn phím. Bạn hãy viết chương trình in ra số lần xuất hiện của ký tự <code>c</code> trong xâu <code>s</code>.</p>
<p>Ví dụ nếu bạn nhập <code>s = "Codelearn", c = 'e'</code> như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">Codelearn
e</code></pre>
<p>Thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">2</code></pre>
<p>Giải thích: ký tự thứ <code>'e'</code> xuất hiện 2 lần trong xâu <code>"Codelearn"</code></p>
<h3>Lý thuyết</h3>
<p>Do xâu bản chất là một mảng các ký tự nên việc duyệt các ký tự trong xâu cũng giống với duyệt các phần tử trong mảng, bạn có thể dùng vòng lặp <code>for</code> để duyệt qua các ký tự trong xâu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string s <span class="token operator">=</span> <span class="token string">"Codelearn"</span><span class="token punctuation">;</span>
    <span class="token comment">// s.size() chính là độ dài của xâu s</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Đoạn code này sẽ hiển thị ra màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">C
o
d
e
l
e
a
r
n</code></pre>
<p>Trong ví dụ trên <code>s.size()</code> chính là lấy ra độ dài của xâu <code>s</code>.</p>
<p>Đọc tới đây bạn đã có thể quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string s<span class="token punctuation">;</span>
    <span class="token keyword">char</span> c<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> s <span class="token operator">&gt;&gt;</span> c<span class="token punctuation">;</span>
    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            count<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> count<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập xử lý chuỗi trong C++: tìm vị trí xuất hiện của một ký tự trong một xâu | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Cho xâu<span>&nbsp;</span><code>s</code><span>&nbsp;và ký tự <code>c</code>&nbsp;</span>được nhập từ bàn phím, bạn hãy viết chương trình in ra vị trí đầu tiên mà ký tự <code>c</code> xuất hiện trong xâu&nbsp;<code>s</code>, nếu ký tự <code>c</code> không xuất hiện trong <code>s</code> thì in ra <code>-1</code>.</p>
<p>Ví dụ nếu bạn nhập <code>s = "codelearn"</code> và <code>c = 'o'</code> như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">codelearn o</code></pre>
<p>thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">1</code></pre>
<p>Giải thích: ký tự <code>s[1]</code> chính là ký tự <code>'o'</code></p>
<p>Ví dụ khác nếu bạn nhập:</p>
<pre class=" language-cpp"><code class=" language-cpp">codewar z</code></pre>
<p>Thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">-1</code></pre>
<p>Giải thích: ký tự <code>'z'</code> không xuất hiện trong xâu <code>"codewar"</code>.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string s<span class="token punctuation">;</span>
    <span class="token keyword">char</span> c<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> s <span class="token operator">&gt;&gt;</span> c<span class="token punctuation">;</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            index <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token comment">/*
            Gọi lệnh break để dừng vòng lặp do
            đã tìm thấy vị trí đầu tiên mà ký tự c xuất hiện.
            Nếu không có lệnh break thì kết quả của chương trình
            sẽ là vị trí cuối cùng mà ký tự c xuất hiện.
            */</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> index<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập về xử lý xâu trong C++: chuyển các ký tự in thường sang in hoa | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Cho xâu <code>s</code> được nhập từ bàn phím. Bạn hãy viết chương trình chuyển các ký tự in thường trong xâu <code>s</code>&nbsp;thành in hoa và hiển thị xâu <code>s</code> ra màn hình:</p>
<p>Ví dụ nếu bạn nhập <code>s = "Codelearn"</code>&nbsp;như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">Codelearn</code></pre>
<p>Thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">CODELEARN</code></pre>
<h3>Lý thuyết</h3>
<p>Về bản chất ký tự cũng chỉ là một số nguyên, việc bạn chuyển 1 ký tự từ in thường sang in hoa thực chất là chuyển đổi từ 1 số nguyên sang 1 số nguyên khác. Như đã được học, để hiển thị giá trị nguyên (mã <strong>ASCII</strong>) của một ký tự bạn có thể làm như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">'a'</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'a'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">'b'</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'b'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">'c'</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'c'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">'d'</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'d'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">'A'</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'A'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">'B'</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'B'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">'C'</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'C'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">'D'</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" = "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token string">'D'</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Chương trình này sẽ hiển thị lên màn hình:</p>
<pre class=" language-markup"><code class=" language-markup">a = 97
b = 98
c = 99
d = 100

A = 65
B = 66
C = 67
D = 68</code></pre>
<p>Có thể quan sát thấy giá trị của các ký tự in thường luôn bằng giá trị của các ký tự in hoa cộng với 32. Từ đó bạn có thể chuyển 1 ký tự từ in thường sang in hoa bằng cách trừ đi 32. Ví dụ chương trình:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token string">'d'</span> <span class="token operator">-</span> <span class="token number">32</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> c<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Sẽ hiển thị ra màn hình</p>
<pre class=" language-markup"><code class=" language-markup">D</code></pre>
<p>Từ đó bạn có thể giải bài này bằng cách duyệt qua các ký tự và nếu ký tự đó là in thường thì trừ đi 32.</p>
<p>Nếu bạn vẫn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string s<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token string">'a'</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token string">'z'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">32</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập về xử lý xâu trong C++: chuyển các ký tự in hoa sang in thường | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Cho xâu <code>s</code> được nhập từ bàn phím. Bạn hãy viết chương trình chuyển các ký tự in hoa trong xâu <code>s</code>&nbsp;thành in thường và hiển thị xâu <code>s</code> ra màn hình:</p>
<p>Ví dụ nếu bạn nhập <code>s = "CODELEARN"</code>&nbsp;như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">CODELEARN</code></pre>
<p>Thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">codelearn</code></pre>
<h3>Hướng dẫn</h3>
<p>Bài này khá giống bài trước, bạn có thể cộng với 32 để 1 ký tự in hoa trở thành in thường.</p>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string s<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token string">'A'</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token string">'Z'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">32</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: đếm số ký tự in hoa trong một xâu | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Cho xâu <code>s</code> được nhập từ bàn phím. Bạn hãy viết chương trình hiển thị ra màn hình số các ký tự in hoa trong xâu <code>s</code>.</p>
<p>Ví dụ nếu bạn nhập <code>s = "CodeWar"</code>&nbsp;như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">CodeWar</code></pre>
<p>Thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">2</code></pre>
<p>Giải thích: trong xâu <code>s</code> có 2 ký tự in hoa là <code>'C'</code> và <code>'W'</code></p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	string s<span class="token punctuation">;</span>
	<span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token string">'A'</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token string">'Z'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			count<span class="token operator">++</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	cout <span class="token operator">&lt;&lt;</span> count<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: thay đổi giá trị của các ký tự trong xâu | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Cho xâu <code>s</code> được nhập từ bàn phím. Bạn hãy viết chương trình chuyển các ký tự <code>'3'</code> trong xâu <code>s</code> sang ký tự <code>'e'</code>&nbsp;và hiển thị xâu <code>s</code> ra màn hình.</p>
<p>Ví dụ nếu bạn nhập <code>s = "cod3l3arn"</code>&nbsp;như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">cod3l3arn</code></pre>
<p>Thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">codelearn</code></pre>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string s<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'e'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập C++ cơ bản: hiển thị ra màn hình các ký tự từ A tới Z
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết chương trình hiển thị ra màn hình các ký tự từ <code>'A'</code> tới <code>'Z'</code> như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">ABCDEFGHIJKLMNOPQRSTUVWXYZ</code></pre>
<h3>Hướng dẫn</h3>
<p>Như đã học ở các bài trước, ký tự thực ra cũng chỉ là 1 số nguyên, do đó bạn có thể dùng vòng <code>for</code> và làm như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token string">'A'</span><span class="token punctuation">;</span> c <span class="token operator">&lt;=</span> <span class="token string">'Z'</span><span class="token punctuation">;</span> c<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> c<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Tìm hiểu về hàm trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết hàm hiển thị ra màn hình các số từ <code>1</code> tới <code>100</code>&nbsp;giống như sau:</p>
<pre class=" language-markup"><code class=" language-markup">1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100</code></pre>
<h3>Lý thuyết</h3>
<p>Hàm được hiểu đơn giản là 1 đoạn code, khi bạn gọi hàm thì thực ra là bạn đang gọi tới đoạn code này (bạn cũng có thể hiểu hàm là viết tắt của 1 đoạn code). Cách khai báo và sử dụng hàm rất đơn giản, trước hết bạn hãy xem một vài ví dụ về hàm:</p>
<p>Ví dụ về hàm hiển thị ra các số từ <code>1</code> tới <code>10</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">// Khai báo hàm show</span>
<span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Hiển thị ra màn hình các số từ 1 đến 10</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Gọi hàm show</span>
	<span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">1 2 3 4 5 6 7 8 9 10</code></pre>
<p>Ví dụ về hàm hiển thị ra bảng chữ cái tiếng anh:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">// Khai báo hàm show</span>
<span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Hiển thị bảng chữ cái tiếng anh ra màn hình</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token string">'A'</span><span class="token punctuation">;</span> c <span class="token operator">&lt;=</span> <span class="token string">'Z'</span><span class="token punctuation">;</span> c<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> c<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Gọi hàm show</span>
	<span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">ABCDEFGHIJKLMNOPQRSTUVWXYZ</code></pre>
<p>Như đã nói ở trên, việc bạn gọi hàm thực ra là bạn đang gọi tới đoạn code bên trong hàm nên bạn có thể hiển thị ra 2 bảng chữ cái bằng cách gọi hàm 2 lần:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">// Khai báo hàm show</span>
<span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Hiển thị bảng chữ cái tiếng anh ra màn hình</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token string">'A'</span><span class="token punctuation">;</span> c <span class="token operator">&lt;=</span> <span class="token string">'Z'</span><span class="token punctuation">;</span> c<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> c<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Gọi hàm show</span>
	<span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">ABCDEFGHIJKLMNOPQRSTUVWXYZ
ABCDEFGHIJKLMNOPQRSTUVWXYZ</code></pre>
<p>Tới đây chắc bạn cũng đã hiểu cách tạo và sử dụng hàm, cú pháp để khai báo hàm sẽ trông giống như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">void</span> tên_hà<span class="token function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">/*
	Khối lệnh bên trong thân hàm
	Khối lệnh này sẽ được thực thi khi bạn gọi hàm
	*/</span>
<span class="token punctuation">}</span></code></pre>
<p>Để sử dụng hàm bạn chỉ đơn giản là gọi tới <code>tên_hàm();</code></p>
<p>Đọc tới đây bạn đã biết cách tạo và sử dụng hàm, hãy quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn ở bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Đọc thêm:&nbsp;<a href="https://codelearn.io/sharing/cach-tao-vector-trong-cpp">https://codelearn.io/sharing/cach-tao-vector-trong-cpp</a>&nbsp;</p>
Bài tập về hàm trong C++: viết hàm hiển thị ra màn hình các số chia hết cho 3 và không chia hết cho 5 | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Bạn hãy viết hàm hiển thị ra màn hình các số chia hết cho <code>3</code> và không chia hết cho <code>5</code> từ <code>1</code> tới <code>100</code>.</p>
<h3>Hướng dẫn</h3>
<p>Mục đích của bài này là giúp bạn làm quen với hàm.</p>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Hàm có tham số trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Cho biến <code>name</code> kiểu <code>string</code> được nhập từ bàn phím, bạn hãy viết hàm hiển thị ra màn hình thông tin sau:</p>
<pre class=" language-markup"><code class=" language-markup">Hello {P}</code></pre>
<p>Với <code>{P}</code> là giá trị của biến <code>name</code>.</p>
<p>Ví dụ nếu bạn nhập:</p>
<pre class=" language-markup"><code class=" language-markup">Codelearn</code></pre>
<p>Thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">Hello Codelearn</code></pre>
<h3>Lý thuyết</h3>
<p>Bài này sẽ giúp bạn học được cách sử dụng hàm có đầu vào. Trước hết hãy xem ví dụ đơn giản về hàm có đầu vào:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">// Khai báo hàm show với đầu vào là biến name kiểu string</span>
<span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span>string name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Hiển thị biến name ra màn hình</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello "</span> <span class="token operator">&lt;&lt;</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	string name <span class="token operator">=</span> <span class="token string">"Codelearn"</span><span class="token punctuation">;</span>
	<span class="token comment">// Bạn cũng có thể gọi show("Codelearn"); thay vì show(name);</span>
	<span class="token function">show</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">Hello Codelearn</code></pre>
<p>Hàm <code>show()</code> trong ví dụ trên là hàm có đầu vào là 1 biến kiểu <code>string</code>.</p>
<p>Khi gọi một hàm có đầu vào bạn luôn cần cung cấp giá trị cho các đầu vào của hàm.&nbsp;Để hiểu rõ hơn bạn hãy xem ví dụ khác về hàm hiển thị số lớn nhất trong 3 số đầu vào:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">// Khai báo hàm show với đầu vào là 3 số nguyên a, b, c</span>
<span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> maxValue <span class="token operator">=</span> a<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>maxValue <span class="token operator">&lt;</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		maxValue <span class="token operator">=</span> b<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>maxValue <span class="token operator">&lt;</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		maxValue <span class="token operator">=</span> c<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// Hiển số lớn nhất trong 3 số đầu vào</span>
	cout <span class="token operator">&lt;&lt;</span> maxValue <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Gọi hàm show với giá trị của các đầu vào là a = 4, b = 6, c = 3 </span>
	<span class="token function">show</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// Gọi hàm show với giá trị của các đầu vào là a = 2, b = 1, c = 5 </span>
	<span class="token function">show</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// Gọi hàm show với giá trị của các đầu vào là a = 3, b = 3, c = 3 </span>
	<span class="token function">show</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">6
5
3</code></pre>
<p>Có thể thấy khi gọi hàm <code>show();</code> bạn cần truyền giá trị cho 3 đầu vào.</p>
<p>Đọc tới đây bạn đã biết cách sử dụng hàm có đầu vào, hãy quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn chưa làm được bài này bạn có thể xem hướng dẫn bên dưới:</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span>string name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello "</span> <span class="token operator">&lt;&lt;</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	string name<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> name<span class="token punctuation">;</span>
	<span class="token function">show</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập về hàm trong C++: viết hàm chuyển một xâu từ in hoa sang in thường.
---------------------------------------
<h3>Bài tập</h3>
<p>Cho xâu <code>s1, s2</code>&nbsp;và <code>s3</code> được nhập từ bàn phím. Bạn hãy viết chương trình chuyển các ký tự in hoa trong 3 xâu này&nbsp;thành in thường và hiển thị cả 3 xâu ra màn hình.</p>
<p>Ví dụ nếu bạn nhập <code>s1 = "CODELEARN", s2 = "FSOFT", s3 = "FPT"</code>&nbsp;như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">CODELEARN
FSOFT
FPT</code></pre>
<p>Thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">codelearn
fsoft
fpt</code></pre>
<h3>Lý thuyết</h3>
<p>Bài này sẽ giúp bạn hiểu hơn về lợi ích của hàm.</p>
<p>Trước tiên bạn hãy xem code khi làm bài này mà không sử dụng hàm:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> s3<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> s1 <span class="token operator">&gt;&gt;</span> s2 <span class="token operator">&gt;&gt;</span> s3<span class="token punctuation">;</span>
    
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s1<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token string">'A'</span> <span class="token operator">&amp;&amp;</span> s1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token string">'Z'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">32</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s2<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token string">'A'</span> <span class="token operator">&amp;&amp;</span> s2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token string">'Z'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">32</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s3<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s3<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token string">'A'</span> <span class="token operator">&amp;&amp;</span> s3<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token string">'Z'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s3<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">32</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    cout <span class="token operator">&lt;&lt;</span> s1 <span class="token operator">&lt;&lt;</span> endl <span class="token operator">&lt;&lt;</span> s2 <span class="token operator">&lt;&lt;</span> endl <span class="token operator">&lt;&lt;</span> s3<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Chắc bạn cũng đã nhận thấy vấn đề với cách làm này: code ở cả 3 vòng <code>for</code> bị trùng lặp nhau. Rõ ràng bạn cần tìm cách để tái sử dụng lại đoạn code chuyển 1 xâu từ in hoa sang in thường thay vì cứ phải lặp lại đoạn code này mỗi khi sử dụng.</p>
<p>Qua các bài đã học về hàm, bạn đã biết rằng hàm được dùng để đại diện cho 1 đoạn code, do đó bạn có thể đặt đoạn code bị trùng lặp vào trong hàm và mỗi khi sử dụng bạn chỉ cần gọi hàm.</p>
<p>Để thấy được lợi ích của hàm bạn hãy xem code khi làm bài này bằng hàm:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">// Khai báo hàm show với đầu vào là xâu s</span>
<span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span>string s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Chuyển xâu s từ in hoa sang in thường</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token string">'A'</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token string">'Z'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">32</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Hiển thị xâu s ra màn hình</span>
    cout <span class="token operator">&lt;&lt;</span> s <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> s3<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> s1 <span class="token operator">&gt;&gt;</span> s2 <span class="token operator">&gt;&gt;</span> s3<span class="token punctuation">;</span>
    <span class="token function">show</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">show</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">show</span><span class="token punctuation">(</span>s3<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Có thể thấy khi sử dụng hàm code trở nên ngắn và dễ hiểu hơn.</p>
<p>Tới đây chắc bạn cũng đã biết cách làm bài này với hàm để code ngắn và đẹp hơn, hãy quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn chưa làm được thì có thể xem hướng dẫn bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span>string s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token string">'A'</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token string">'Z'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">32</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> s <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> s3<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> s1 <span class="token operator">&gt;&gt;</span> s2 <span class="token operator">&gt;&gt;</span> s3<span class="token punctuation">;</span>
    <span class="token function">show</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">show</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">show</span><span class="token punctuation">(</span>s3<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập về hàm trong C++: viết hàm sắp xếp mảng cho trước.
---------------------------------------
<h3>Bài tập</h3>
<p>Cho mảng các số nguyên <code>n</code>&nbsp;phần tử <code>arr</code> được nhập từ bàn phím. Bạn hãy viết hàm sắp xếp các phần tử của mảng này theo thứ tự giảm dần.</p>
<p>Ví dụ nếu bạn nhập <code>n = 5, arr = [7, 2, 8, 4, 9]</code> như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">5
7 2 8 4 9</code></pre>
<p>Thì màn hình sẽ hiển thị lên:</p>
<pre class=" language-markup"><code class=" language-markup">9 8 7 4 2 </code></pre>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Bài này giống với bài sắp xếp mảng bạn đã được làm ở chương trước, mục đích mình tạo ra bài này là giúp bạn làm quen với hàm có đầu vào là một mảng.</p>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">sortArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
				arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
				arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> n<span class="token punctuation">;</span>
	<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cin <span class="token operator">&gt;&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">sortArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cout <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Hàm có giá trị trả về và hàm void trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Cho mảng các số nguyên <code>n</code>&nbsp;phần tử <code>arr</code> được nhập từ bàn phím. Bạn hãy viết hàm trả về&nbsp;tổng các phần tử trong mảng <code>arr</code>.</p>
<p>Ví dụ nếu bạn nhập <code>n = 5, arr = [7, 2, 8, 4, 9]</code> như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">5
7 2 8 4 9</code></pre>
<p>Thì chương trình sẽ hiển thị lên:</p>
<pre class=" language-markup"><code class=" language-markup">30</code></pre>
<p>Giải thích: <code>7 + 2 + 8 + 4 + 9 = 30</code></p>
<h3>Lý thuyết</h3>
<p>Ở các bài trước bạn đã biết cách tạo và sử dụng hàm không có giá trị trả về. Hàm không có giá trị trả về được khai báo bằng từ khóa <code>void</code>, các hàm dạng này được sử dụng để thực thi các đoạn code trong thân hàm và không cần lấy ra kết quả sau khi thực thi xong.</p>
<p>Hàm có giá trị trả về khác hàm không có giá trị trả về ở chỗ là các hàm dạng này sau khi thực thi các đoạn code thì sẽ trả về một kết quả. Ví dụ về hàm trả về tổng các số từ <code>1</code> tới <code>n</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token comment">// Khai báo hàm sum với kiểu trả về là int và đầu vào là số n</span>
<span class="token keyword">int</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Biến lưu trữ tổng các số từ 1 tới n</span>
	<span class="token keyword">int</span> add <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token comment">// Tính tổng các số từ 1 tới n và lưu vào biến add</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		add <span class="token operator">+=</span> i<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// Trả về add (gán kết quả của hàm sum cho add)</span>
	<span class="token keyword">return</span> add<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Hiển thị giá trị của hàm sum với các đầu vào khác nhau ra màn hình</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">6 10 15</code></pre>
<p>Trong ví dụ trên hàm <code>sum()</code> được khai báo với từ khóa <code>int</code>&nbsp;nên sẽ có kiểu trả về là một số nguyên (kết quả của hàm này là một số nguyên).</p>
<p>Để trả về một kết quả cho hàm bạn dùng câu lệnh <code>return</code>, như ở ví dụ trên thì hàm <code>sum()</code> có gọi tới câu lệnh <code>return add;</code> nên kết quả của hàm sẽ chính là biến <code>add</code>.</p>
<p>Do <code>sum()</code> là hàm có giá trị trả về là một số nguyên nên bạn có thể sử dụng hàm này như sử dụng một số nguyên (bạn có thể gán <code>int a = sum(3);</code> hay <code>cout &lt;&lt; sum(3);</code>, <code>...</code>).</p>
<p>Nếu bạn vẫn chưa quen với hàm có giá trị trả về thì có thể xem tiếp một ví dụ khác đơn giản hơn về hàm trả về tổng 2 số:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">5
5
10</code></pre>
<p>Lưu ý: Hàm sẽ kết thúc và trả về giá trị ngay khi gặp câu lệnh <code>return</code>. Xem ví dụ sau để hiểu hơn:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Kết quả khi chạy chương trình:</p>
<pre class=" language-markup"><code class=" language-markup">1
1
1</code></pre>
<p>Đọc tới đây bạn đã biết cách tạo và sử dụng hàm có giá trị trả về, hãy quay lại phần bài tập và làm thử.</p>
<p>Nếu bạn chưa làm được bài này thì có thể xem hướng dẫn bên dưới:</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">sumOfArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		sum <span class="token operator">+=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> n<span class="token punctuation">;</span>
	<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cin <span class="token operator">&gt;&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token function">sumOfArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: viết hàm trả về phần tử lớn nhất trong mảng.
---------------------------------------
<h3>Bài tập</h3>
<p>Cho mảng các số nguyên <code>n1</code> phần tử <code>arr1</code> và mảng các số nguyên <code>n2</code> phần tử <code>arr2</code> được nhập từ bàn phím. Bạn hãy hoàn thiện hàm <code>maxOfArray()</code> để chương trình hiển thị ra số lớn nhất trong 2 mảng này.</p>
<p>Ví dụ nếu bạn nhập <code>n1 = 5, arr1 = [1, 2, 3, 4, 5], n2 = 6, arr2 = [4, 2, 2, 6, 13, 1]</code> như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">5
1 2 3 4 5
6
4 2 2 6 13 1</code></pre>
<p>Thì màn hình sẽ hiển thị lên:</p>
<pre class=" language-markup"><code class=" language-markup">5 13</code></pre>
<p>Giải thích: <code>5</code> và <code>13</code> lần lượt là số lớn nhất trong 2 mảng.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">maxOfArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> maxValue <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> maxValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			maxValue <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> maxValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> n1<span class="token punctuation">,</span> n2<span class="token punctuation">;</span>
	<span class="token keyword">int</span> arr1<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr2<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> n1<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n1<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cin <span class="token operator">&gt;&gt;</span> arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	cin <span class="token operator">&gt;&gt;</span> n2<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n2<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cin <span class="token operator">&gt;&gt;</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	cout <span class="token operator">&lt;&lt;</span> <span class="token function">maxOfArray</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> n1<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> <span class="token function">maxOfArray</span><span class="token punctuation">(</span>arr2<span class="token punctuation">,</span> n2<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: viết hàm đếm số phần tử lẻ trong mảng.
---------------------------------------
<h3>Bài tập</h3>
<p>Cho mảng các số nguyên <code>n</code>&nbsp;phần tử <code>arr</code> được nhập từ bàn phím. Bạn hãy viết hàm trả về số phần tử lẻ trong mảng <code>arr</code>.</p>
<p>Ví dụ nếu bạn nhập <code>n = 7, arr = [2, 5, 3, 6, 9, 4, 1]</code> như bên dưới:</p>
<pre class=" language-markup"><code class=" language-markup">7
2 5 3 6 9 4 1</code></pre>
<p>Thì chương trình sẽ hiển thị lên:</p>
<pre class=" language-markup"><code class=" language-markup">4</code></pre>
<p>Giải thích: trong mảng <code>arr</code> có <code>4</code> số lẻ.</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">countOddNumberInArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			count<span class="token operator">++</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> n<span class="token punctuation">;</span>
	<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cin <span class="token operator">&gt;&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token function">countOddNumberInArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập về hàm trong C++: viết hàm hiển thị những xâu có độ dài lớn hơn 3 trong mảng | Codelearn
---------------------------------------
<h3>Đề bài</h3>
<p>Cho mảng các xâu ký tự <code>n</code> phần tử <code>arr</code> được nhập từ bàn phím, bạn hãy viết hàm hiển thị ra những xâu có độ dài lớn hơn hoặc bằng 3 trong mảng <code>arr</code>.</p>
<p>Ví dụ nếu bạn nhập <code>n = 4, arr = ["abcd", "ab", "abc", "a"]</code> như bên dưới</p>
<pre class=" language-markup"><code class=" language-markup">4
abcd ab abc a</code></pre>
<p>thì màn hình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">abcd abc </code></pre>
<p>Giải thích: Trong <code>arr</code> có 2 xâu có độ dài lớn hơn hoặc bằng 3 là <code>"abcd"</code> và <code>"abc"</code></p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span>string arr<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			cout <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> n<span class="token punctuation">;</span>
	string arr<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		cin <span class="token operator">&gt;&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">show</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Bài tập C++ cơ bản: viết hàm trả về chu vi hình tròn | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Cho hình tròn có bán kính <code>r</code>&nbsp;được nhập từ bàn phím, bạn hãy viết hàm trả về chu vi của hình tròn này biết&nbsp;<code><span>π = 3.14</span></code>.</p>
<p>Ví dụ nếu bạn nhập:</p>
<pre class=" language-markup"><code class=" language-markup">3.5</code></pre>
<p>Thì chương trình sẽ hiển thị ra:</p>
<pre class=" language-markup"><code class=" language-markup">21.98</code></pre>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">double</span> <span class="token function">circumference</span><span class="token punctuation">(</span><span class="token keyword">double</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token number">2</span> <span class="token operator">*</span> r <span class="token operator">*</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">double</span> r<span class="token punctuation">;</span>
	cin <span class="token operator">&gt;&gt;</span> r<span class="token punctuation">;</span>
	cout <span class="token operator">&lt;&lt;</span> <span class="token function">circumference</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
Hàm đệ quy trong C++ | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Cho số nguyên dương&nbsp;<code>n</code> được nhập từ bàn phím, bạn hãy viết hàm đệ quy trả về <code>n!</code> (<code>n</code> giai thừa).</p>
<p>Ví dụ: nếu bạn nhập <code>n = 5</code> thì chương trình sẽ hiển thị lên màn hình&nbsp;<code>120</code>.</p>
<h3>Lý thuyết</h3>
<p>Hàm đệ quy là hàm mà gọi tới chính nó, ví dụ một hàm đệ quy sẽ trông giống như sau:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token keyword">void</span> <span class="token function">recurse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token function">recurse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span></code></pre>
<p>Do tính chất tự gọi lại chính nó nên để tránh việc hàm đệ quy chạy không bao giờ dừng bạn luôn cần có điểm dừng (điểm dừng được hiểu đơn giản là tới 1 lúc nào đó, hàm đệ quy sẽ không gọi lại chính nó nữa).</p>
<p>Mô tả hàm đệ quy tính <code>5!</code>:</p>
<pre class=" language-markup"><code class=" language-markup">factorial(5)
= 5 * factorial(4)
= 5 * 4 * factorial(3)
= 5 * 4 * 3 * factorial(2)
= 5 * 4 * 3 * 2 * factorial(1)
= 5 * 4 * 3 * 2 * 1
= 120</code></pre>
<p>Điểm dừng ở ví dụ trên chính là khi đầu vào của hàm <code>factorial</code> bằng <code>1</code> thì hàm <code>factorial</code> sẽ trả về <code>1</code> thay vì gọi tiếp tới chính nó.</p>
<p>Để hiểu rõ hơn bạn hãy xem ví dụ tiếp theo về hàm đệ quy tính tổng các số từ <code>1</code> tới <code>n</code>:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> n <span class="token operator">+</span> <span class="token function">sum</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>Điểm dừng ở đây chính là khi <code>n = 0</code> thì hàm <code>sum</code>&nbsp;trả về <code>0</code> thay vì gọi tiếp tới chính nó.</p>
<p>Bạn có thể làm bài này dựa vào ví dụ trên, nếu bạn vẫn chưa làm được thì có thể xem hướng dẫn bên dưới:</p>
<h3>Hướng dẫn</h3>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">factorial</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> n <span class="token operator">*</span> <span class="token function">factorial</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token function">factorial</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
​​</code></pre>
Bài tập hàm đệ quy C++: viết hàm đệ quy trả về tổng các số lẻ từ 1 tới n
---------------------------------------
<h3>Bài tập</h3>
<p>Cho số nguyên <code>n</code> được nhập từ bàn phím, bạn hãy viết hàm đệ quy trả về tổng các số lẻ từ <code>1</code> tới <code>n</code>.</p>
<p>Ví dụ nếu bạn nhập <code>n = 5</code> thì chương trình sẽ hiển thị lên màn hình&nbsp;<code>9</code>&nbsp;(do <code>1 + 3 + 5 = 9</code>).</p>
<h3>Hướng dẫn</h3>
<p>Bài này bạn cần kết hợp hàm đệ quy với câu lệnh <code>if-else</code>.</p>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">sum</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> n <span class="token operator">+</span> <span class="token function">sum</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token function">sum</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
Bài tập hàm đệ quy C++: viết hàm đệ quy trả về tổng các phần tử trong mảng | Codelearn
---------------------------------------
<h3>Bài tập</h3>
<p>Cho mảng các số nguyên <code>n</code> phần tử <code>arr</code> được nhập từ bàn phím. Bạn hãy viết hàm đệ quy tính tổng các phần tử của mảng.</p>
<p>Nếu bạn vẫn chưa chưa thạo cách dùng hàm đệ quy thì có thể xem hướng dẫn bên dưới.</p>
<h3>Hướng dẫn</h3>
<p>Bài này cũng khá giống bài trước, bạn chỉ cần lưu ý rằng phần tử đầu tiên của mảng là <code>a[0]</code> chứ không phải là&nbsp;<code>a[1]</code>.</p>
<p>Code mẫu:</p>
<pre class=" language-cpp"><code class=" language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">sumOfArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> a<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token function">sumOfArray</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cin <span class="token operator">&gt;&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token function">sumOfArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
