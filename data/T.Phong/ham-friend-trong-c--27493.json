{
    "title": "Hàm Friend trong C++",
    "desicription": "Hàm friend trong C++ của một lớp được định nghĩa bên ngoài phạm vi lớp đó, nhưng nó có quyền truy cập tất cả thành viên private và protected của lớp đó. Ngay cả khi các nguyên mẫu cho hàm friend xuất hiện trong định nghĩa lớp, thì các hàm friend không là các hàm thành viên. Để tìm hiểu hàm friend trong C++, mời bạn đọc tham khảo bài viết dưới đây của eLib.VN",
    "img": "https://www.elib.vn/images/doc/2020/20201028//thumb/600x254/ham-friend-trong-c-218.jpg",
    "content": "\n              <p>Nếu một hàm được định nghĩa là một&nbsp;hàm friend trong C++, thì dữ liệu private và protected của một lớp có thể được truy cập bằng cách sử dụng hàm.</p>\n\n<p>Để truy cập dữ liệu, việc khai báo hàm friend nên được thực hiện bên trong phần thân của một lớp bắt đầu bằng từ khóa friend.</p>\n\n<div id=\"1\">\n<h2 id=\"goto-h2-1\">1. Khai báo hàm friend trong C++</h2>\n</div>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">class_name</span> {</span>   \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">friend</span> data_type <span class=\"hljs-title\">function_name</span><span class=\"hljs-params\">(cac_doi_so)</span></span>;\n};   </code></pre>\n</div>\n\n<p>Trong khai báo trên, hàm friend được khai báo bởi từ khóa friend. Hàm này có thể được định nghĩa ở bất cứ đâu trong chương trình như hàm C++ bình thường.</p>\n\n<p>Đặc điểm của hàm Friend:</p>\n\n<ul>\n\t<li>Hàm không nằm trong phạm vi của lớp mà nó đã được khai báo là friend.</li>\n\t<li>Nó không thể được gọi bằng cách sử dụng đối tượng vì nó không nằm trong phạm vi của lớp đó.</li>\n\t<li>Nó có thể được gọi như một hàm bình thường mà không cần sử dụng đối tượng.</li>\n\t<li>Nó không thể truy cập trực tiếp vào tên thành viên và phải sử dụng tên đối tượng và dấu chấm toán tử với tên thành viên.</li>\n\t<li>Nó có thể được khai báo trong phần private hoặc public.</li>\n</ul>\n\n<div id=\"2\">\n<h2 id=\"goto-h2-2\">2. Ví dụ hàm friend trong C++</h2>\n</div>\n\n<p>Ví dụ 1: hàm friend trong C++ được sử dụng để in chiều dài của Box.</p>\n\n<div>\n<div>\n<div id=\"highlighter_611410\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Box</span> {</span>\n<span class=\"hljs-keyword\">private</span>:\n    <span class=\"hljs-keyword\">int</span> length;\n\n<span class=\"hljs-keyword\">public</span>:\n    Box() : length(<span class=\"hljs-number\">0</span>) {}\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">friend</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">printLength</span><span class=\"hljs-params\">(Box)</span></span>; <span class=\"hljs-comment\">//ham friend</span>\n};\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">printLength</span><span class=\"hljs-params\">(Box b)</span> </span>{\n    b.length += <span class=\"hljs-number\">10</span>;\n    <span class=\"hljs-keyword\">return</span> b.length;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    Box b;\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Chieu dai cua box: \"</span> &lt;&lt; printLength(b) &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">Chieu dai cua box: <span class=\"hljs-number\">10</span></code></pre>\n</div>\n\n<p>Ví dụ 2: hàm friend được sử dụng trong 2 lớp:</p>\n\n<div>\n<div>\n<div id=\"highlighter_911885\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">B</span>;</span> <span class=\"hljs-comment\">// khai bao lop B</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">A</span> {</span>\n    <span class=\"hljs-keyword\">int</span> x;\n\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setdata</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> i)</span> </span>{\n        x = i;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">friend</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(A, B)</span></span>; <span class=\"hljs-comment\">// ham friend</span>\n};\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">B</span> {</span>\n    <span class=\"hljs-keyword\">int</span> y;\n\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setdata</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> i)</span> </span>{\n        y = i;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">friend</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(A, B)</span></span>; <span class=\"hljs-comment\">// ham friend</span>\n};\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(A a, B b)</span> </span>{\n    <span class=\"hljs-keyword\">if</span> (a.x &lt;= b.y)\n        <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">cout</span> &lt;&lt; a.x &lt;&lt; <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">endl</span>;\n    <span class=\"hljs-keyword\">else</span>\n        <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">cout</span> &lt;&lt; b.y &lt;&lt; <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">endl</span>;\n}\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    A a;\n    B b;\n    a.setdata(<span class=\"hljs-number\">10</span>);\n    b.setdata(<span class=\"hljs-number\">20</span>);\n    min(a, b);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-number\">10</span></code></pre>\n</div>\n\n<p>Trong ví dụ trên, hàm friend min() được sử dụng trong hai lớp, nghĩa là hàm min() có thể truy cập các thành viên riêng của cả hai lớp A và B.</p>\n\n<div id=\"3\">\n<h2 id=\"goto-h2-3\">3. Lớp Friend trong C++</h2>\n</div>\n\n<p>Một lớp friend có thể truy cập cả các thành viên private và protected của lớp mà nó đã được khai báo là friend.</p>\n\n<p>Ví dụ:</p>\n\n<div>\n<div>\n<div id=\"highlighter_184564\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">A</span> {</span>\n    <span class=\"hljs-keyword\">int</span> x = <span class=\"hljs-number\">5</span>;\n    <span class=\"hljs-keyword\">friend</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">B</span>;</span> <span class=\"hljs-comment\">// lop friend</span>\n};\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">B</span> {</span>\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">display</span><span class=\"hljs-params\">(A &amp;a)</span> </span>{\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Gia tri cua x la: \"</span> &lt;&lt; a.x;\n    }\n};\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    A a;\n    B b;\n    b.display(a);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n\n<div>Kết quả:</div>\n</div>\n</div>\n</div>\n\n<div>\n<pre><code class=\"language-cpp hljs\">Gia tri cua x la: <span class=\"hljs-number\">5</span></code></pre>\n\n<div>Trên đây là bài viết của eLib.VN về&nbsp;Hàm Friend trong C++.&nbsp;Hy vọng qua bài viết, các bạn&nbsp;biết được cú pháp và sử dụng hàm friend trong C++ phù hợp. Chúc các bạn thành công.</div>\n</div>\n\n\n\n\n\n\n\n\n\n              "
}