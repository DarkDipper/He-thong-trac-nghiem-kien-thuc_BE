{
    "title": "Struct trong C++",
    "desicription": "Struct trong C++ là gì? Nó được sử dụng như thế nào? Mời bạn đọc cùng eLib.VN tham khảo bài viết dưới đây của eLib.",
    "img": "https://www.elib.vn/images/doc/2020/20201028//thumb/600x254/struct-trong-c-66.jpg",
    "content": "\n              <div id=\"1\">\n<h2>1. Struct trong C++</h2>\n</div>\n\n<p>Trong ngôn ngữ lập trình C++, các lớp và cấu trúc (struct) là các bản thiết kế được sử dụng để tạo ra thể hiện của một lớp.&nbsp;Struct trong C++&nbsp;được sử dụng cho các đối tượng nhẹ như Hinhtron, Color, Point v.v.</p>\n\n<p>Không giống như lớp, struct trong C++ kiểu giá trị hơn là kiểu tham chiếu. Nó rất hữu ích nếu bạn có dữ liệu không có ý định sửa đổi sau khi tạo struct.</p>\n\n<p>Struct trong C++ là một tập hợp các loại dữ liệu khác nhau. Nó tương tự như lớp chứa các loại dữ liệu khác nhau.</p>\n\n<div id=\"2\">\n<h2 id=\"goto-h2-1\">2. Cú pháp</h2>\n</div>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span>  <span class=\"hljs-title\">structure_name</span> {</span> \n    <span class=\"hljs-comment\">// khai báo thành viên.  </span>\n}</code></pre>\n</div>\n\n<p>Trong khai báo trên, một cấu trúc được khai báo bằng cách đặt trước từ khóa struct theo sau là định danh (tên cấu trúc). Bên trong các dấu ngoặc nhọn, chúng ta có thể khai báo các biến thành viên của các loại khác nhau. Ví dụ:</p>\n\n<div>\n<div>\n<div id=\"highlighter_621377\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">Student</span> {</span> \n    <span class=\"hljs-keyword\">char</span> name[<span class=\"hljs-number\">20</span>];\n    <span class=\"hljs-keyword\">int</span> id;\n    <span class=\"hljs-keyword\">int</span> age; \n} </code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Trong trường hợp trên, Student là một cấu trúc chứa ba biến name, id và age. Khi cấu trúc được khai báo, không có bộ nhớ được phân bổ. Khi biến của cấu trúc được tạo, thì bộ nhớ được cấp phát.</p>\n\n<div id=\"3\">\n<h2 id=\"goto-h2-2\">3. Làm thế nào để tạo thể hiện của struct</h2>\n</div>\n\n<p>Biến cấu trúc có thể được định nghĩa là:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">Student s;</code></pre>\n</div>\n\n<p>Ở đây, s là một biến cấu trúc của kiểu&nbsp;Student. Khi biến cấu trúc được tạo, bộ nhớ sẽ được phân bổ. Cấu trúc sinh viên chứa một biến char và hai biến số nguyên. Do đó, bộ nhớ cho một biến char là 1 byte và hai int sẽ là 2 * 4 = 8. Tổng bộ nhớ chiếm bởi biến s là 9 byte.</p>\n\n<h2 id=\"goto-h2-3\">4. Cách truy cập biến struct</h2>\n\n<p>Biến của struct có thể được truy cập bằng cách sử dụng thể hiện của struct theo sau bởi toán tử (.) Và sau đó là trường của struct. Ví dụ:</p>\n\n<div>\n<div id=\"highlighter_105241\">\n<div>\n<pre><code class=\"language-cpp hljs\">s.id = <span class=\"hljs-number\">10</span>;</code></pre>\n</div>\n</div>\n</div>\n\n<p><strong>Ví dụ struct trong C++</strong></p>\n\n<div>\n<p>Ví dụ về struct hình chữ nhật có hai chiều rộng và chiều cao:</p>\n\n<div>\n<div>\n<div id=\"highlighter_909969\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">Rectangle</span> {</span>\n    <span class=\"hljs-keyword\">int</span> width, height;\n};\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span>)</span> </span>{\n    <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">Rectangle</span> <span class=\"hljs-title\">rec</span>;</span>\n    rec.width = <span class=\"hljs-number\">8</span>;\n    rec.height = <span class=\"hljs-number\">5</span>;\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Dien tich hinh chu nhat la: \"</span> &lt;&lt; (rec.width * rec.height) &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">Dien tich hinh chu nhat la: <span class=\"hljs-number\">40</span></code></pre>\n</div>\n</div>\n\n<div id=\"5\">\n<h2>5. Ví dụ về cấu trúc C++: Sử dụng phương thức và Constructor</h2>\n</div>\n\n<div>\n<p>Ví dụ sau sử dụng Struct nơi mà khởi tạo dữ liệu và phương thức để tính diện tích hình chữ nhật.</p>\n\n<div>\n<div>\n<div id=\"highlighter_955921\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">Rectangle</span> {</span>\n    <span class=\"hljs-keyword\">int</span> width, height;\n    Rectangle(<span class=\"hljs-keyword\">int</span> w, <span class=\"hljs-keyword\">int</span> h) {\n        width = w;\n        height = h;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">areaOfRectangle</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Dien tich hinh chu nhat la: \"</span> &lt;&lt; (width * height);\n    }\n};\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span>)</span> </span>{\n    <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">Rectangle</span> <span class=\"hljs-title\">rec</span> = <span class=\"hljs-title\">Rectangle</span>(4, 10);</span>\n    rec.areaOfRectangle();\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">Dien tich hinh chu nhat la: <span class=\"hljs-number\">40</span></code></pre>\n</div>\n</div>\n\n<p>Trên đây là bài viết của eLib.VN về&nbsp;Struct trong C++. Hy vọng, sau khi đọc xong bài viết, các bạn&nbsp;biết cách sử dụng struct trong C++,&nbsp;phân biệt được điểm giống nhau và khác nhau giữa struct và lớp trong C++. Chúc các bạn thành công.</p>\n\n\n\n\n\n\n\n\n\n              "
}