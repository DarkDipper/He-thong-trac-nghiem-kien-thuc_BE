{
    "chapter": "Nạp Chồng Toán Tử",
    "title": "Nạp chồng toán tử Input/Output trong C++",
    "desicription": "Khi kiểu dữ liệu bạn định nghĩa có nhiều thuộc tính, mỗi lần xuất ra phải nhờ vào hàm xuất do bạn tự định nghĩa vậy sao không định nghĩa luôn toán tử nhập xuất của iostream. Để tìm hiểu rõ hơn, mời bạn đọc cùng tham khảo bài viết dưới đây của eLib.VN ",
    "img": "https://www.elib.vn/images/doc/2020/20201029//thumb/600x254/nap-chong-toan-tu-input-output-trong-c-473.jpg",
    "content": "\n              <div id=\"1\">\n<h2 id=\"goto-h2-1\">1. Nạp chồng toán tử Input/Output trong C++</h2>\n</div>\n\n<p>C++ là có thể input và output các kiểu dữ liệu có sẵn bởi sử dụng toán tử trích luồng &gt;&gt; và toán tử chèn luồng &lt;&lt;. Các toán tử trích luồng và chèn luồng cũng có thể được nạp chồng để thực hiện input và output cho các kiểu tự định nghĩa (user-defined).</p>\n\n<p>Ở đây, nó là quan trọng để tạo một hàm nạp chồng toán tử một friend của lớp, bởi vì nó sẽ được gọi mà không tạo một đối tượng.</p>\n\n<div id=\"2\">\n<h2 id=\"goto-h2-2\">2. Ví dụ Nạp chồng toán tử Input/Output trong C++</h2>\n</div>\n\n<p>Ví dụ sau giải thích cách nạp chồng toán tử trích luồng &gt;&gt; và toán tử chèn luồng &lt;&lt; trong C++:.</p>\n\n<div>\n<div>\n<div id=\"highlighter_716354\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">KhoangCach</span>\n{</span>\n<span class=\"hljs-keyword\">private</span>:\n    <span class=\"hljs-keyword\">int</span> met;\n    <span class=\"hljs-keyword\">int</span> centimet;\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-comment\">// phan khai bao cac constructor can thiet</span>\n    KhoangCach() {\n        met = <span class=\"hljs-number\">0</span>;\n        centimet = <span class=\"hljs-number\">0</span>;\n    }\n    KhoangCach(<span class=\"hljs-keyword\">int</span> m, <span class=\"hljs-keyword\">int</span> c) {\n        met = m;\n        centimet = c;\n    }\n    <span class=\"hljs-keyword\">friend</span> ostream&amp; <span class=\"hljs-keyword\">operator</span>&lt;&lt;(ostream&amp; output,\n        <span class=\"hljs-keyword\">const</span> KhoangCach&amp; K)\n    {\n        output &lt;&lt; <span class=\"hljs-string\">\"\\nDo dai bang m la: \"</span> &lt;&lt;\n            K.met &lt;&lt; <span class=\"hljs-string\">\"\\nVa do dai bang cm la: \"</span> &lt;&lt; K.centimet;\n        <span class=\"hljs-keyword\">return</span> output;\n    }      <span class=\"hljs-keyword\">friend</span> istream&amp; <span class=\"hljs-keyword\">operator</span>&gt;&gt;(istream&amp; input, KhoangCach&amp; K)\n    {\n        input &gt;&gt; K.met &gt;&gt; K.centimet;\n        <span class=\"hljs-keyword\">return</span> input;\n    }\n};\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>{\n    <span class=\"hljs-function\">KhoangCach <span class=\"hljs-title\">K1</span><span class=\"hljs-params\">(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">15</span>)</span>, <span class=\"hljs-title\">K2</span><span class=\"hljs-params\">(<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">50</span>)</span>, K3</span>;\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Nhap gia tri cua doi tuong K3: \"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    <span class=\"hljs-built_in\">cin</span> &gt;&gt; K3;\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Khoang cach dau tien: \"</span> &lt;&lt; K1 &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"\\n==========================\\n\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Khoang cach thu hai: \"</span> &lt;&lt; K2 &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"\\n==========================\\n\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Khoang cach thu ba: \"</span> &lt;&lt; K3 &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<div>\n<p>Biên dịch và chạy chương trình C++ trên sẽ cho kết quả sau:</p>\n</div>\n\n<p style=\"text-align: center;\"><img alt=\"\" src=\"https://s.elib.vn/images/fckeditor/upload/2020/20201029/images/nap-chong-toan-tu-input-output-trong-c-_1603941994.png\"></p>\n\n<p>Trên đây là bài viết của eLib.VN về&nbsp;Nạp chồng toán tử Input/Output trong C++.&nbsp;Hy vọng qua bài này bạn sẽ hiểu và vận dụng trong quá trình học tập và làm việc với C++. Chúc các bạn thành công!</p>\n\n<p>&nbsp;</p>\n\n\n\n\n\n\n\n\n\n              "
}