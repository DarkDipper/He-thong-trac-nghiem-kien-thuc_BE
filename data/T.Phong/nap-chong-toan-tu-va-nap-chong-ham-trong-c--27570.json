{
    "chapter": "Nạp Chồng Toán Tử",
    "title": "Nạp chồng toán tử và Nạp chồng hàm trong C++",
    "desicription": "Nếu bạn đã học qua lập trình C++ cơ bản, chắc chắc rằng trong hầu hết các bài tập về C++, bạn đều sử dụng các toán tử số học như cộng, trừ, nhân, chia. Hầu hết các toán tử đó đều được thực hiện trên toán hạng có kiểu dữ liệu cơ bản như int, float, double…Vậy nếu như bạn muốn thực hiện các toán tử đó đối với toán hạng có kiểu dữ liệu bạn tự định nghĩa thì làm sao? Mời bạn đọc cùng eLib.VN tham khảo bài viết dưới đây để hiểu rõ về Nạp chồng toán tử và Nạp chồng hàm trong C++.",
    "img": "https://www.elib.vn/images/doc/2020/20201029//thumb/600x254/nap-chong-toan-tu-va-nap-chong-ham-trong-c-804.jpg",
    "content": "\n              <div id=\"1\">\n<h2 id=\"goto-h2-1\">1. Nạp chồng toán tử và Nạp chồng hàm trong C++</h2>\n</div>\n\n<p>Nạp chồng hàm (function overloading)&nbsp;và&nbsp;Nạp chồng toán tử (operator overloading)&nbsp;trong C++ cho phép bạn xác định nhiều hơn một định nghĩa cho một tên hàm hoặc một toán tử trong cùng phạm vi (scope), được gọi tương ứng.</p>\n\n<p>Một khai báo nạp chồng là một khai báo mà đã được khai báo với cùng tên như một khai báo được khai báo trước đó trong cùng phạm vi, ngoại trừ rằng: cả hai khai báo có các tham số khác nhau và định nghĩa khác nhau.</p>\n\n<p>Khi bạn gọi một hàm nạp chồng hoặc một toán tử nạp chồng, thì compiler quyết định định nghĩa thích hợp nhất để sử dụng bằng việc so sánh các kiểu tham số bạn đã sử dụng để gọi hàm hoặc toán tử với các kiểu tham số đã được xác định trong các định nghĩa. Tiến trình lựa chọn hàm nạp chồng hoặc toán tử nạp chồng thích hợp nhất này được gọi là&nbsp;overload resolution - phân giải nạp chồng.</p>\n\n<div id=\"2\">\n<h2 id=\"goto-h2-2\">2. Nạp chồng hàm trong C++</h2>\n</div>\n\n<p>Bạn có thể có nhiều định nghĩa cho cùng tên hàm trong cùng phạm vi. Định nghĩa của hàm phải khác lẫn nhau về kiểu và/hoặc số tham số trong danh sách tham số. Bạn không thể nạp chồng các khai báo hàm mà chỉ khác nhau ở kiểu trả về.</p>\n\n<p>Trong ví dụ sau, cùng một hàm&nbsp;hamIn&nbsp;được sử dụng để in các kiểu dữ liệu khác nhau:</p>\n\n<div>\n<div>\n<div id=\"highlighter_417502\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">inDuLieu</span>\n{</span>\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">hamIn</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> i)</span> </span>{\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"In so nguyen: \"</span> &lt;&lt; i &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">hamIn</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">double</span>  f)</span> </span>{\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"In so thuc: \"</span> &lt;&lt; f &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    }    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">hamIn</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">char</span>* c)</span> </span>{\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"In ky tu: \"</span> &lt;&lt; c &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    }\n};\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span>)</span>\n</span>{\n    inDuLieu idl;\n\n    <span class=\"hljs-comment\">// Goi ham hamIn de in so nguyen</span>\n    idl.hamIn(<span class=\"hljs-number\">12345</span>);\n    <span class=\"hljs-comment\">// Goi ham hamIn de in so thuc</span>\n    idl.hamIn(<span class=\"hljs-number\">6677.02</span>);\n    <span class=\"hljs-comment\">// Goi ham hamIn de in ky tu</span>\n    idl.hamIn(<span class=\"hljs-string\">\"Hoc C++ co ban va nang cao.\"</span>);\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Biên dịch và chạy chương trình C++ trên sẽ cho kết quả sau:</p>\n\n<p style=\"text-align: center;\"><img alt=\"\" src=\"https://s.elib.vn/images/fckeditor/upload/2020/20201029/images/nap-chong-toan-tu_1603936394.png\" style=\"width: 462px; height: 97px;\"></p>\n\n<div id=\"3\">\n<h2 id=\"goto-h2-3\">3. Nạp chồng toán tử trong C++</h2>\n</div>\n\n<p>Bạn có thể định nghĩa lại hoặc nạp chồng hầu hết các toán tử có sẵn trong C++. Vì thế, một lập trình viên có thể sử dụng các toán tử với kiểu tự định nghĩa (user-defined).</p>\n\n<p>Nạp chồng toán tử trong C++ là các hàm với tên đặc biệt: Tên hàm là từ khóa operator theo sau là ký hiệu của toán tử đang được định nghĩa. Giống như bất kỳ hàm khác, một toán tử nạp chồng có một kiểu trả về và một danh sách tham số.</p>\n\n<div>\n<div>\n<div id=\"highlighter_431366\">\n<div>\n<pre><code class=\"language-cpp hljs\">Box <span class=\"hljs-keyword\">operator</span>+(<span class=\"hljs-keyword\">const</span> Box&amp;);</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Khai báo toán tử + để cộng hai đối tượng Box và trả về đối tượng Box cuối cùng. Hầu hết toán tử nạp chồng có thể được định nghĩa dưới dạng: các hàm không có thành viên (non-member) hoặc các hàm thành viên lớp. Trong trường hợp trên, chúng ta định nghĩa hàm ở dạng non-member của một lớp, thì sau đó chúng ta phải truyền hai tham số cho mỗi toán hạng, như sau:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">Box <span class=\"hljs-keyword\">operator</span>+(<span class=\"hljs-keyword\">const</span> Box&amp;, <span class=\"hljs-keyword\">const</span> Box&amp;);</code></pre>\n</div>\n\n<p>Ví dụ sau minh họa khái niệm nạp chồng toán tử bởi sử dụng một hàm thành viên. Ở đây, một đối tượng được truyền như là một tham số mà các thuộc tính của nó sẽ được truy cập bởi sử dụng đối tượng này, đối tượng mà sẽ gọi toán tử này có thể được truy cập bởi sử dụng toán tử&nbsp;this, như sau:</p>\n\n<div>\n<div>\n<div id=\"highlighter_55890\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Box</span>\n{</span>\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">double</span> <span class=\"hljs-title\">tinhTheTich</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span>)</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> chieudai * chieurong * chieucao;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setChieuDai</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">double</span> dai)</span>\n    </span>{\n        chieudai = dai;\n    }     \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setChieuRong</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">double</span> rong)</span>\n    </span>{\n        chieurong = rong;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setChieuCao</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">double</span> cao)</span>\n    </span>{\n        chieucao = cao;\n    }\n\n    <span class=\"hljs-comment\">// Nap chong toa tu + de cong hai doi tuong Box.</span>\n    Box <span class=\"hljs-keyword\">operator</span>+(<span class=\"hljs-keyword\">const</span> Box&amp; b)\n    {\n        Box box;\n        box.chieudai = <span class=\"hljs-keyword\">this</span>-&gt;chieudai + b.chieudai;\n        box.chieurong = <span class=\"hljs-keyword\">this</span>-&gt;chieurong + b.chieurong;\n        box.chieucao = <span class=\"hljs-keyword\">this</span>-&gt;chieucao + b.chieucao;\n        <span class=\"hljs-keyword\">return</span> box;\n    }\n<span class=\"hljs-keyword\">private</span>:\n    <span class=\"hljs-keyword\">double</span> chieudai;      <span class=\"hljs-comment\">// chieu dai cua mot box</span>\n    <span class=\"hljs-keyword\">double</span> chieurong;     <span class=\"hljs-comment\">// Chieu rong cua mot box</span>\n    <span class=\"hljs-keyword\">double</span> chieucao;      <span class=\"hljs-comment\">// Chieu cao cua mot box</span>\n};\n<span class=\"hljs-comment\">// ham main cua chuong trinh</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>{\n    Box Box1;                <span class=\"hljs-comment\">// Khai bao Box1 la cua kieu Box</span>\n    Box Box2;                <span class=\"hljs-comment\">// Khai bao Box2 la cua kieu Box</span>\n    Box Box3;                <span class=\"hljs-comment\">// Khai bao Box3 la cua kieu Box</span>\n    <span class=\"hljs-keyword\">double</span> thetich = <span class=\"hljs-number\">0.0</span>;    <span class=\"hljs-comment\">// Luu giu the tich cua mot box tai day</span>\n\n    <span class=\"hljs-comment\">// thong tin chi tiet cua box 1</span>\n    Box1.setChieuDai(<span class=\"hljs-number\">3.0</span>);\n    Box1.setChieuRong(<span class=\"hljs-number\">4.0</span>);\n    Box1.setChieuCao(<span class=\"hljs-number\">5.0</span>);\n\n    <span class=\"hljs-comment\">// thong tin chi tiet cua box 2</span>\n    Box2.setChieuDai(<span class=\"hljs-number\">6.0</span>);\n    Box2.setChieuRong(<span class=\"hljs-number\">7.0</span>);\n    Box2.setChieuCao(<span class=\"hljs-number\">8.0</span>);\n\n    <span class=\"hljs-comment\">// the tich cua box 1</span>\n    thetich = Box1.tinhTheTich();\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"The tich cua Box1 la: \"</span> &lt;&lt; thetich &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n\n    <span class=\"hljs-comment\">// the tich cua box 2</span>\n    thetich = Box2.tinhTheTich();\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"The tich cua Box2 la: \"</span> &lt;&lt; thetich &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    <span class=\"hljs-comment\">// cong hai doi tuong nhu sau:</span>\n    Box3 = Box1 + Box2;\n    <span class=\"hljs-comment\">// the tich cua box 3</span>\n    thetich = Box3.tinhTheTich();\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"The tich cua Box3 la: \"</span> &lt;&lt; thetich &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Biên dịch và chạy chương trình C++ trên sẽ cho kết quả sau:</p>\n\n<p style=\"text-align: center;\"><img alt=\"\" src=\"https://s.elib.vn/images/fckeditor/upload/2020/20201029/images/nap-chong-toan-tu2_1603936394.png\" style=\"width: 479px; height: 104px;\"></p>\n\n<div id=\"4\">\n<h2 id=\"goto-h2-4\">4. Toán tử có thể nạp chồng và không thể nạp chồng trong C++</h2>\n</div>\n\n<p>Bảng dưới liệt kê danh sách các toán tử có thể được nạp chồng trong C++:</p>\n\n<table border=\"1\" cellpadding=\"10\" cellspacing=\"10\" style=\"width:100%;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">+</td>\n\t\t\t<td style=\"text-align: center;\">-</td>\n\t\t\t<td style=\"text-align: center;\">*</td>\n\t\t\t<td style=\"text-align: center;\">/</td>\n\t\t\t<td style=\"text-align: center;\">%</td>\n\t\t\t<td style=\"text-align: center;\">^</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">&amp;</td>\n\t\t\t<td style=\"text-align: center;\">|</td>\n\t\t\t<td style=\"text-align: center;\">~</td>\n\t\t\t<td style=\"text-align: center;\">!</td>\n\t\t\t<td style=\"text-align: center;\">,</td>\n\t\t\t<td style=\"text-align: center;\">=</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">&lt;</td>\n\t\t\t<td style=\"text-align: center;\">&gt;</td>\n\t\t\t<td style=\"text-align: center;\">&lt;=</td>\n\t\t\t<td style=\"text-align: center;\">&gt;=</td>\n\t\t\t<td style=\"text-align: center;\">++</td>\n\t\t\t<td style=\"text-align: center;\">--</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">&lt;&lt;</td>\n\t\t\t<td style=\"text-align: center;\">&gt;&gt;</td>\n\t\t\t<td style=\"text-align: center;\">==</td>\n\t\t\t<td style=\"text-align: center;\">!=</td>\n\t\t\t<td style=\"text-align: center;\">&amp;&amp;</td>\n\t\t\t<td style=\"text-align: center;\">||</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">+=</td>\n\t\t\t<td style=\"text-align: center;\">-=</td>\n\t\t\t<td style=\"text-align: center;\">/=</td>\n\t\t\t<td style=\"text-align: center;\">%=</td>\n\t\t\t<td style=\"text-align: center;\">^=</td>\n\t\t\t<td style=\"text-align: center;\">&amp;=</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">|=</td>\n\t\t\t<td style=\"text-align: center;\">*=</td>\n\t\t\t<td style=\"text-align: center;\">&lt;&lt;=</td>\n\t\t\t<td style=\"text-align: center;\">&gt;&gt;=</td>\n\t\t\t<td style=\"text-align: center;\">[]</td>\n\t\t\t<td style=\"text-align: center;\">()</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">-&gt;</td>\n\t\t\t<td style=\"text-align: center;\">-&gt;*</td>\n\t\t\t<td style=\"text-align: center;\">new</td>\n\t\t\t<td style=\"text-align: center;\">new []</td>\n\t\t\t<td style=\"text-align: center;\">delete</td>\n\t\t\t<td style=\"text-align: center;\">delete []</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>Còn đây là danh sách các toán tử không thể được nạp chồng trong C++:</p>\n\n<table border=\"1\" cellpadding=\"10\" cellspacing=\"10\" style=\"width:100%;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">::</td>\n\t\t\t<td style=\"text-align: center;\">.*</td>\n\t\t\t<td style=\"text-align: center;\">.</td>\n\t\t\t<td style=\"text-align: center;\">?:</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<h2 id=\"goto-h2-5\">Ví dụ về Nạp chồng toán tử trong C++</h2>\n\n<p>Dưới đây là các ví dụ đa dạng minh họa Nạp chồng toán tử trong C++, từ đó giúp bạn hiểu sâu hơn về khái niệm này. Bạn click vào link để thấy ví dụ:</p>\n\n<table border=\"1\" cellpadding=\"10\" cellspacing=\"10\" style=\"width:100%;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>STT</th>\n\t\t\t<th>Toán tử và Ví dụ</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t<td>\n\t\t\t<p>Nạp chồng toán tử một ngôi (unary) trong C++</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td>\n\t\t\t<p>Nạp chồng toán tử nhị phân trong C++</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">3</td>\n\t\t\t<td>\n\t\t\t<p>Nạp chồng toán tử quan hệ trong C++</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">4</td>\n\t\t\t<td>\n\t\t\t<p>Nạp chồng toán tử Input/Output trong C++</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">5</td>\n\t\t\t<td>\n\t\t\t<p>Nạp chồng toán tử ++ và -- trong C++</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">6</td>\n\t\t\t<td>\n\t\t\t<p>Nạp chồng toán tử gán trong C++</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">7</td>\n\t\t\t<td>\n\t\t\t<p>Nạp chồng toán tử gọi hàm () trong C++</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">8</td>\n\t\t\t<td>\n\t\t\t<p>Nạp chồng toán tử [] trong C++</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">9</td>\n\t\t\t<td>\n\t\t\t<p>Nạp chồng toán tử truy cập thành viên lớp -&gt; trong C++</p>\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>Trên đây là bài viết của eLib.VN về&nbsp;Nạp chồng toán tử và Nạp chồng hàm trong C++.&nbsp;Nạp chồng (overloading)&nbsp;toán tử thường được người lập trình sử dụng rất nhiều trong lập trình hướng đối tượng. Vì vậy bạn đọc cần lưu ý.&nbsp;</p>\n\n\n\n\n\n\n\n\n\n              "
}