{
    "title": "Constructor trong C++",
    "desicription": "Hàm xây dựng (constructor) trong C++ là gì? Nó được sử dụng như thế nào? Nó có khác gì so với các hàm bình thường trong C++. Mời bạn đọc cùng eLib.VN tham khảo bài viết dưới đây của  eLib.",
    "img": "https://www.elib.vn/images/doc/2020/20201028//thumb/600x254/constructor-trong-c-214.jpg",
    "content": "\n              <div id=\"1\">\n<h2>1.&nbsp;Constructor trong C++&nbsp;</h2>\n</div>\n\n<p>Constructor trong C++&nbsp;là một phương thức đặc biệt được gọi tự động tại thời điểm tạo đối tượng. Nó được sử dụng để khởi tạo các thành viên dữ liệu của các đối tượng mới. Constructor trong C++ có cùng tên với lớp hoặc struct.</p>\n\n<p>Constructor trong C++ có thể được chia thành 2 loại:</p>\n\n<ul>\n\t<li>Constructor mặc định.</li>\n\t<li>Constructor có tham số.</li>\n</ul>\n\n<div id=\"2\">\n<h2 id=\"goto-h2-1\">2. Constructor mặc định trong C++</h2>\n</div>\n\n<p>Một constructor không có đối số được gọi là constructor mặc định. Nó được gọi tại thời điểm tạo đối tượng.</p>\n\n<p>Ví dụ về Constructor mặc định trong C++:</p>\n\n<div>\n<div>\n<div id=\"highlighter_595587\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Employee</span> {</span>\n<span class=\"hljs-keyword\">public</span>:\n    Employee() {\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Constructor mac dinh duoc goi...\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    }\n};\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span>)</span> </span>{\n    Employee e1; <span class=\"hljs-comment\">//tao doi tuong Employee</span>\n    Employee e2;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">Constructor mac dinh duoc goi...\nConstructor mac dinh duoc goi...</code></pre>\n\n<div id=\"3\">\n<h2 id=\"goto-h2-2\">3. Constructor có tham số trong C++</h2>\n</div>\n\n<p>Một constructor có tham số được gọi là constructor tham số hóa. Nó được sử dụng để cung cấp các giá trị khác nhau cho các đối tượng riêng biệt.</p>\n\n<p>Ví dụ về Constructor tham số trong C++:</p>\n\n<div>\n<div>\n<div id=\"highlighter_688851\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Employee</span> {</span>\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-keyword\">int</span> id; <span class=\"hljs-comment\">// data member (bien instance)</span>\n    <span class=\"hljs-built_in\">string</span> name; <span class=\"hljs-comment\">// data member(bien instance)</span>\n    <span class=\"hljs-keyword\">float</span> salary;\n    Employee(<span class=\"hljs-keyword\">int</span> i, <span class=\"hljs-built_in\">string</span> n, <span class=\"hljs-keyword\">float</span> s)\n    {\n        id = i;\n        name = n;\n        salary = s;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">display</span><span class=\"hljs-params\">()</span> </span>{ <span class=\"hljs-built_in\">cout</span> &lt;&lt; id &lt;&lt; <span class=\"hljs-string\">\"  \"</span> &lt;&lt; name &lt;&lt; <span class=\"hljs-string\">\"  \"</span> &lt;&lt; salary &lt;&lt; <span class=\"hljs-built_in\">endl</span>; }\n};\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span>)</span> </span>{\n    Employee e1 = Employee(<span class=\"hljs-number\">101</span>, <span class=\"hljs-string\">\"Phan Van Vinh\"</span>, <span class=\"hljs-number\">500</span>); <span class=\"hljs-comment\">// tao doi tuong Employee</span>\n    Employee e2 = Employee(<span class=\"hljs-number\">102</span>, <span class=\"hljs-string\">\"Dao Van Hoa\"</span>, <span class=\"hljs-number\">1000</span>);\n    e1.display();\n    e2.display();\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-number\">101</span>  Phan Van Vinh  <span class=\"hljs-number\">500</span>\n<span class=\"hljs-number\">102</span>  Dao Van Hoa  <span class=\"hljs-number\">1000</span></code></pre>\n</div>\n</div>\n\n<div id=\"4\">\n<h2>4.&nbsp;Destructor trong C++</h2>\n</div>\n\n<p>Destructor trong C++&nbsp;hoạt động ngược lại với&nbsp;Constructor; nó hủy các đối tượng của các lớp. Nó chỉ có thể được định nghĩa một lần trong một lớp. Nó được gọi tự động giống như các constructor.</p>\n\n<p>Một Destructor được định nghĩa giống như Constructor. Nó phải có cùng tên với lớp. Nhưng nó có tiền tố là dấu ngã (~).</p>\n\n<p>Destructor trong C++ không thể có tham số. Hơn thế nữa, bạn không thể sử dụng các modifier cho Destructor.</p>\n\n<p id=\"goto-h2-1\"><strong>Ví dụ&nbsp;</strong></p>\n\n<p>Ví dụ về Destructor trong C++ được gọi tự động:</p>\n\n<div>\n<div>\n<div id=\"highlighter_530920\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Employee</span> {</span>\n<span class=\"hljs-keyword\">public</span>:\n    Employee() {\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Goi Constructor...\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    }\n    ~Employee() {\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Goi Destructor...\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    }\n};\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span>)</span> </span>{\n    Employee e1; <span class=\"hljs-comment\">//tao mot doi tuong Employee</span>\n    Employee e2; <span class=\"hljs-comment\">//tao mot doi tuong Employee</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">Goi Constructor...\nGoi Constructor...\nGoi Destructor...\nGoi Destructor...\n</code></pre>\n</div>\n\n<p>Trên đây là bài viết của eLib.VN về&nbsp;Constructor trong C++.&nbsp;Hy vọng qua bài này bạn sẽ hiểu và vận dụng trong quá trình học tập và làm việc với C++. Chúc các bạn thành công!</p>\n\n\n\n\n\n\n\n\n\n              "
}