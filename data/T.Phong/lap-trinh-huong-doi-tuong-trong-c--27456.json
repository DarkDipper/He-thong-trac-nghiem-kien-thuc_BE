{
    "title": "Lập trình hướng đối tượng trong C++",
    "desicription": "Lập trình Hướng đối tượng là một trong những phương pháp lập trình mà mọi lập trình viên đều phải biết và sử dụng thành thạo. Trong bài viết dưới đây, eLib.VN sẽ nói về tất cả các khái niệm về lập trình hướng đối tượng với C++. Cùng theo dõi nhé!",
    "img": "https://www.elib.vn/images/doc/2020/20201028//thumb/600x254/lap-trinh-huong-doi-tuong-trong-c-360.jpg",
    "content": "\n              <div id=\"1\">\n<h2 id=\"goto-h2-1\">1. OOP (Hệ thống lập trình hướng đối tượng)</h2>\n</div>\n\n<p>Đối tượng&nbsp;(Object) có nghĩa là một thực thể từ thực tế như bút, ghế, bảng vv.&nbsp;Lập trình hướng đối tượng&nbsp;là một phương pháp hoặc mô hình để thiết kế một chương trình bằng cách sử dụng các lớp và các đối tượng. Nó đơn giản hóa việc phát triển và bảo trì phần mềm bằng cách cung cấp một số khái niệm:</p>\n\n<ul>\n\t<li>Đối tượng (Object)</li>\n\t<li>Lớp (Class)</li>\n\t<li>Kế thừa (Inheritance)</li>\n\t<li>Đa hình (Polymorphism)</li>\n\t<li>Trừu tượng (Abstraction)</li>\n\t<li>Đóng gói (Encapsulation)</li>\n</ul>\n\n<p id=\"goto-h3-1\"><strong>Đối tượng (Object)</strong></p>\n\n<p>Bất kỳ thực thể nào có trạng thái và hành vi được gọi là một đối tượng. Ví dụ: ghế, bút, bàn, bàn phím, xe đạp, vv Nó có thể là vật lý và hợp lý.</p>\n\n<p id=\"goto-h3-2\"><strong>Lớp (Class)</strong></p>\n\n<p>Bộ sưu tập các đối tượng được gọi là lớp. Nó là một thực thể logic.</p>\n\n<p id=\"goto-h3-3\"><strong>Kế thừa (Inheritance)</strong></p>\n\n<p>Khi một đối tượng được nhượng lại tất cả các thuộc tính và hành vi của đối tượng cha được gọi là thừa kế. Kế thừa cung cấp khả năng sử dụng lại mã. Nó được sử dụng để đạt được tính đa hình tại run-time.</p>\n\n<p id=\"goto-h3-4\"><strong>Đa hình (Polymorphism)</strong></p>\n\n<p>Khi một nhiệm vụ được thực hiện bằng nhiều cách khác nhau tức là được gọi là đa hình. Ví dụ: để thuyết phục khách hàng bằng các cách khác nhau, để vẽ một cái gì đó ví dụ như hình dạng hoặc hình chữ nhật, v.v.</p>\n\n<p>Trong C++, chúng ta sử dụng hàm overload và hàm overriding để đạt được đa hình.</p>\n\n<p id=\"goto-h3-5\"><strong>Trừu tượng (Abstraction)</strong></p>\n\n<p>Ẩn chi tiết nội bộ và chỉ hiển thị chức năng được gọi là trừu tượng. Ví dụ: cuộc gọi điện thoại, chúng ta không biết xử lý nội bộ.</p>\n\n<p id=\"goto-h3-6\"><strong>Đóng gói (Encapsulation)</strong></p>\n\n<p>Ràng buộc (hoặc gói) mã và dữ liệu với nhau thành một đơn vị duy nhất được gọi là đóng gói. Ví dụ: viên nang, nó được bọc với các loại thuốc khác nhau.</p>\n\n<div id=\"2\">\n<h2>2. Lợi thế của lập trình hướng đối tượng so với hướng thủ tục</h2>\n\n<p>Một số lợi thế của lập trình OOP:</p>\n</div>\n\n<ul>\n\t<li>OOP làm cho việc phát triển và bảo trì phần mềm dễ dàng hơn như trong ngôn ngữ lập trình hướng thủ tục.</li>\n\t<li>OOP cung cấp dữ liệu ẩn trong khi trong ngôn ngữ lập trình hướng thủ tục một dữ liệu toàn cầu có thể được truy cập từ bất cứ nơi nào.</li>\n\t<li>OOP cung cấp khả năng mô phỏng sự kiện trong thế giới thực hiệu quả hơn. Chúng ta có thể cung cấp giải pháp cho vấn đề thực tế.</li>\n</ul>\n\n<p>Trên đây là bài viết của eLib.VN giới thiệu về&nbsp;Lập trình Hướng đối tượng trong C++.&nbsp;Hy vọng qua bài này bạn sẽ hiểu và vận dụng trong quá trình học tập và làm việc với C++. Chúc các bạn thành công!</p>\n\n\n\n\n\n\n\n\n\n              "
}