{
    "chapter": "C++ Function",
    "title": "Đệ quy trong C++",
    "desicription": "Hàm đệ quy trong C++ là các hàm mà bản thân nó có khả năng gọi lại chính nó. Và kỹ thuật này được gọi là đệ quy. Trong bài viết dưới đây, eLib.VN sẽ cùng các bạn đi tìm hiểu về hàm đệ quy.",
    "img": "https://www.elib.vn/images/doc/2020/20201027//thumb/600x254/de-quy-trong-c-210.jpg",
    "content": "\n              <div id=\"1\">\n<h2>1.&nbsp;Đệ quy trong C++&nbsp;là gì?</h2>\n</div>\n\n<p>Đệ quy trong C++&nbsp;là quá trình trong đó một phương thức gọi lại chính nó một cách liên tiếp. Một hàm trong C++ gọi lại chính nó được gọi là phương thức đệ quy.</p>\n\n<p>Sử dụng đệ quy giúp code chặt chẽ hơn nhưng sẽ khó để hiểu hơn.</p>\n\n<p>Cú pháp:</p>\n\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-function\">kieu_tra_ve <span class=\"hljs-title\">ten_ham</span><span class=\"hljs-params\">()</span> </span>{  \n    <span class=\"hljs-comment\">// code</span>\n    ten_ham();\n} </code></pre>\n\n<div>\n<div id=\"highlighter_920526\">\n<div id=\"2\">\n<h2>2. Ví dụ về đệ quy trong C++</h2>\n</div>\n\n<p>Dưới đây là các ví dụ về cách sử dụng đệ quy trong C++.</p>\n\n<h4><strong>Ví dụ 1: Vòng lặp vô tận</strong></h4>\n\n<div>\n<div>\n<div id=\"highlighter_223283\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">p</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"hello\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    p();\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    p();\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<div>\n<pre><code class=\"language-cpp hljs\">hello\nhello\n...\nLỗi tràn bộ nhớ...</code></pre>\n</div>\n</div>\n\n<p><strong>Ví dụ 2: vòng lặp có hạn</strong></p>\n\n<div>\n<div>\n<div>\n<div id=\"highlighter_200616\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">int</span> count = <span class=\"hljs-number\">0</span>;\n  \n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">p</span><span class=\"hljs-params\">()</span> </span>{\n    count++;\n    <span class=\"hljs-keyword\">if</span> (count &lt;= <span class=\"hljs-number\">5</span>) {\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"hello\"</span> &lt;&lt; count &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n        p();\n    }\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    p();\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">hello <span class=\"hljs-number\">1</span>\nhello <span class=\"hljs-number\">2</span>\nhello <span class=\"hljs-number\">3</span>\nhello <span class=\"hljs-number\">4</span>\nhello <span class=\"hljs-number\">5</span></code></pre>\n</div>\n</div>\n\n<p><strong>Ví dụ 3: tính giai thừa</strong></p>\n\n<div>\n<div>\n<div>\n<div id=\"highlighter_579877\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">factorial</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> n)</span> </span>{\n    <span class=\"hljs-keyword\">if</span> (n == <span class=\"hljs-number\">1</span>)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">else</span>\n        <span class=\"hljs-keyword\">return</span> (n * factorial(n - <span class=\"hljs-number\">1</span>));\n}\n  \n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Giai thua cua 5 la:\"</span> &lt;&lt; factorial(<span class=\"hljs-number\">5</span>);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n\n<div>Kết quả:</div>\n</div>\n</div>\n</div>\n\n<div>\n<pre><code class=\"language-cpp hljs\">Giai thừa của <span class=\"hljs-number\">5</span> là: <span class=\"hljs-number\">120</span></code></pre>\n</div>\n</div>\n\n<p>Chương trình trên hoạt động như sau:</p>\n\n<div>\n<div>\n<pre><code class=\"language-cpp hljs\">factorial(<span class=\"hljs-number\">5</span>)\n   factorial(<span class=\"hljs-number\">4</span>)\n      factorial(<span class=\"hljs-number\">3</span>)\n         factorial(<span class=\"hljs-number\">2</span>)\n            factorial(<span class=\"hljs-number\">1</span>)\n               <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">2</span>*<span class=\"hljs-number\">1</span> = <span class=\"hljs-number\">2</span> \n         <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">3</span>*<span class=\"hljs-number\">2</span> = <span class=\"hljs-number\">6</span>\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">4</span>*<span class=\"hljs-number\">6</span> = <span class=\"hljs-number\">24</span>\n   <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">5</span>*<span class=\"hljs-number\">24</span> = <span class=\"hljs-number\">120</span></code></pre>\n</div>\n</div>\n\n<p><strong>Ví dụ 4: dãy số Fibonacci</strong></p>\n\n<div>\n<div>\n<div>\n<div id=\"highlighter_448742\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">int</span> n1 = <span class=\"hljs-number\">0</span>, n2 = <span class=\"hljs-number\">1</span>, n3 = <span class=\"hljs-number\">0</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">printFibo</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> count)</span> </span>{\n    <span class=\"hljs-keyword\">if</span> (count &gt; <span class=\"hljs-number\">0</span>) {\n        n3 = n1 + n2;\n        n1 = n2;\n        n2 = n3;\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">\" %d\"</span>, n3);\n        printFibo(count - <span class=\"hljs-number\">1</span>);\n    }\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-keyword\">int</span> count = <span class=\"hljs-number\">15</span>;\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; n1 &lt;&lt; <span class=\"hljs-string\">\" \"</span> &lt;&lt; n2; <span class=\"hljs-comment\">// in 0 và 1</span>\n    printFibo(count - <span class=\"hljs-number\">2</span>); <span class=\"hljs-comment\">// n-2 vì 2 so 0 và 1 da duoc in ra</span>\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-number\">0</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">3</span> <span class=\"hljs-number\">5</span> <span class=\"hljs-number\">8</span> <span class=\"hljs-number\">13</span> <span class=\"hljs-number\">21</span> <span class=\"hljs-number\">34</span> <span class=\"hljs-number\">55</span> <span class=\"hljs-number\">89</span> <span class=\"hljs-number\">144</span> <span class=\"hljs-number\">233</span> <span class=\"hljs-number\">377</span></code></pre>\n</div>\n</div>\n\n<p>Trên đây là bài viết của eLib.VN về đệ quy trong C++.&nbsp;Chúng tôi hy vọng, bài viết hữu ích cho những bạn có đam mê và muốn phát triển cùng ngôn ngữ lập trình C++. Chúc các bạn thành công!</p>\n\n\n\n\n\n\n\n\n\n              "
}