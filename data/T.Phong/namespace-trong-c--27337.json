{
    "title": "Namespace trong C++",
    "desicription": "Namespace trong C++ là gì? Cú pháp sử dụng như thế nào? Khai báo ra sao? Mời bạn đọc cùng tham khảo bài viết dưới đây của eLib.VN để tìm câu trả lời nhé.",
    "img": "https://www.elib.vn/images/doc/2020/20201027//thumb/600x254/namespace-trong-c-48.jpg",
    "content": "\n              <p>Hãy xem xét một tình huống, khi chúng ta có hai người cùng tên 'Bishop' trong cùng một lớp. Vì vậy để phân biệt chúng sẽ phải sử dụng một số thông tin bổ sung cùng với tên của họ. Chẳng hạn như nơi ở nếu họ sống ở 2 nơi khác nhau hoặc tên của cha mẹ họ, v.v.</p>\n\n<p>Tình huống tương tự có thể xảy ra trong các ứng dụng C++. Ví dụ, bạn có thể viết một hàm có tên là xyz() và có một thư viện khác có hàm cùng tên xyz(). Bây giờ trình biên dịch không có cách nào để biết phiên bản nào của hàm xyz() mà bạn đang đề cập đến bên trong chương trình của bạn.</p>\n\n<p>Một namespace được thiết kế để khắc phục vấn đề này và được sử dụng làm thông tin bổ sung để phân biệt các hàm, lớp, biến vv với cùng tên có sẵn trong các thư viện khác nhau. Sử dụng namespace trong C++, bạn có thể xác định ngữ cảnh trong đó tên được chỉ định. Về bản chất, một namespace định nghĩa một phạm vi.</p>\n\n<div id=\"1\">\n<h2 id=\"goto-h2-1\">1. Định nghĩa namespace</h2>\n</div>\n\n<p>Một định nghĩa namespace trong C++ bắt đầu với từ khóa&nbsp;namespace&nbsp;theo sau là tên namespace như sau:</p>\n\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">namespace</span> namespace_name {\n    <span class=\"hljs-comment\">// code</span>\n}</code></pre>\n\n<p>Để gọi phiên bản được kích hoạt namespace của một trong hai hàm hoặc biến, hãy thêm 2 dấu 2 chấm (::) như sau:</p>\n\n<pre><code class=\"language-cpp hljs\">name::code;  <span class=\"hljs-comment\">// code có thể là biến hoặc hàm.</span>\n</code></pre>\n\n<div>\n<div>Ví dụ namespac</div>\n</div>\n\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-comment\">// first namespace</span>\n<span class=\"hljs-keyword\">namespace</span> first_space {\n   <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">func</span><span class=\"hljs-params\">()</span> </span>{\n      <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"This is first_space\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n   }\n}\n\n<span class=\"hljs-comment\">// second namespace</span>\n<span class=\"hljs-keyword\">namespace</span> second_space {\n   <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">func</span><span class=\"hljs-params\">()</span> </span>{\n      <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"This is second_space\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n   }\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span> <span class=\"hljs-params\">()</span> </span>{\n   <span class=\"hljs-comment\">// goi ham tu first_space.</span>\n   first_space::func();\n    \n   <span class=\"hljs-comment\">// goi ham tu second_space.</span>\n   second_space::func();\n\n   <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n\n<div>\n<div id=\"highlighter_965150\">Kết quả:</div>\n</div>\n\n<div>\n<pre><code class=\"language-cpp hljs\">This is first_space\nThis is second_space</code></pre>\n\n<div id=\"2\">\n<h2 id=\"goto-h2-2\">2. Chỉ thị using</h2>\n</div>\n\n<p>Bạn cũng có thể tránh việc sử dụng tên của namespace với dấu (::) bằng cách sử dụng chỉ thị&nbsp;using. Chỉ thị này cho trình biên dịch biết mã tiếp theo sẽ sử dụng các tên trong namespace đã chỉ định. Ví dụ:</p>\n\n<div>\n<div>\n<div id=\"highlighter_33280\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-comment\">// first namespace</span>\n<span class=\"hljs-keyword\">namespace</span> first_space {\n   <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">func</span><span class=\"hljs-params\">()</span> </span>{\n      <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"This is first_space\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n   }\n}\n\n<span class=\"hljs-comment\">// second namespace</span>\n<span class=\"hljs-keyword\">namespace</span> second_space {\n   <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">func</span><span class=\"hljs-params\">()</span> </span>{\n      <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"This is second_space\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n   }\n}\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> first_space;\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span> <span class=\"hljs-params\">()</span> </span>{\n    func();\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n\n<div>Kết quả:</div>\n</div>\n</div>\n</div>\n\n<div>\n<pre><code class=\"language-cpp hljs\">This is first_space</code></pre>\n</div>\n</div>\n\n<p>Hoặc:</p>\n\n<div>\n<div>\n<div>\n<div id=\"highlighter_694974\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-comment\">// first namespace</span>\n<span class=\"hljs-keyword\">namespace</span> first_space {\n   <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">func</span><span class=\"hljs-params\">()</span> </span>{\n      <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"This is first_space\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n   }\n}\n\n<span class=\"hljs-comment\">// second namespace</span>\n<span class=\"hljs-keyword\">namespace</span> second_space {\n   <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">func</span><span class=\"hljs-params\">()</span> </span>{\n      <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"This is second_space\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n   }\n}\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> second_space;\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span> <span class=\"hljs-params\">()</span> </span>{\n    func();\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n\n<div>Kết quả:</div>\n</div>\n</div>\n</div>\n\n<div>\n<pre><code class=\"language-cpp hljs\">This is second_space</code></pre>\n</div>\n</div>\n\n<p>Chỉ thị 'using' cũng có thể được sử dụng để chỉ một mục cụ thể trong một namespace. Ví dụ, nếu phần duy nhất của không gian tên&nbsp;std&nbsp;mà bạn dự định sử dụng là&nbsp;cout, nó được khai báo như sau:</p>\n\n<div>\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">using</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">cout</span>;</code></pre>\n</div>\n</div>\n\n<p>Mã tiếp theo có thể tham chiếu đến&nbsp;cout&nbsp;mà không cần thêm namespace, nhưng các mục khác trong namespace&nbsp;std&nbsp;sẽ vẫn cần phải khai báo rõ ràng như sau:</p>\n\n<div>\n<div>\n<div>\n<div id=\"highlighter_187169\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">cout</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span> <span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"std::endl duoc su dung voi std!\"</span> &lt;&lt; <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">endl</span>;\n    \n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">endl</span> duoc su dung voi <span class=\"hljs-built_in\">std</span>!</code></pre>\n</div>\n</div>\n\n<div id=\"3\">\n<h2>3. Namespace không liên quan</h2>\n</div>\n\n<div>\n<p>Một Namespace có thể được định nghĩa trong một số phần và do đó một Namespace được tạo thành từ tổng các phần được định nghĩa của nó. Các phần riêng biệt của Namespace có thể được trải rộng trên nhiều tệp.</p>\n\n<p>Vì vậy, nếu một phần của Namespace yêu cầu tên được xác định trong một tệp khác, tên đó vẫn phải được khai báo. Viết một định nghĩa vùng tên sau đây hoặc định nghĩa một không gian tên mới hoặc thêm các phần tử mới vào một không gian tên hiện có:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">namespace</span> namespace_name {\n    <span class=\"hljs-comment\">// code</span>\n}</code></pre>\n</div>\n</div>\n\n<div id=\"4\">\n<h2>4. Namespace lồng nhau</h2>\n</div>\n\n<div>\n<div>\n<p>Cú pháp:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">namespace</span> namespace_name1 {\n   <span class=\"hljs-comment\">// code</span>\n   <span class=\"hljs-keyword\">namespace</span> namespace_name2 {\n      <span class=\"hljs-comment\">// code</span>\n   }\n}</code></pre>\n</div>\n</div>\n</div>\n\n<p>Bạn có thể truy cập các thành viên của namespace lồng nhau bằng cách sử dụng các toán tử phân giải như sau:</p>\n\n<div>\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-comment\">// để truy cập thành viên của namespace_name2</span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> namespace_name1::namespace_name2;\n\n<span class=\"hljs-comment\">// để truy cập thành viên của namespace:name1</span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> namespace_name1;</code></pre>\n</div>\n</div>\n\n<p>Ví dụ:</p>\n\n<div>\n<div>\n<div>\n<div id=\"highlighter_144808\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-comment\">// first namespace</span>\n<span class=\"hljs-keyword\">namespace</span> first_space {\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">func</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"This is first_space\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    }\n    \n    <span class=\"hljs-comment\">// second namespace</span>\n    <span class=\"hljs-keyword\">namespace</span> second_space {\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">func</span><span class=\"hljs-params\">()</span> </span>{\n            <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"This is second_space\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n        }\n    }\n}\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> first_space::second_space;\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span> <span class=\"hljs-params\">()</span> </span>{\n <span class=\"hljs-comment\">// se goi ham cua namespace second_space</span>\n    func();\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">This is second_space</code></pre>\n</div>\n</div>\n\n<p>Trên đây là bài viết của eLib.VN về&nbsp;Namespace trong C++.&nbsp;Hy vọng qua bài này bạn sẽ hiểu và vận dụng trong quá trình học tập và làm việc với C++. Chúc các bạn thành công!</p>\n\n\n\n\n\n\n\n\n\n              "
}