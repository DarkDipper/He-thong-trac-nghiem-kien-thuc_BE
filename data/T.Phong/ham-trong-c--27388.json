{
    "title": "Hàm trong C++",
    "desicription": "Hàm là một trong những cấu trúc cực kỳ quan trọng trong lập trình. Việc sử dụng hàm trong lập trình sẽ diễn ra rất thường xuyên. Vì vậy nắm, hiểu “hàm là gì? cách khai báo và sử dụng hàm trong C++” sẽ đóng vai trò then chốt trong việc học lập trình của bạn. Cùng eLib tham khảo bài viết dưới đây để biết thêm về hàm trong C++ nhé!",
    "img": "https://www.elib.vn/images/doc/2020/20201027//thumb/600x254/ham-trong-c-860.jpg",
    "content": "\n              <div id=\"1\">\n<h2>1. Hàm trong C++ là gì?</h2>\n</div>\n\n<p>Một hàm là một nhóm các câu lệnh cùng nhau thực hiện một nhiệm vụ. Mỗi chương trình C++ có ít nhất một hàm, là hàm&nbsp;main().</p>\n\n<p>Bạn có thể chia mã của bạn thành các hàm riêng biệt. Cách bạn phân chia mã của bạn giữa các hàm khác nhau tùy thuộc vào bạn, nhưng về mặt logic mỗi hàm thực hiện một tác vụ cụ thể.</p>\n\n<p>Một&nbsp;khai báo hàm&nbsp;cho trình biên dịch biết về tên, kiểu trả về và các tham số của hàm.&nbsp;Định nghĩa hàm&nbsp;cung cấp phần thân thực của hàm.</p>\n\n<p>Thư viện chuẩn C++ cung cấp nhiều hàm được tích hợp sẵn mà chương trình của bạn có thể gọi. Ví dụ,&nbsp;strcat() để nối hai chuỗi,&nbsp;memcpy() để sao chép một vị trí bộ nhớ sang một vị trí khác và nhiều hàm khác.</p>\n\n<p>Hàm trong C++ còn được gọi là thủ tục hoặc chương trình con trong các ngôn ngữ lập trình khác.</p>\n\n<p>Để thực hiện bất kỳ tác vụ nào, chúng ta có thể tạo ra các hàm. Một hàm có thể được gọi nhiều lần. Nó cung cấp tính mô đun và khả năng sử dụng lại mã. Hàm giúp phân chia vấn đề phức tạp thành các thành phần nhỏ giúp chương trình dễ hiểu và dễ sử dụng.</p>\n\n<div id=\"2\">\n<h2 id=\"goto-h2-1\">2. Lợi thế của các hàm trong C++</h2>\n</div>\n\n<ul>\n\t<li>Tái sử dụng mã: Bằng cách tạo các hàm trong C++, bạn có thể gọi nó nhiều lần. Vì vậy, bạn không cần phải viết cùng một mã một hoặc nhiều lần nữa.</li>\n\t<li>Tối ưu hóa mã : Nó làm cho mã được tối ưu hóa, chúng ta không cần phải viết nhiều mã.</li>\n</ul>\n\n<p>Giả sử, bạn phải kiểm tra 3 số (531, 883 và 781) có phải là số nguyên tố hay không. Không sử dụng hàm, bạn cần viết logic số nguyên tố 3 lần. Vì vậy, có sự lặp lại của mã.</p>\n\n<p>Nhưng nếu bạn sử dụng các hàm, bạn chỉ cần viết logic một lần và bạn có thể sử dụng lại nó nhiều lần.</p>\n\n<div id=\"3\">\n<h2 id=\"goto-h2-2\">3. Định nghĩa một hàm</h2>\n</div>\n\n<p>Dạng chung của định nghĩa hàm trong C++ như sau:</p>\n\n<div>\n<div>\n<div id=\"highlighter_82266\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-function\">return_type <span class=\"hljs-title\">function_name</span><span class=\"hljs-params\">(parameter <span class=\"hljs-built_in\">list</span>)</span> </span>{\n    <span class=\"hljs-comment\">// code</span>\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Định nghĩa hàm trong lập trình C++ bao gồm tên hàm và phần thân hàm . Dưới đây là tất cả các phần của hàm:</p>\n\n<p>Tên hàm: Đây là tên thực của hàm.</p>\n\n<ul>\n\t<li>Kiểu trả về: Một hàm có thể trả về một giá trị. Các&nbsp;return_type&nbsp;là kiểu dữ liệu của giá trị hàm trả về. Một số hàm thực hiện các hoạt động mong muốn mà không trả về một giá trị. Trong trường hợp này, return_type là từ khóa&nbsp;void.</li>\n\t<li>Tham số: Một tham số giống như một trình giữ chỗ. Khi một hàm được gọi, bạn chuyển một giá trị cho tham số. Giá trị này được gọi là tham số hoặc đối số thực tế. Danh sách tham số tham chiếu đến loại, thứ tự và số tham số của hàm. Các tham số là tùy chọn; có nghĩa là, một hàm có thể không chứa tham số.</li>\n\t<li>Thân hàm: Phần thân hàm chứa một tập hợp các câu lệnh xác định chức năng của hàm.</li>\n</ul>\n\n<div id=\"4\">\n<h2 id=\"goto-h2-3\">4. Ví dụ hàm trong C++</h2>\n</div>\n\n<p>Ví dụ dưới đây là mã nguồn cho một hàm được gọi là max(). Hàm này truyền vào hai tham số num1 và num2 và trả về giá trị lớn nhất giữa hai tham số:</p>\n\n<div>\n<div id=\"highlighter_115736\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-comment\">/* hàm trả về giá trị lớn nhất giữa 2 số */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> num1, <span class=\"hljs-keyword\">int</span> num2)</span> </span>{\n\n   <span class=\"hljs-comment\">/* khai báo biến local */</span>\n   <span class=\"hljs-keyword\">int</span> result;\n  \n   <span class=\"hljs-keyword\">if</span> (num1 &gt; num2)\n      result = num1;\n   <span class=\"hljs-keyword\">else</span>\n      result = num2;\n  \n   <span class=\"hljs-keyword\">return</span> result;\n}</code></pre>\n</div>\n\n<p id=\"goto-h2-4\">Một khai báo hàm cho trình biên dịch biết về tên hàm và cách gọi hàm. Cơ thể thực tế của hàm có thể được định nghĩa riêng.</p>\n\n<div id=\"5\">\n<h2>5.&nbsp;Khai báo hàm trong C++</h2>\n</div>\n\n<p>Một khai báo hàm có các phần sau:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-function\">return_type <span class=\"hljs-title\">function_name</span><span class=\"hljs-params\">(parameter <span class=\"hljs-built_in\">list</span>)</span></span>;</code></pre>\n</div>\n</div>\n</div>\n\n<p>Đối với hàm được định nghĩa ở trên max (), khai báo hàm như sau:</p>\n\n<div>\n<div>\n<div>\n<div id=\"highlighter_752351\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> num1, <span class=\"hljs-keyword\">int</span> num2)</span></span>;</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<p>Tên tham số không quan trọng trong khai báo hàm chỉ loại của chúng là bắt buộc, vì vậy sau đây cũng là khai báo hợp lệ:</p>\n\n<div>\n<div>\n<div>\n<div id=\"highlighter_184493\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span>, <span class=\"hljs-keyword\">int</span>)</span></span>;</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<p>Khai báo hàm là bắt buộc khi bạn định nghĩa một hàm trong một tệp nguồn và bạn gọi hàm đó trong một tệp khác. Trong trường hợp này, bạn nên khai báo hàm ở đầu tệp gọi hàm.</p>\n\n<div>\n<div id=\"6\">\n<h2 id=\"goto-h2-5\">6. Gọi một hàm trong C++</h2>\n</div>\n\n<p>Hàm trong lập trình C++ hoạt động như thế nào? Hình ảnh sau đây mô tả gọi&nbsp;một hàm do người dùng định nghĩa&nbsp;bên trong hàm&nbsp;main():</p>\n\n<p style=\"text-align: center;\"><img alt=\"Hàm trong C++\" src=\"https://s.elib.vn/images/fckeditor/upload/2020/20201027/images/goi-mot-ham-trong-c-_1603786807.png\" title=\"Hàm trong C++\"><p class=\"notepic\">Hàm trong C++</p></p>\n\n<p>Trong khi tạo một hàm C, bạn đưa ra một định nghĩa về chức năng của hàm. Để sử dụng một hàm, bạn sẽ phải gọi hàm đó để thực hiện tác vụ được xác định.</p>\n\n<p>Khi một chương trình gọi một hàm, điều khiển chương trình được chuyển đến hàm được gọi. Một hàm được gọi thực hiện một nhiệm vụ đã định nghĩa và khi câu lệnh trả về của nó được thực hiện hoặc khi nó kết thúc bằng hàm đóng, nó sẽ trả về chương trình điều khiển quay trở lại chương trình chính.</p>\n\n<p>Để gọi một hàm, bạn chỉ cần chuyển các tham số bắt buộc cùng với tên hàm và nếu hàm trả về một giá trị, thì bạn có thể lưu trữ giá trị trả về. Ví dụ:</p>\n\n<div>\n<div>\n<div id=\"highlighter_48588\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n  \n<span class=\"hljs-comment\">/* khai bao ham */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> num1, <span class=\"hljs-keyword\">int</span> num2)</span></span>;\n  \n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span> <span class=\"hljs-params\">()</span> </span>{\n\n   <span class=\"hljs-comment\">/* dinh nghia bien local */</span>\n   <span class=\"hljs-keyword\">int</span> a = <span class=\"hljs-number\">100</span>;\n   <span class=\"hljs-keyword\">int</span> b = <span class=\"hljs-number\">200</span>;\n   <span class=\"hljs-keyword\">int</span> ret;\n  \n   <span class=\"hljs-comment\">/* goi mot ham de lay gia tri lon nhat */</span>\n   ret = max(a, b);\n  \n   <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Max value is: \"</span> &lt;&lt; ret &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n  \n   <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n  \n<span class=\"hljs-comment\">/* ham tra ve gia tri lon nhat giua hai so */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> num1, <span class=\"hljs-keyword\">int</span> num2)</span> </span>{\n\n   <span class=\"hljs-comment\">/* dinh nghia bien local */</span>\n   <span class=\"hljs-keyword\">int</span> result;\n  \n   <span class=\"hljs-keyword\">if</span> (num1 &gt; num2)\n      result = num1;\n   <span class=\"hljs-keyword\">else</span>\n      result = num2;\n  \n   <span class=\"hljs-keyword\">return</span> result;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">Max value is : <span class=\"hljs-number\">200</span></code></pre>\n</div>\n</div>\n\n<div id=\"7\">\n<h2>7. Các đối số của hàm trong C++</h2>\n</div>\n\n<p>Nếu một hàm sử dụng các đối số, nó phải khai báo các biến chấp nhận các giá trị của các đối số. Các biến này được gọi là các tham số chính thức của hàm.</p>\n\n<p>Các tham số chính thức hoạt động giống như các biến địa phương (local) khác bên trong hàm và được tạo khi nhập vào hàm và bị hủy khi thoát.</p>\n\n<p>Trong khi gọi một hàm, có hai cách trong đó các đối số có thể được chuyển đến một hàm:</p>\n\n<table border=\"1\" cellpadding=\"10\" cellspacing=\"10\" style=\"width:100%;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>No.</th>\n\t\t\t<th>Kiểu gọi &amp; mô tả</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t<td>\n\t\t\t<p><strong>Call by value</strong></p>\n\n\t\t\t<p>Phương thức này sao chép giá trị thực của một đối số vào tham số chính thức của hàm. Trong trường hợp này, các thay đổi được thực hiện cho tham số bên trong hàm không ảnh hưởng đến đối số.</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td><strong>Call by reference</strong>\n\t\t\t<p>Phương thức này sao chép địa chỉ của một đối số vào tham số chính thức. Bên trong hàm, địa chỉ được sử dụng để truy cập đối số thực tế được sử dụng trong cuộc gọi. Điều này có nghĩa là các thay đổi được thực hiện cho tham số ảnh hưởng đến đối số.</p>\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>Theo mặc định, C++ sử dụng&nbsp;call by value&nbsp;để chuyển đối số. Nói chung, nó có nghĩa là mã trong một hàm không thể thay đổi các đối số được sử dụng để gọi hàm.<br>\nTrên đây là bài viết của eLib.VN về&nbsp;Hàm trong C++. Hàm là một kiến thức quan trọng, chúng tôi hy vọng bạn đọc nghiên cứu và thực hành thật nhiều phần này để nắm rõ hơn về Hàm.</p>\n\n<div class=\"quiz\" style=\"background-color: rgb(250, 239, 195); padding:10px\">\n<p><span style=\"background-color: rgb(250, 239, 195);\">Như vậy là chúng ta đã hoàn thành nội dung&nbsp;<strong>\"C++ Function</strong></span><strong style=\"background-color: rgb(250, 239, 195);\"><strong>\"</strong></strong><span style=\"background-color: rgb(250, 239, 195);\">. Để củng cố và nắm vững nội dung đã học, mời bạn cùng thử sức với&nbsp;</span><a href=\"https://tracnghiem.net/cntt/400-cau-hoi-trac-nghiem-lap-trinh-c-c-co-dap-an-va-loi-giai-chi-tiet-107.html\" style=\"background-color: rgb(250, 239, 195);\"><strong>\"Bộ Câu hỏi</strong></a><a href=\"https://tracnghiem.net/cntt/400-cau-hoi-trac-nghiem-lap-trinh-c-c-co-dap-an-va-loi-giai-chi-tiet-107.html\" style=\"background-color: rgb(250, 239, 195);\">&nbsp;</a><strong style=\"background-color: rgb(250, 239, 195);\"><a href=\"https://tracnghiem.net/cntt/400-cau-hoi-trac-nghiem-lap-trinh-c-c-co-dap-an-va-loi-giai-chi-tiet-107.html\">Trắc Nghiệm C++ có đáp án chi tiết\"</a></strong></p>\n\n<p style=\"text-align:center\"><a class=\"btn btn-tracnghiem\" href=\"https://tracnghiem.net/cntt/400-cau-hoi-trac-nghiem-lap-trinh-c-c-co-dap-an-va-loi-giai-chi-tiet-107.html\" target=\"_blank\"><span>Trắc Nghiệm</span></a></p>\n</div>\n\n\n\n\n\n\n\n\n\n              "
}