{
    "title": "Từ khóa static trong C++",
    "desicription": "Static trong c++ là dữ liệu của lớp không phải là dữ liệu của đối tượng. Static trong c++ tồn tại như một biến toàn cục. Hay nói cách khác dữ liệu static xuất hiện trước khi bạn khởi tạo đối tượng của lớp, và nó chỉ tồn tại duy nhất.",
    "img": "https://www.elib.vn/images/doc/2020/20201028//thumb/600x254/tu-khoa-static-trong-c-909.jpg",
    "content": "\n              <div id=\"1\">\n<h2>1. Từ khóa static</h2>\n</div>\n\n<p>Chúng ta có thể định nghĩa các thành viên lớp là&nbsp;static&nbsp;bởi sử dụng&nbsp;từ khóa static trong C++. Khi chúng ta khai báo một thành viên của một lớp là static, khi đó dù cho có bao nhiêu đối tượng của lớp được tạo, thì sẽ chỉ có một bản sao của thành viên static.</p>\n\n<p>Một thành viên static chỉ cần khởi tạo 1 lần và được chia sẻ cho tất cả đối tượng của lớp. Tất cả dữ liệu static được khởi tạo về 0 khi đối tượng đầu tiên được tạo. Chúng ta không thể khởi tạo thành viên static trong định nghĩa lớp, nhưng nó có thể được định nghĩa bên ngoài lớp đó bởi việc khai báo lại biến static như trong ví dụ sau, sử dụng&nbsp;toán tử phân giải phạm vi ::&nbsp;để nhận diện lớp nào sở hữu nó.</p>\n\n<div id=\"2\">\n<h2 id=\"goto-h2-1\">2. Lợi thế của từ khóa static trong C++</h2>\n</div>\n\n<p>Bộ nhớ hiệu quả: Bây giờ chúng ta không cần tạo cá thể để truy cập các thành viên static, vì vậy nó sẽ tiết kiệm bộ nhớ. Nó sẽ không nhận được bộ nhớ mỗi khi thể hiện được tạo.</p>\n\n<div id=\"3\">\n<h2 id=\"goto-h2-2\">3. Biến static trong C++</h2>\n</div>\n\n<p>Một biến được khai báo là static được gọi là biến static. Không giống như biến instance nhận bộ nhớ mỗi lần bạn tạo đối tượng, chỉ có một bản sao của biến static được tạo trong bộ nhớ. Nó được chia sẻ cho tất cả các đối tượng.</p>\n\n<div id=\"4\">\n<h2 id=\"goto-h2-3\">4. Ví dụ sử dụng từ khóa static trong C++</h2>\n</div>\n\n<p>Hãy xem ví dụ đơn giản sau để hiểu hơn về từ khóa static trong C++:</p>\n\n<p>Ví dụ 1: ví dụ sau là một lớp tài khoản ngân hàng, chúng ta muốn tất cả các đối tượng tài khoản được tạo ra đều có một tỉ lệ lãi suất (rateOfInterest) giống nhau.</p>\n\n<div>\n<div>\n<div id=\"highlighter_684554\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Account</span> {</span>\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-keyword\">int</span> accNo; <span class=\"hljs-comment\">//data member (bien instance)</span>\n    <span class=\"hljs-built_in\">string</span> name; <span class=\"hljs-comment\">//data member(bien instance)</span>\n    <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">float</span> rateOfInterest;\n    Account(<span class=\"hljs-keyword\">int</span> accNo, <span class=\"hljs-built_in\">string</span> name) {\n        <span class=\"hljs-keyword\">this</span>-&gt;accNo = accNo;\n        <span class=\"hljs-keyword\">this</span>-&gt;name = name;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">display</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; accNo &lt;&lt; <span class=\"hljs-string\">\" \"</span> &lt;&lt; name &lt;&lt; <span class=\"hljs-string\">\" \"</span> &lt;&lt; rateOfInterest &lt;&lt; <span class=\"hljs-built_in\">endl</span>;  \n    }\n};\n\n<span class=\"hljs-keyword\">float</span> Account::rateOfInterest = <span class=\"hljs-number\">6.8</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span>)</span>\n</span>{\n    Account a1 = Account(<span class=\"hljs-number\">201</span>, <span class=\"hljs-string\">\"Phan Van Vinh\"</span>); <span class=\"hljs-comment\">//tao doi tuong Account</span>\n    Account a2 = Account(<span class=\"hljs-number\">202</span>, <span class=\"hljs-string\">\"Dao Van Hoa\"</span>); <span class=\"hljs-comment\">//tao doi tuong Account</span>\n    a1.display();\n    a2.display();\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-number\">201</span> Phan Van Vinh <span class=\"hljs-number\">6.8</span>\n<span class=\"hljs-number\">202</span> Dao Van Hoa <span class=\"hljs-number\">6.8</span></code></pre>\n</div>\n\n<p>Ví dụ 2: Đếm các đối tượng được tạo ra.</p>\n\n<div>\n<div>\n<div id=\"highlighter_107198\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Account</span> {</span>\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-keyword\">int</span> accno; <span class=\"hljs-comment\">//data member (bien instance)</span>\n    <span class=\"hljs-built_in\">string</span> name;\n    <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">int</span> count;\n    Account(<span class=\"hljs-keyword\">int</span> accno, <span class=\"hljs-built_in\">string</span> name) {\n        <span class=\"hljs-keyword\">this</span>-&gt;accno = accno;\n        <span class=\"hljs-keyword\">this</span>-&gt;name = name;\n        count++;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">display</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; accno &lt;&lt; <span class=\"hljs-string\">\" \"</span> &lt;&lt; name &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    }\n};\n\n<span class=\"hljs-keyword\">int</span> Account::count = <span class=\"hljs-number\">0</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span>)</span> </span>{\n    Account a1 = Account(<span class=\"hljs-number\">201</span>, <span class=\"hljs-string\">\"Phan Van Vinh\"</span>); <span class=\"hljs-comment\">//tao doi tuong Account</span>\n    Account a2 = Account(<span class=\"hljs-number\">202</span>, <span class=\"hljs-string\">\"Dao Van Hoa\"</span>); <span class=\"hljs-comment\">//tao doi tuong Account</span>\n    Account a3 = Account(<span class=\"hljs-number\">203</span>, <span class=\"hljs-string\">\"Tran Van Phu\"</span>); <span class=\"hljs-comment\">//tao doi tuong Account</span>\n    a1.display();\n    a2.display();\n    a3.display();\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Tong cac doi tuong la: \"</span> &lt;&lt; Account::count;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-number\">201</span> Phan Van Vinh\n<span class=\"hljs-number\">202</span> Dao Van Hoa\n<span class=\"hljs-number\">203</span> Tran Van Phu\nTong cac doi tuong la: <span class=\"hljs-number\">3</span></code></pre>\n</div>\n\n<p>Trên đây là bài viết của eLib.VN về&nbsp;Từ khóa static trong C++. Khi được sử dụng trong phạm vi toàn cục của 1 đơn vị biên dịch, static hạn chế truy cập từ các đơn vị biên dịch khác (áp dụng với cả hàm và biến toàn cục). Khi được sự dụng trong phạm vi cục bộ của 1 thủ tục hay hàm, static có nghĩa là biến được khai báo tồn tại trong suốt thời gian chạy của chương trình và chỉ được khởi tạo 1 lần duy nhất.</p>\n\n\n\n\n\n\n\n\n\n              "
}