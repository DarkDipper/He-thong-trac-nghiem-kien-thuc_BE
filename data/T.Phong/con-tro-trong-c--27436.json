{
    "chapter": "C++ Poiter",
    "title": "Con trỏ trong C++",
    "desicription": "Trong bài viết dưới đây, chúng ta sẽ tìm hiểu tất cả mọi thứ về con trỏ. Bạn sẽ được học cách giá trị được lưu trong máy tính và cách truy xuất chúng dựa vào con trỏ. Cùng theo dõi nhé!",
    "img": "https://www.elib.vn/images/doc/2020/20201028//thumb/600x254/con-tro-trong-c-862.jpg",
    "content": "\n              <div id=\"1\">\n<h2>1. Giới thiệu về con trỏ trong C++</h2>\n</div>\n\n<p>[Con trỏ - Pointer]&nbsp;Con trỏ trong C++ tuy khó học nhưng khá thú vị. Một vài tác vụ trong ngôn ngữ C++ được thực hiện dễ dàng và linh hoạt hơn nhờ con trỏ, như trong việc cấp phát bộ nhớ, không thể thực hiện mà không dùng con trỏ. Do đó việc nắm vững con trỏ là cần thiết khi học C++ để trở thành lập trình viên cứng.</p>\n\n<p>Như bạn biết, mỗi biến trong một vùng nhớ nhất định và mỗi vùng nhớ này có địa chỉ có nó được định nghĩa để dễ dàng trong việc truy cập sử dụng toán tử (&amp;) tương ứng với địa chỉ của nó trong bộ nhớ. Xem xét ví dụ dưới đây, sẽ in ra địa chỉ của biến được định nghĩa:</p>\n\n<div>\n<div>\n<div id=\"highlighter_131548\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span> <span class=\"hljs-params\">()</span>\n</span>{\n   <span class=\"hljs-keyword\">int</span>  bien1;\n   <span class=\"hljs-keyword\">char</span> bien2[<span class=\"hljs-number\">10</span>];\n\n   <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Dia chi cua bien1 la: \"</span>;\n   <span class=\"hljs-built_in\">cout</span> &lt;&lt; &amp;bien1 &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n\n   <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Dia chi cua bien2 la: \"</span>;\n   <span class=\"hljs-built_in\">cout</span> &lt;&lt; &amp;bien2 &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n\n   <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n\n<div>Kết quả:</div>\n</div>\n</div>\n</div>\n\n<div>\n<pre><code class=\"language-cpp hljs\">Dia chi cua bien1 la: <span class=\"hljs-number\">0x6ffe4c</span>\nDia chi cua bien2 la: <span class=\"hljs-number\">0x6ffe40</span></code></pre>\n\n<div id=\"2\">\n<h2 id=\"goto-h2-1\">2. Con trỏ là gì?</h2>\n</div>\n\n<p>Một con trỏ là một biến mà trong đó giá trị của nó là địa chỉ của biến khác. Ví dụ như địa chỉ của vùng nhớ. Giống như các biến và hằng số, bạn phải khai báo con trỏ trước khi bạn có thể sử dụng nó để lưu trữ bất kì địa chỉ của biến nào. Dạng tổng quát của việc khai báo con trỏ như sau:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">kieu_du_lieu *ten_bien;\n</code></pre>\n</div>\n</div>\n\n<p>Trong đó,&nbsp;kieu_du_lieu&nbsp;là kiểu dữ liệu cơ bản con trỏ, nó là kiểu hợp lệ trong ngôn ngữ C++ và&nbsp;ten_bien&nbsp;là tên giá trị của con trỏ. Phần ký tự * sử dụng trong khai báo con trỏ giống như việc bạn sử dụng cho phép nhân. Mặc dù vậy, trong khai báo này, ký tự * được thiết kế để sử dụng các biến của con trỏ. Dưới đây là một số cách khai báo hợp lệ của con trỏ:</p>\n\n<div>\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">int</span>    *ip;    <span class=\"hljs-comment\">// trỏ tới một số int</span>\n<span class=\"hljs-keyword\">double</span> *dp;    <span class=\"hljs-comment\">// trỏ tới một số double</span>\n<span class=\"hljs-keyword\">float</span>  *fp;    <span class=\"hljs-comment\">// trỏ tới một số float</span>\n<span class=\"hljs-keyword\">char</span>   *ch     <span class=\"hljs-comment\">// trở tới một ký tự</span></code></pre>\n</div>\n</div>\n\n<p>Kiểu dữ liệu thực sự của giá trị của tất cả các con trỏ, có thể là integer, float, character, hoặc kiểu khác, là giống như, một số long hexa biểu diễn một địa chỉ bộ nhớ. Điểm khác nhau duy nhất của các con trỏ của các kiểu dữ liệu khác nhau là kiểu dữ liệu của biến hoặc hằng số mà con trỏ chỉ tới.</p>\n\n<div>\n<div id=\"3\">\n<h2 id=\"goto-h2-2\">3. Cách sử dụng con trỏ trong C++</h2>\n</div>\n\n<p>Con trỏ được sử dụng theo hai cách:</p>\n\n<ul>\n\t<li>Dùng con trỏ để lưu địa chỉ của biến để thao tác.</li>\n\t<li>Lấy giá trị của biến do con trỏ trỏ đến để thao tác.</li>\n</ul>\n\n<p>Dùng con trỏ để lưu địa chỉ của biến</p>\n\n<p>Bản thân con trỏ sẽ được trỏ vào địa chỉ của một biến có cùng kiểu dữ liệu với nó. Cú pháp của phép gán như sau:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">&lt;ten_con_tro&gt; = &amp;&lt;ten_bien&gt;;</code></pre>\n</div>\n</div>\n\n<p>Trong phép toán này, tên con trỏ không có dấu “*”. Ví dụ:</p>\n\n<div>\n<div>\n<div>\n<div id=\"highlighter_402419\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">int</span> x, *ip;\nip = &amp;x;</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<p>con trỏ px có kiểu int trỏ vào địa chỉ của biến x có kiểu nguyên. Phép toán &amp;&lt;ten_bien&gt; sẽ cho địa chỉ của biến tương ứng.</p>\n\n<div>\n<p>Lấy giá trị của biến do con trỏ trỏ đến</p>\n\n<p>Phép lấy giá trị của biến do con trỏ trỏ đến được thực hiện bằng cách gọi tên:</p>\n\n<div>\n<div>\n<div id=\"highlighter_218938\">\n<div>\n<pre><code class=\"language-cpp hljs\">*&lt;ten_con_tro&gt;;\n</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<p>Trong phép toán này, phải có dấu con trỏ “*”. Nếu không có dấu con trỏ, sẽ trở thành phép lấy địa chỉ của biến do con trỏ trỏ tới. Ví dụ:</p>\n\n<div>\n<div>\n<div>\n<div id=\"highlighter_621894\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">int</span> x = <span class=\"hljs-number\">12</span>, y, *ip;\nip = &amp;y;\n*px = x;</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<p>Quá trình trên diễn ra như sau:</p>\n\n<div><img alt=\"Sử dụng con trỏ trong C++\" src=\"https://s.elib.vn/images/fckeditor/upload/2020/20201028/images/cach-su-dung-con-tro-trong-c-_1603848351.png\" title=\"Sử dụng con trỏ trong C++\"><p class=\"notepic\">Sử dụng con trỏ trong C++</p>\n<p>Dưới đây là cách sử dụng những phép toán trên:</p>\n\n<div>\n<div>\n<div id=\"highlighter_383905\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span> <span class=\"hljs-params\">()</span> </span>{\n   <span class=\"hljs-keyword\">int</span>  x = <span class=\"hljs-number\">20</span>, y;    <span class=\"hljs-comment\">// khai bao bien binh thuong</span>\n   <span class=\"hljs-keyword\">int</span>  *ip;          <span class=\"hljs-comment\">// bien con tro</span>\n    \n   ip = &amp;y;\n   *ip = x;           <span class=\"hljs-comment\">// dia chi luu tru cua bien con tro</span>\n\n   <span class=\"hljs-comment\">// in dia chi luu tru cua bien con tro ip</span>\n   <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Dia chi luu tru cua bien con tro ip: \"</span>;\n   <span class=\"hljs-built_in\">cout</span> &lt;&lt; ip &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n\n   <span class=\"hljs-comment\">// gia tri cua dia chi o nho cua con tro</span>\n   <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Gia tri cua bien *ip: \"</span>;\n   <span class=\"hljs-built_in\">cout</span> &lt;&lt; *ip &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    \n   <span class=\"hljs-comment\">// gia tri cua bien x</span>\n   <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Gia tri cua bien x: \"</span>;\n   <span class=\"hljs-built_in\">cout</span> &lt;&lt; x &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n    \n   <span class=\"hljs-comment\">// gia tri cua bien y</span>\n   <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Gia tri cua bien y: \"</span>;\n   <span class=\"hljs-built_in\">cout</span> &lt;&lt; y &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n\n   <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">Dia chi luu tru cua bien con tro ip: <span class=\"hljs-number\">0x6ffe3c</span>\nGia tri cua bien *ip: <span class=\"hljs-number\">20</span>\nGia tri cua bien x: <span class=\"hljs-number\">20</span>\nGia tri cua bien y: <span class=\"hljs-number\">20</span></code></pre>\n</div>\n</div>\n\n<p><strong>Phép gán giữa các con trỏ</strong></p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">&lt;ten_con_tro_1&gt; = &lt;ten_con_tro_2&gt;</code></pre>\n\n<div>\n<div>Trong phép gán giữa các con trỏ, bắt buộc phải dùng phép lấy&nbsp;địa chỉ của biến&nbsp;do con trỏ trỏ tới (không có dấu “*” trong tên con trỏ) mà không được dùng phép lấy&nbsp;giá trị của biến&nbsp;do con trỏ trỏ tới.</div>\n</div>\n\n<p>Hai con trỏ phải cùng kiểu. Trong trường hợp hai con trỏ khác kiểu, phải sử dụng các phương thức ép kiểu tương tự như trong phép gán các biến thông thường có kiểu khác nhau.</p>\n\n<p>Ví dụ:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">int</span> x = <span class=\"hljs-number\">20</span>, *px, *py;\npx = &amp;x;\npy = px;</code></pre>\n</div>\n</div>\n\n<p>Quá trình diễn ra như sau:</p>\n\n<div><img alt=\"Sử dụng con trỏ trong C++\" src=\"https://s.elib.vn/images/fckeditor/upload/2020/20201028/images/phep-gan-giua-cac-con-tro_1603848351.png\" title=\"Sử dụng con trỏ trong C++\"><p class=\"notepic\">Sử dụng con trỏ trong C++</p>\n<p>con trỏ py cũng trỏ vào địa chỉ của biến x như con trỏ px. Khi đó *py cũng có giá trị 12 giống như *px và là giá trị của biến x.</p>\n\n<div id=\"4\">\n<h2 id=\"goto-h2-3\">4. Chi tiết về con trỏ trong C++</h2>\n</div>\n\n<p>Con trỏ có nhiều khái niệm nhưng cũng khá dễ để học và rất quan trọng trong lập trình ngôn ngữ C++. Dưới đây là những khái niệm quan trọng về con trỏ trong C /C++, được trình bày rõ ràng cho bạn, khi bạn click vào link tương ứng.</p>\n\n<table border=\"1\" cellpadding=\"10\" cellspacing=\"10\" style=\"width:100%;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>Khái niệm</th>\n\t\t\t<th>Mô tả</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<p>Con trỏ Null trong C++</p>\n\t\t\t</td>\n\t\t\t<td>Ngôn ngữ lập trình C++ hỗ trợ con trỏ null, là một hằng số với giá trị là 0 được định nghĩa trong một số thư viện chuẩn.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<p>Con trỏ số học trong C++</p>\n\t\t\t</td>\n\t\t\t<td>Có 4 toán tử số học mà có thể được sử dụng trên các con trỏ là: ++, --, +, -</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<p>Con trỏ và mảng trong C++</p>\n\t\t\t</td>\n\t\t\t<td>Mối liên hệ giữa con trỏ và mảng trong C++.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<p>Mảng con trỏ trong C++</p>\n\t\t\t</td>\n\t\t\t<td>Bạn có thể định nghĩa các mảng để lưu trữ các con trỏ.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<p>Con trỏ tới con trỏ trong C++</p>\n\t\t\t</td>\n\t\t\t<td>Ngôn ngữ lập trình C++ cho phép bạn trỏ tới một con trỏ ...</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<p>Truyền con trỏ tới hàm trong C++</p>\n\t\t\t</td>\n\t\t\t<td>Truyền một tham số bởi tham chiếu hoặc địa chỉ: cả hai cho các tham số được truyền khả năng có thể được thay đổi trong hàm gọi bởi hàm được gọi.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<p>Trả về con trỏ từ hàm trong C++</p>\n\t\t\t</td>\n\t\t\t<td>Ngôn ngữ lập trình C++ cho phép một hàm trả về một con trỏ tới biến địa phương (local), biến tĩnh và cũng như bộ nhớ được cấp phát động.</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>Trên đây là bài viết của eLib.VN về con trỏ trong C++.&nbsp;Như vậy con trỏ trong C++&nbsp;không quá khó đúng không nào các bạn. Chỉ cần chúng ta nghĩ đơn giản đó là&nbsp;bản chất của con trỏ cũng như các biến thông thường khác trong C++, chẳng qua giá trị của nó là địa chỉ của biến khác. Chúng ta có thể truy cập giá trị của biến mà con trỏ trỏ đến bằng cách sử dụng toán tử *</p>\n</div>\n\n\n\n\n\n\n\n\n\n              "
}