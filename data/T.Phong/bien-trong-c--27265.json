{
    "title": "Biến trong C++",
    "desicription": "C++ là một ngôn ngữ bậc trung nằm giữa bậc cao và bậc thấp, nó là ngôn ngữ có tính minh bạch, rõ ràng trong việc khai báo và sử dụng biến, nghĩa là nếu bạn khai báo một biến kiểu chuỗi thì bạn không thể gán cho nó là kiểu số được. Trong bài viết dưới đây, chúng ta sẽ tìm hiểu về biến và cách khai báo biến trong C++. Cùng theo dõi nhé!",
    "img": "https://www.elib.vn/images/doc/2020/20201026//thumb/600x254/bien-trong-c-288.jpg",
    "content": "\n              <p>Một&nbsp;biến trong C++&nbsp;là tên của vị trí bộ nhớ. Nó được sử dụng để lưu trữ dữ liệu. Giá trị của nó có thể được thay đổi và nó có thể được sử dụng lại nhiều lần. Mỗi biến trong C++ có một loại dữ liệu cụ thể, xác định kích thước của bộ nhớ của biến; phạm vi các giá trị có thể được lưu trữ trong bộ nhớ đó.</p>\n\n<p>Biến là một cách để thể hiện vị trí bộ nhớ thông qua một cái tên để nó có thể được xác định một cách dễ dàng. Tên của một biến có thể bao gồm các chữ cái, chữ số và ký tự gạch dưới. Nó phải bắt đầu bằng một chữ cái thư hoặc một gạch dưới. Biến trong C++ có&nbsp;phân biệt chữ hoa và chữ thường.</p>\n\n<div id=\"1\">\n<h2 id=\"goto-h2-1\">1. Cú pháp khai báo biến</h2>\n</div>\n\n<p>Cú pháp để khai báo một biến trong C:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">type variable_list;</code></pre>\n</div>\n\n<p>Ví dụ về khai báo biến:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">int</span> a;\n<span class=\"hljs-keyword\">float</span> b;\n<span class=\"hljs-keyword\">char</span> c;</code></pre>\n</div>\n\n<p>Ở đây, a, b, c là các biến và int, float, char là các kiểu dữ liệu.</p>\n\n<p>Chúng ta cũng có thể cung cấp giá trị trong khi khai báo các biến như được đưa ra dưới đây:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">int</span> a = <span class=\"hljs-number\">10</span>, b = <span class=\"hljs-number\">20</span>; <span class=\"hljs-comment\">// Khai báo 2 biến kiểu số nguyên</span>\n<span class=\"hljs-keyword\">float</span> = <span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">8</span>;\n<span class=\"hljs-keyword\">char</span> c = <span class=\"hljs-string\">'A'</span>;</code></pre>\n</div>\n\n<div id=\"2\">\n<h2>2. Quy tắc khai báo biến&nbsp;</h2>\n</div>\n\n<div id=\"2\">\n<p>Một số quy tắc cần biết khi khai báo biến</p>\n</div>\n\n<ul>\n\t<li>Một biến có thể có các chữ cái, chữ số và dấu gạch dưới.</li>\n\t<li>Tên biến chỉ có thể bắt đầu bằng bảng chữ cái và dấu gạch dưới. Nó không thể bắt đầu bằng chữ số.</li>\n\t<li>Không có khoảng trắng trong tên biến.</li>\n\t<li>Tên biến không phải là bất kỳ từ hoặc từ khóa dành riêng như int, float, vv.</li>\n</ul>\n\n<p>Tên biến hợp lệ:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">int</span> a;\n<span class=\"hljs-keyword\">int</span> _ab;\n<span class=\"hljs-keyword\">int</span> a30;</code></pre>\n</div>\n\n<p>Tên biến không hợp lệ:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-number\">2</span>;\n<span class=\"hljs-keyword\">int</span> a b;\n<span class=\"hljs-keyword\">int</span> <span class=\"hljs-keyword\">long</span>;\n</code></pre>\n</div>\n\n<div id=\"3\">\n<h2>3. Các kiểu biến trong C++</h2>\n</div>\n\n<p>Có một vài kiểu biến trong C++ như sau:</p>\n\n<p><strong>Biến local (địa phương)</strong></p>\n\n<p>Một biến được khai báo bên trong hàm hoặc khối lệnh được gọi là biến địa phương.</p>\n\n<p>Nó phải được khai báo khi bắt đầu khối.</p>\n\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">function1</span><span class=\"hljs-params\">()</span> </span>{\n  <span class=\"hljs-keyword\">int</span> x = <span class=\"hljs-number\">10</span>; <span class=\"hljs-comment\">// bien local</span>\n}</code></pre>\n\n<p><strong>Biến global (toàn cầu)</strong></p>\n\n<p>Một biến được khai báo bên ngoài hàm hoặc khối lệnh được gọi là biến toàn cầu. Bất kỳ hàm nào cũng có thể thay đổi giá trị của biến toàn cầu. Nó có sẵn cho tất cả các chức năng.</p>\n\n<p>Trong ví dụ dưới đây, biến a là biến global.</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">int</span> a = <span class=\"hljs-number\">20</span>; <span class=\"hljs-comment\">// bien global</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">function1</span><span class=\"hljs-params\">()</span> </span>{\n  <span class=\"hljs-keyword\">int</span> x = <span class=\"hljs-number\">10</span>; <span class=\"hljs-comment\">// bien local</span>\n}</code></pre>\n</div>\n\n<p><strong>Biến static (tĩnh)</strong></p>\n\n<p>Một biến được khai báo với từ khóa&nbsp;static&nbsp;được gọi là biến tĩnh.</p>\n\n<p>Nó giữ lại giá trị của nó sau nhiều lần gọi hàm.</p>\n\n<div>\n<div>\n<div id=\"highlighter_826049\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">function1</span><span class=\"hljs-params\">()</span> </span>{\n  <span class=\"hljs-keyword\">int</span> x = <span class=\"hljs-number\">10</span>; <span class=\"hljs-comment\">// bien local</span>\n  <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">int</span> y = <span class=\"hljs-number\">10</span>; <span class=\"hljs-comment\">// bien static</span>\n  x = x + <span class=\"hljs-number\">1</span>;\n  y = y + <span class=\"hljs-number\">1</span>;\n  <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"x = \"</span> &lt;&lt; x &lt;&lt; <span class=\"hljs-string\">\", y = \"</span> &lt;&lt; y &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n  function1();\n  function1();\n  function1();\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">x = <span class=\"hljs-number\">11</span>, y = <span class=\"hljs-number\">11</span>\nx = <span class=\"hljs-number\">11</span>, y = <span class=\"hljs-number\">12</span>\nx = <span class=\"hljs-number\">11</span>, y = <span class=\"hljs-number\">13</span></code></pre>\n</div>\n\n<p>Hàm function1() được gọi 3 lần,&nbsp;biến địa phương x sẽ in cùng một giá trị&nbsp;cho mỗi lệnh chức năng gọi là 11, 11, 11. Nhưng&nbsp;biến tĩnh sẽ in giá trị được tăng lên 1&nbsp;trong mỗi lần gọi hàm là 11, 12, 13.</p>\n\n<p id=\"goto-h3-4\"><strong>Biến automatic (tự động)</strong></p>\n\n<p>Tất cả các biến trong C được khai báo trong khối lệnh, là các biến tự động theo mặc định. Bởi chúng ta có thể khai báo một cách rõ ràng biến tự động bằng cách sử dụng&nbsp;từ khóa auto.</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n  <span class=\"hljs-keyword\">int</span> x = <span class=\"hljs-number\">10</span>; <span class=\"hljs-comment\">// bien local (cung la bien automatic)</span>\n  <span class=\"hljs-keyword\">auto</span> <span class=\"hljs-keyword\">int</span> y = <span class=\"hljs-number\">20</span>; <span class=\"hljs-comment\">// bien automatic</span>\n}</code></pre>\n</div>\n\n<p><strong>Biến external</strong></p>\n\n<p>Chúng ta có thể chia sẻ một biến trong nhiều tập tin mã nguồn C bằng cách sử dụng biến external. Để khai báo biến bên ngoài, bạn cần sử dụng từ khóa extern</p>\n\n<p>File: myfile.h</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">extern</span> <span class=\"hljs-keyword\">int</span> x = <span class=\"hljs-number\">10</span>; <span class=\"hljs-comment\">// bien external variable (cung la bien global)</span>\n</code></pre>\n</div>\n\n<p>File: test.cpp</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"myfile.h\"</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">printValue</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"x: \"</span> &lt;&lt; x;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    printValue();\n}</code></pre>\n</div>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">x: <span class=\"hljs-number\">10</span></code></pre>\n</div>\n\n<p>Trên đây là bài viết của eLib.VN về&nbsp;Biến trong C++.&nbsp;Hy vọng qua bài này bạn sẽ hiểu và vận dụng trong quá trình học tập và làm việc với C++. Chúc các bạn thành công!</p>\n\n\n\n\n\n\n\n\n\n              "
}