{
    "chapter": "Nạp Chồng Toán Tử",
    "title": "Nạp chồng toán tử truy cập thành viên lớp (->) trong C++",
    "desicription": "Nạp chồng toán tử truy cập thành viên lớp (->) trong C++ là gì? Hoạt động như thế nào? Cú pháp ra sao? Mời bạn đọc cùng tham khảo bài viết dưới đây của eLib.VN để hiểu rõ hơn về nạp chồng toán tử truy cập thành viên lớp (->) nhé!",
    "img": "https://www.elib.vn/images/doc/2020/20201029//thumb/600x254/nap-chong-toan-tu-truy-cap-thanh-vien-lop-trong-c-469.jpg",
    "content": "\n              <div id=\"1\">\n<h2 id=\"goto-h2-1\">1. Nạp chồng toán tử truy cập thành viên lớp (-&gt;) trong C++</h2>\n</div>\n\n<p>Toán tử truy cập thành viên lớp (-&gt;) có thể được nạp chồng, nhưng nó khá là phức tạp. Nó được định nghĩa để cung cấp một kiểu lớp một hành vi \"pointer-like\". Toán tử -&gt; phải là một hàm thành viên. Nếu được sử dụng, kiểu trả về của nó phải là một con trỏ hoặc một đối tượng của một lớp để bạn có thể áp dụng.</p>\n\n<p>Toán tử -&gt; thường được sử dụng kết hợp với toán tử * để triển khai \"smart pointer\". Những con trỏ này là các đối tượng mà vận hành như các con trỏ thông thường, ngoại trừ việc chúng thực hiện các tác vụ khi bạn truy cập một đối tượng thông qua chúng, ví dụ: xóa đối tượng tự động hoặc khi con trỏ bị hủy hoặc khi con trỏ được sử dụng để trỏ tới đối tượng khác.</p>\n\n<p>Toán tử -&gt; có thể được định nghĩa như là một toán tử hậu tố một ngôi.</p>\n\n<div>\n<div>\n<div id=\"highlighter_289778\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Ptr</span>{</span>\n   <span class=\"hljs-comment\">//...</span>\n   X * <span class=\"hljs-keyword\">operator</span>-&gt;();\n};</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Các đối tượng của lớp&nbsp;Ptr&nbsp;có thể được sử dụng để truy cập các thành viên của lớp&nbsp;X&nbsp;ở trên theo phương thức giống như cách các con trỏ được sử dụng. Ví dụ:</p>\n\n<div>\n<div>\n<div id=\"highlighter_338012\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">f</span><span class=\"hljs-params\">(Ptr p )</span>\n</span>{\n   p-&gt;m = <span class=\"hljs-number\">10</span> ; <span class=\"hljs-comment\">// la tuong tu (p.operator-&gt;())-&gt;m = 10</span>\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Lệnh p-&gt;m được thông dịch thành (p.operator-&gt;())-&gt;m.</p>\n\n<div id=\"2\">\n<h2 id=\"goto-h2-2\">2. Ví dụ Nạp chồng toán tử truy cập thành viên lớp (-&gt;) trong C++</h2>\n</div>\n\n<p>Sử dụng cùng khái niệm trên, ví dụ sau sẽ giải thích cách một toán tử truy cập lớp -&gt; trong C++ có thể được nạp chồng.</p>\n\n<div>\n<div>\n<div id=\"highlighter_709699\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;vector&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-comment\">// gia su co mot lop eLib sau.</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">eLib</span> {</span>\n    <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">int</span> i, j;\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-comment\">// cac smart pointer de hien thi</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">f</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">const</span> </span>{ <span class=\"hljs-built_in\">cout</span> &lt;&lt; i++ &lt;&lt; <span class=\"hljs-built_in\">endl</span>; }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">g</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">const</span> </span>{ <span class=\"hljs-built_in\">cout</span> &lt;&lt; j++ &lt;&lt; <span class=\"hljs-built_in\">endl</span>; }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">h</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">const</span> </span>{ <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"--------\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>; }\n};<span class=\"hljs-comment\">// phan dinh nghia cac thanh vien Static:</span>\n\n<span class=\"hljs-keyword\">int</span> eLib::i = <span class=\"hljs-number\">5</span>;\n<span class=\"hljs-keyword\">int</span> eLib::j = <span class=\"hljs-number\">20</span>;\n\n<span class=\"hljs-comment\">// Trien khai mot container cho lop tren</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">VTContainer</span> {</span>\n    <span class=\"hljs-built_in\">vector</span>&lt;eLib*&gt; a;\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">add</span><span class=\"hljs-params\">(eLib* vj)</span>\n    </span>{\n        a.push_back(vj);  <span class=\"hljs-comment\">// goi phuong thuc chuan cua vector.</span>\n    }\n    <span class=\"hljs-keyword\">friend</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SmartPointer</span>;</span>\n};\n\n<span class=\"hljs-comment\">// trien khai smart pointer de truy cap thanh vien cua lop eLib.</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SmartPointer</span> {</span>\n    VTContainer vc;\n    <span class=\"hljs-keyword\">int</span> index;\n<span class=\"hljs-keyword\">public</span>:\n    SmartPointer(VTContainer&amp; vjc)\n    {\n        vc = vjc;\n        index = <span class=\"hljs-number\">0</span>;\n    }\n    <span class=\"hljs-comment\">// tra ve gia tri de chi phan cuoi cua danh sach:</span>\n    <span class=\"hljs-keyword\">bool</span> <span class=\"hljs-keyword\">operator</span>++() <span class=\"hljs-comment\">// phien ban toan tu ++ (tien to)</span>\n    {\n        <span class=\"hljs-keyword\">if</span> (index &gt;= vc.a.size()) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n        <span class=\"hljs-keyword\">if</span> (vc.a[++index] == <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n    }\n    <span class=\"hljs-keyword\">bool</span> <span class=\"hljs-keyword\">operator</span>++(<span class=\"hljs-keyword\">int</span>) <span class=\"hljs-comment\">// phien ban toan tu ++ (hau to)</span>\n    {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">operator</span>++();\n    }\n    <span class=\"hljs-comment\">// nap chong operator-&gt;</span>\n    eLib* <span class=\"hljs-keyword\">operator</span>-&gt;() <span class=\"hljs-keyword\">const</span>\n    {\n        <span class=\"hljs-keyword\">if</span> (!vc.a[index])\n        {\n            <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Gia tri 0!!\"</span>;\n            <span class=\"hljs-keyword\">return</span> (eLib*)<span class=\"hljs-number\">0</span>;\n        }\n        <span class=\"hljs-keyword\">return</span> vc.a[index];\n    }\n};<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-comment\">// so vong lap la 5 (ban thiet lap gia tri khac de xem ket qua)</span>\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">int</span> sz = <span class=\"hljs-number\">5</span>;\n    eLib o[sz];\n    VTContainer vc;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; sz; i++)\n    {\n        vc.add(&amp;o[i]);\n    }\n    <span class=\"hljs-function\">SmartPointer <span class=\"hljs-title\">sp</span><span class=\"hljs-params\">(vc)</span></span>; <span class=\"hljs-comment\">// tao mot iterator</span>\n    <span class=\"hljs-keyword\">do</span> {\n        sp-&gt;f(); <span class=\"hljs-comment\">// goi smart pointer</span>\n        sp-&gt;g();\n        sp-&gt;h();\n    } <span class=\"hljs-keyword\">while</span> (sp++);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Biên dịch và chạy chương trình C++ trên sẽ cho kết quả sau:</p>\n\n<p style=\"text-align: center;\"><img alt=\"Nạp chồng toán tử truy cập thành viên lớp (->) trong C++\" src=\"https://s.elib.vn/images/fckeditor/upload/2020/20201112/images/nap-chong-toan-tu_1605173567.png\" style=\"text-align: center;\"><p class=\"notepic\">Nạp chồng toán tử truy cập thành viên lớp (-&gt;) trong C++</p></p>\n\n<p>Trên đây là bài viết của eLib.VN về&nbsp;Nạp chồng toán tử truy cập thành viên lớp (-&gt;) trong C++.&nbsp;Hy vọng qua bài này bạn sẽ hiểu và vận dụng trong quá trình học tập và làm việc với C++. Chúc các bạn thành công!</p>\n\n<div class=\"quiz\" style=\"background-color: rgb(250, 239, 195); padding:10px\">\n<p>C<span style=\"background-color: rgb(250, 239, 195);\">Như vậy là chúng ta đã hoàn thành nội dung&nbsp;<strong>\"Nạp chồng toán tử trong C++&nbsp;</strong></span><strong style=\"background-color: rgb(250, 239, 195);\"><strong>\"</strong></strong><span style=\"background-color: rgb(250, 239, 195);\">. Để củng cố và nắm vững nội dung đã học, mời bạn cùng thử sức với&nbsp;</span><a href=\"https://tracnghiem.net/cntt/400-cau-hoi-trac-nghiem-lap-trinh-c-c-co-dap-an-va-loi-giai-chi-tiet-107.html\" style=\"background-color: rgb(250, 239, 195);\"><strong>\"Bộ Câu hỏi</strong></a><a href=\"https://tracnghiem.net/cntt/400-cau-hoi-trac-nghiem-lap-trinh-c-c-co-dap-an-va-loi-giai-chi-tiet-107.html\" style=\"background-color: rgb(250, 239, 195);\">&nbsp;</a><strong style=\"background-color: rgb(250, 239, 195);\"><a href=\"https://tracnghiem.net/cntt/400-cau-hoi-trac-nghiem-lap-trinh-c-c-co-dap-an-va-loi-giai-chi-tiet-107.html\">Trắc Nghiệm C++ có đáp án chi tiết\"</a></strong></p>\n\n<p style=\"text-align:center\"><a class=\"btn btn-tracnghiem\" href=\"https://tracnghiem.net/cntt/400-cau-hoi-trac-nghiem-lap-trinh-c-c-co-dap-an-va-loi-giai-chi-tiet-107.html\" target=\"_blank\"><span>Trắc Nghiệm</span></a></p>\n</div>\n\n\n\n\n\n\n\n\n\n              "
}