{
    "chapter": "C++ Lớp Object",
    "title": "Tính đa hình trong C++",
    "desicription": "Đa hình là một trong bốn tính chất đặc trưng của lập trình hướng đối tượng bên cạnh tính đóng gói, tính trừu tượng và tính kế thừa. Vậy thì đa hình là gì? Mời bạn đọc cùng eLib.VN tham khảo bài viết dưới đây để biết thêm về tính đa hình trong C++.",
    "img": "https://www.elib.vn/images/doc/2020/20201028//thumb/600x254/tinh-da-hinh-trong-c-742.jpg",
    "content": "\n              <div id=\"1\">\n<h2 id=\"goto-h2-1\">1. Tính đa hình trong C++</h2>\n</div>\n\n<p>Đa hình (polymorphism)&nbsp;nghĩa là có nhiều hình thái khác nhau. Tiêu biểu là, đa hình xuất hiện khi có một cấu trúc cấp bậc của các lớp và chúng là liên quan với nhau bởi tính kế thừa.</p>\n\n<p>Đa hình trong C++ nghĩa là một lời gọi tới một hàm thành viên sẽ làm cho một hàm khác để được thực thi phụ thuộc vào kiểu của đối tượng mà triệu hồi hàm đó.</p>\n\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-keyword\">int</span> dt = <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Hinh</span> {</span>\n<span class=\"hljs-keyword\">protected</span>:\n    <span class=\"hljs-keyword\">int</span> chieurong, chieudai;\n<span class=\"hljs-keyword\">public</span>:\n    Hinh(<span class=\"hljs-keyword\">int</span> a = <span class=\"hljs-number\">0</span>, <span class=\"hljs-keyword\">int</span> b = <span class=\"hljs-number\">0</span>)\n    {\n        chieurong = a;\n        chieudai = b;\n    }\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">dientich</span><span class=\"hljs-params\">()</span>\n    </span>{\n        dt = (chieurong * chieudai);\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Dien tich cua lop cha:\"</span> &lt;&lt; <span class=\"hljs-string\">\"???\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    }\n};\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">HinhChuNhat</span> :</span> <span class=\"hljs-keyword\">public</span> Hinh {\n<span class=\"hljs-keyword\">public</span>:\n    HinhChuNhat(<span class=\"hljs-keyword\">int</span> a = <span class=\"hljs-number\">0</span>, <span class=\"hljs-keyword\">int</span> b = <span class=\"hljs-number\">0</span>) :Hinh(a, b) { }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">dientich</span><span class=\"hljs-params\">()</span>\n    </span>{\n        dt = (chieurong * chieudai);\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Dien tich cua lop HinhChuNhat la: \"</span> &lt;&lt; dt &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    }\n};\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TamGiac</span> :</span> <span class=\"hljs-keyword\">public</span> Hinh {\n<span class=\"hljs-keyword\">public</span>:\n    TamGiac(<span class=\"hljs-keyword\">int</span> a = <span class=\"hljs-number\">0</span>, <span class=\"hljs-keyword\">int</span> b = <span class=\"hljs-number\">0</span>) :Hinh(a, b) { }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">dientich</span><span class=\"hljs-params\">()</span>\n    </span>{\n        dt = (chieurong * chieudai / <span class=\"hljs-number\">2</span>);\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Dien tich cua lop TamGiac la: \"</span> &lt;&lt; dt &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    }\n};\n\n<span class=\"hljs-comment\">// ham main cua chuong trinh</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>{\n    Hinh* hinh;\n    <span class=\"hljs-function\">HinhChuNhat <span class=\"hljs-title\">hcn</span><span class=\"hljs-params\">(<span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">6</span>)</span></span>;\n    <span class=\"hljs-function\">TamGiac <span class=\"hljs-title\">tg</span><span class=\"hljs-params\">(<span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>)</span></span>;\n    <span class=\"hljs-comment\">// luu giu dia chi cua HinhChuNhat</span>\n    hinh = &amp;hcn;\n    <span class=\"hljs-comment\">// goi dien tich cua hinh chu nhat.</span>\n    hinh-&gt;dientich();\n    <span class=\"hljs-comment\">// luu giu dia chi cua TamGiac</span>\n    hinh = &amp;tg;\n    <span class=\"hljs-comment\">// goi dien tich cua tam giac.</span>\n    hinh-&gt;dientich();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n\n<div>\n<div id=\"highlighter_368577\">\n<div>Biên dịch và chạy chương trình C++ trên sẽ cho kết quả sau:</div>\n</div>\n</div>\n\n<p><img alt=\"Tính đa hình trong C++\" src=\"https://s.elib.vn/images/fckeditor/upload/2020/20201028/images/tinh-da-hinh-trong-c-_1603877103.png\"><p class=\"notepic\">Tính đa hình trong C++</p></p>\n\n<p>Lý do cho output không chính xác đó là vì: lời gọi của hàm dientich() đang được thiết lập một lần bởi compiler như phiên bản được định nghĩa trong lớp cơ sở đó. Điều này gọi là&nbsp;static resolution (sự phân giải tĩnh)&nbsp;của lời gọi hàm, hoặc&nbsp;static linkage (sự liên hợp tĩnh)&nbsp;– lời gọi hàm được sửa trước khi chương trình được thực thi. Đôi khi nó cũng được gọi là&nbsp;early binding (hoặc static binding)&nbsp;bởi vì hàm dientich() được thiết lập trong khi biên dịch chương trình.</p>\n\n<p>Bây giờ, chúng ta sửa chương trình trên một chút và đặt trước dòng&nbsp;int dientich()&nbsp;trong lớp&nbsp;Hinh&nbsp;với từ khóa&nbsp;virtual, khi đó nó trông như sau:</p>\n\n<div>\n<div>\n<div id=\"highlighter_335558\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-keyword\">int</span> dt = <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Hinh</span> {</span>\n<span class=\"hljs-keyword\">protected</span>:\n    <span class=\"hljs-keyword\">int</span> chieurong, chieudai;\n<span class=\"hljs-keyword\">public</span>:\n    Hinh(<span class=\"hljs-keyword\">int</span> a = <span class=\"hljs-number\">0</span>, <span class=\"hljs-keyword\">int</span> b = <span class=\"hljs-number\">0</span>)\n    {\n        chieurong = a;\n        chieudai = b;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">virtual</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">dientich</span><span class=\"hljs-params\">()</span>\n    </span>{\n        dt = (chieurong * chieudai);\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Dien tich cua lop cha:\"</span> &lt;&lt; <span class=\"hljs-string\">\"???\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    }\n};\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">HinhChuNhat</span> :</span> <span class=\"hljs-keyword\">public</span> Hinh {\n<span class=\"hljs-keyword\">public</span>:\n    HinhChuNhat(<span class=\"hljs-keyword\">int</span> a = <span class=\"hljs-number\">0</span>, <span class=\"hljs-keyword\">int</span> b = <span class=\"hljs-number\">0</span>) :Hinh(a, b) { }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">dientich</span><span class=\"hljs-params\">()</span>\n    </span>{\n        dt = (chieurong * chieudai);\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Dien tich cua lop HinhChuNhat la: \"</span> &lt;&lt; dt &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    }\n};\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TamGiac</span> :</span> <span class=\"hljs-keyword\">public</span> Hinh {\n<span class=\"hljs-keyword\">public</span>:\n    TamGiac(<span class=\"hljs-keyword\">int</span> a = <span class=\"hljs-number\">0</span>, <span class=\"hljs-keyword\">int</span> b = <span class=\"hljs-number\">0</span>) :Hinh(a, b) { }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">dientich</span><span class=\"hljs-params\">()</span>\n    </span>{\n        dt = (chieurong * chieudai / <span class=\"hljs-number\">2</span>);\n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Dien tich cua lop TamGiac la: \"</span> &lt;&lt; dt &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    }\n};\n\n<span class=\"hljs-comment\">// ham main cua chuong trinh</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>{\n    Hinh* hinh;\n    <span class=\"hljs-function\">HinhChuNhat <span class=\"hljs-title\">hcn</span><span class=\"hljs-params\">(<span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">6</span>)</span></span>;\n    <span class=\"hljs-function\">TamGiac <span class=\"hljs-title\">tg</span><span class=\"hljs-params\">(<span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>)</span></span>;\n    <span class=\"hljs-comment\">// luu giu dia chi cua HinhChuNhat</span>\n    hinh = &amp;hcn;\n    <span class=\"hljs-comment\">// goi dien tich cua hinh chu nhat.</span>\n    hinh-&gt;dientich();\n    <span class=\"hljs-comment\">// luu giu dia chi cua TamGiac</span>\n    hinh = &amp;tg;\n    <span class=\"hljs-comment\">// goi dien tich cua tam giac.</span>\n    hinh-&gt;dientich();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Sau khi sửa đổi, chạy lại chương trình C++ trên sẽ cho kết quả sau:</p>\n\n<p style=\"text-align: center;\"><img alt=\"\" src=\"https://s.elib.vn/images/fckeditor/upload/2020/20201028/images/tinh-da-hinh-trong-c-1_1603877103.png\" style=\"width: 500px; height: 89px;\"></p>\n\n<p>Lúc này, compiler nhìn vào các nội dung của con trỏ thay vì kiểu của nó. Vì thế, khi địa chỉ của các đối tượng của lớp&nbsp;hcn và tag&nbsp;được lưu giữ trong *hinh, thì hàm dientich() tương ứng được gọi.</p>\n\n<p>Như bạn có thể thấy, mỗi lớp con có một triển khai hàm dientich() riêng biệt. Đây là cách chung mà&nbsp;Đa hình&nbsp;trong C++ được sử dụng. Bạn có các lớp khác nhau với cùng một tên hàm, và có thể là cùng tham số, nhưng trình triển khai là khác nhau.</p>\n\n<div id=\"2\">\n<h2>2. Hàm virtual trong C++</h2>\n</div>\n\n<p>Một hàm&nbsp;virtual&nbsp;là một hàm trong một lớp cơ sở mà được khai báo bởi sử dụng từ khóa virtual trong C++. Việc định nghĩa trong một lớp cơ sở một hàm virtual, với phiên bản khác trong một lớp kế thừa, báo cho compiler rằng: chúng ta không muốn Static Linkage cho hàm này.</p>\n\n<p>Những gì chúng ta làm là muốn việc lựa chon hàm để được gọi tại bất kỳ điểm nào đã cung cấp trong chương trình là dựa trên kiểu đối tượng, mà với đó nó được gọi. Hoạt động này có thể gọi tắt là&nbsp;dynamic linkage, hoặc&nbsp;late binding&nbsp;trong C++.</p>\n\n<div id=\"3\">\n<h2 id=\"goto-h2-3\">3. Hàm pure virtual trong C++</h2>\n</div>\n\n<p>Nó là có thể nếu bạn muốn bao một hàm virtual trong một lớp cơ sở, để mà nó có thể được tái định nghĩa trong một lớp kế thừa để phù hợp với các đối tượng của lớp đó, nhưng đó là định nghĩa không có ý nghĩa gì.</p>\n\n<p>Chúng ta có thể thay đổi hàm virtual là dientich() trong lớp cơ sở thành như sau:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Hinh</span> {</span>\n   <span class=\"hljs-keyword\">protected</span>:\n      <span class=\"hljs-keyword\">int</span> chieurong, chieucao;\n   <span class=\"hljs-keyword\">public</span>:\n      Hinh( <span class=\"hljs-keyword\">int</span> a=<span class=\"hljs-number\">0</span>, <span class=\"hljs-keyword\">int</span> b=<span class=\"hljs-number\">0</span>)\n      {\n         chieurong = a;\n         chieucao = b;\n      }\n      <span class=\"hljs-comment\">// ham pure virtual</span>\n      <span class=\"hljs-function\"><span class=\"hljs-keyword\">virtual</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">dientich</span><span class=\"hljs-params\">()</span> </span>= <span class=\"hljs-number\">0</span>;\n};</code></pre>\n</div>\n\n<p>=0 nói cho compiler rằng hàm đó không có phần thân và hàm virtual trên sẽ được gọi là hàm&nbsp;pure virtual function&nbsp;trong C++..</p>\n\n<div>Trên đây là bài viết của eLib.VN về tính đa hình trong C++.&nbsp;Hy vọng là bài viết có ích với mọi người.</div>\n\n\n\n\n\n\n\n\n\n              "
}