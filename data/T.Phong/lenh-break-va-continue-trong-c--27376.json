{
    "chapter": "Câu Lệnh Điều Khiển C++",
    "title": "Lệnh break và continue trong C++",
    "desicription": "Lệnh break và continue là các lệnh kiểm soát vòng lặp, 2 lệnh này cho phép chúng ta quản lý và làm việc với vòng lặp trở nên hiệu quả hơn. Trong bài viết dưới đây, eLib.VN sẽ cùng các bạn độc giả tìm hiểu về lệnh break, lệnh continue.",
    "img": "https://www.elib.vn/images/doc/2020/20201027//thumb/600x254/lenh-break-va-continue-trong-c-307.jpg",
    "content": "\n              <div id=\"1\">\n<div id=\"1\">\n<h2>1.&nbsp;Câu lệnh break trong C++&nbsp;</h2>\n</div>\n</div>\n\n<p>Câu lệnh break trong C++&nbsp;có hai cách sử dụng như sau:</p>\n\n<ul>\n\t<li>Khi gặp câu lệnh&nbsp;break&nbsp;trong một vòng lặp, vòng lặp bị kết thúc ngay lập tức và câu lệnh kế tiếp sau vòng lặp được thực thi.</li>\n\t<li>Lệnh break có thể được sử dụng để kết thúc một case trong câu lệnh switch.</li>\n</ul>\n\n<p>Nếu bạn sử dụng vòng lặp lồng nhau, câu lệnh break sẽ dừng việc thực hiện vòng lặp trong cùng và bắt đầu thực hiện cấu lệnh kế tiếp sau vòng lặp trong cùng.</p>\n\n<p id=\"goto-h2-1\"><strong>Cú pháp</strong></p>\n\n<p>Cú pháp cho một câu lệnh&nbsp;break&nbsp;trong C++ như sau:</p>\n\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">break</span>;\n</code></pre>\n\n<div>\n<div id=\"highlighter_904\">\n<div>\n<div>\n<div id=\"highlighter_485296\"><strong>Ví dụ</strong></div>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n  \n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span> <span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-keyword\">int</span> a = <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-keyword\">while</span>( a &lt; <span class=\"hljs-number\">20</span> ) {  \n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Gia tri cua a: \"</span> &lt;&lt; a &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n        a++;\n   \n        <span class=\"hljs-keyword\">if</span>( a &gt; <span class=\"hljs-number\">15</span>) {\n            <span class=\"hljs-comment\">/* ket thuc vong lap khi a lon hon 15 */</span>\n            <span class=\"hljs-keyword\">break</span>;\n        }\n    }\n  \n   <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\nKết quả:</div>\n</div>\n</div>\n\n<div>\n<pre><code class=\"language-cpp hljs\">Gia tri cua a: <span class=\"hljs-number\">10</span>\nGia tri cua a: <span class=\"hljs-number\">11</span>\nGia tri cua a: <span class=\"hljs-number\">12</span>\nGia tri cua a: <span class=\"hljs-number\">13</span>\nGia tri cua a: <span class=\"hljs-number\">14</span>\nGia tri cua a: <span class=\"hljs-number\">15</span></code></pre>\n</div>\n</div>\n</div>\n\n<div id=\"2\">\n<h2>2.&nbsp;Câu lệnh continue trong C++</h2>\n</div>\n\n<p>Câu lệnh continue trong C++&nbsp;hoạt động giống như câu lệnh break. Thay vì buộc kết thúc vòng lặp, nó buộc trở về kiểm tra điều kiện để thực hiện vòng lặp tiếp theo và bỏ qua các lệnh bên trong vòn lặp hiện tại sau lệnh continue.</p>\n\n<p>Đối với vòng lặp for, câu lệnh continue làm cho điều khiển chương trình tăng hoặc giảm biến đếm của vòng lặp. Đối với vòng lặp while và do-while, câu lệnh continue làm cho điều khiển chương trình quay về đầu vòng lặp và kiểm tra điều kiện của vòng lặp.</p>\n\n<p id=\"goto-h2-1\"><strong>Cú pháp</strong></p>\n\n<div>\n<div id=\"highlighter_292118\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-keyword\">continue</span>;</code></pre>\n</div>\n</div>\n</div>\n\n<p><strong>Ví dụ&nbsp;</strong></p>\n\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n  \n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span> <span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-keyword\">int</span> a = <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-keyword\">do</span> {\n        <span class=\"hljs-keyword\">if</span>( a == <span class=\"hljs-number\">15</span>) {\n            <span class=\"hljs-comment\">// quay ve do khi a = 15 (bo qua lenh print)</span>\n            a = a + <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">continue</span>;\n        }\n   \n        <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Gia tri cua a: \"</span> &lt;&lt; a &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n        a++;\n    \n    } <span class=\"hljs-keyword\">while</span>( a &lt; <span class=\"hljs-number\">20</span> );\n  \n   <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n\n<p>Kết quả:</p>\n\n<div>\n<pre><code class=\"language-cpp hljs\">Gia tri cua a: <span class=\"hljs-number\">10</span>\nGia tri cua a: <span class=\"hljs-number\">11</span>\nGia tri cua a: <span class=\"hljs-number\">12</span>\nGia tri cua a: <span class=\"hljs-number\">13</span>\nGia tri cua a: <span class=\"hljs-number\">14</span>\nGia tri cua a: <span class=\"hljs-number\">16</span>\nGia tri cua a: <span class=\"hljs-number\">17</span>\nGia tri cua a: <span class=\"hljs-number\">18</span>\nGia tri cua a: <span class=\"hljs-number\">19</span></code></pre>\n</div>\n</div>\n\n<p>Trên đây là bài viết của eLib.VN về&nbsp;Lệnh break và continue trong C++. Trong vòng lặp, lệnh&nbsp;break&nbsp;và&nbsp;continue&nbsp;khi xuất hiện thì sẽ được bao bọc bởi một khối lệnh&nbsp;if, bởi vì nếu không có lệnh&nbsp;if&nbsp;bao bọc thì vòng lặp sẽ trở nên vô dụng. Bạn đọc cần lưu ý.</p>\n\n\n\n\n\n\n\n\n\n              "
}