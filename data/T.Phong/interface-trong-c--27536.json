{
    "chapter": "C++ Lớp Object",
    "title": "Interface trong C++",
    "desicription": "Interface trong C++ được triển khai bởi sử dụng các Lớp trừu tượng (Abstract class) và những lớp trừu tượng này không nên bị nhầm lẫn với Trừu tượng hóa dữ liệu, mà là một khái niệm của việc giữ Implementation Detail phân biệt với dữ liệu được liên kết. Để tìm hiểu rõ hơn về Interface trong C++, mời bạn đọc cùng eLib.VN tham khảo bài viết dưới đây.",
    "img": "https://www.elib.vn/images/doc/2020/20201028//thumb/600x254/interface-trong-c-854.jpg",
    "content": "\n              <div id=\"1\">\n<h2 id=\"goto-h2-1\">1. Interface trong C++</h2>\n</div>\n\n<p>Một Interface miêu tả hành vi hoặc khả năng của một lớp trong C++ mà không ký thác tới một trình triển khai cụ thể của lớp đó.</p>\n\n<p>Interface trong C++ được triển khai bởi sử dụng các&nbsp;Lớp trừu tượng (Abstract class)&nbsp;và những lớp trừu tượng này không nên bị nhầm lẫn với Trừu tượng hóa dữ liệu, mà là một khái niệm của việc giữ Implementation Detail phân biệt với dữ liệu được liên kết.</p>\n\n<p>Một lớp được tạo là abstract bằng việc khai báo ít nhất một lần các hàm của nó là hàm&nbsp;pure virtual. Một hàm pure virtual được xác định bằng việc đặt \"= 0\" trong khai báo của nó, như sau:</p>\n\n<div>\n<div>\n<div id=\"highlighter_630570\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Box</span>\n{</span>\n   <span class=\"hljs-keyword\">public</span>:\n      <span class=\"hljs-comment\">// khai bao pure virtual function</span>\n      <span class=\"hljs-function\"><span class=\"hljs-keyword\">virtual</span> <span class=\"hljs-keyword\">double</span> <span class=\"hljs-title\">tinhTheTich</span><span class=\"hljs-params\">()</span> </span>= <span class=\"hljs-number\">0</span>;\n   <span class=\"hljs-keyword\">private</span>:\n      <span class=\"hljs-keyword\">double</span> chieudai;      <span class=\"hljs-comment\">// Chieu dai cua mot box</span>\n      <span class=\"hljs-keyword\">double</span> chieurong;     <span class=\"hljs-comment\">// Chieu rong cua mot box</span>\n      <span class=\"hljs-keyword\">double</span> chieucao;      <span class=\"hljs-comment\">// Chieu cao cua mot box</span>\n};\n</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Mục đích của một&nbsp;Lớp trừu tượng&nbsp;(thường gọi tắt là ABC) là để cung cấp một lớp cơ sở thích hợp để từ đó các lớp khác có thể kế thừa. Các lớp trừu tượng không thể được sử dụng để khởi tạo các đối tượng và chỉ phục vụ như là một&nbsp;Interface. Nỗ lực để khởi tạo một đối tượng của một lớp trừu tượng trong C++ sẽ tạo ra một lỗi biên dịch (compilation error).</p>\n\n<p>Vì thế, nếu một lớp phụ của một ABC cần được khởi tạo, nó phải triển khai các hàm virtual, nghĩa là nó hỗ trợ Interface được khai báo bởi ABC. Thất bại trong việc ghi đè một hàm pure virtual trong một lớp kế thừa, thì việc nỗ lực để khởi tạo các đối tượng của lớp đó, là một lỗi biên dịch.</p>\n\n<p>Các lớp, mà có thể được sử dụng để khởi tạo đối tượng, được gọi là&nbsp;Concrete Class&nbsp;trong C++.</p>\n\n<div id=\"2\">\n<h2>2. Ví dụ về Lớp trừu tượng trong C++</h2>\n</div>\n\n<p>Bạn xem xét ví dụ sau: lớp cha cung cấp một Interface tới lớp cơ sở để triển khai một hàm&nbsp;tinhDienTich()&nbsp;trong C++:</p>\n\n<div>\n<div>\n<div id=\"highlighter_58878\">\n<div>\n<pre><code class=\"language-cpp hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-comment\">// day la lop co so (base class)</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Hinh</span>\n{</span>\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-comment\">// khai bao pure virtual function</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">virtual</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">tinhDienTich</span><span class=\"hljs-params\">()</span> </span>= <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setChieuRong</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> rong)</span>\n    </span>{\n        chieurong = rong;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setChieuCao</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> cao)</span>\n    </span>{\n        chieucao = cao;\n    }\n<span class=\"hljs-keyword\">protected</span>:\n    <span class=\"hljs-keyword\">int</span> chieurong;\n    <span class=\"hljs-keyword\">int</span> chieucao;\n};\n\n<span class=\"hljs-comment\">// cac lop ke thua</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">HinhChuNhat</span> :</span> <span class=\"hljs-keyword\">public</span> Hinh\n{\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">tinhDienTich</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> (chieurong * chieucao);\n    }\n};\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TamGiac</span> :</span> <span class=\"hljs-keyword\">public</span> Hinh\n{\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">tinhDienTich</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">return</span> (chieurong * chieucao) / <span class=\"hljs-number\">2</span>;\n    }\n};\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span>)</span>\n</span>{\n    HinhChuNhat hcn;\n    TamGiac  tg;\n\n    hcn.setChieuRong(<span class=\"hljs-number\">20</span>);\n    hcn.setChieuCao(<span class=\"hljs-number\">12</span>);\n    <span class=\"hljs-comment\">// in dien tich cua doi tuong</span>\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Tong dien tich HinhChuNhat la: \"</span> &lt;&lt; \n        hcn.tinhDienTich() &lt;&lt; <span class=\"hljs-built_in\">endl</span>;  \n\n    tg.setChieuRong(<span class=\"hljs-number\">30</span>);\n    tg.setChieuCao(<span class=\"hljs-number\">15</span>);\n    <span class=\"hljs-comment\">// in dien tich cua doi tuong.</span>\n    <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Tong dien tich TamGiac la: \"</span> &lt;&lt;\n        tg.tinhDienTich() &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n\n<p>Biên dịch và chạy chương trình C++ trên sẽ cho kết quả sau:</p>\n\n<p style=\"text-align: center;\"><img alt=\"\" src=\"https://s.elib.vn/images/fckeditor/upload/2020/20201028/images/interface-trong-c-_1603879992.png\" style=\"width: 496px; height: 90px;\"></p>\n\n<p>Bạn có thể thấy cách một lớp trừu tượng định nghĩa một Interface với hàm tinhDienTich() này và hai lớp khác triển khai cùng một hàm nhưng với thuật toán khác nhau để tính toán diện tích cụ thể cho hình.</p>\n\n<div id=\"3\">\n<h2 id=\"goto-h2-3\">3. Chiến lược thiết kế trong C++</h2>\n</div>\n\n<p>Một hệ thống hướng đối tượng có thể sử dụng một lớp cơ sở để cung cấp một Interface chung và chuẩn hóa thích hợp cho tất cả các ứng dụng ngoại vi. Vì thế, thông qua kế thừa từ lớp cơ sở trừu tượng đó, các lớp kế thừa được thiết lập theo cách tương tự.</p>\n\n<p>Các khả năng (ví dụ: các hàm public), được cung cấp bởi các ứng dụng ngoại vi, được cung cấp ở dạng các hàm pure virtual trong lớp cơ sở trừu tượng. Trình triển khai của các hàm pure virtual này được cung cấp trong các lớp kế thừa tương ứng với các kiểu ứng dụng cụ thể.</p>\n\n<p>Trên đây là bài viết của eLib.VN về Interface trong C++.&nbsp;Hy vọng qua bài viết, các bạn&nbsp;biết được cú pháp và sử dụng interface trong C++ phù hợp. Chúc các bạn thành công.</p>\n\n<div class=\"quiz\" style=\"background-color: rgb(250, 239, 195); padding:10px\">\n<p><span style=\"background-color: rgb(250, 239, 195);\">Như vậy là chúng ta đã hoàn thành nội dung&nbsp;<strong>\"C++ Lớp Object</strong></span><strong style=\"background-color: rgb(250, 239, 195);\"><strong>\"</strong></strong><span style=\"background-color: rgb(250, 239, 195);\">. Để củng cố và nắm vững nội dung đã học, mời bạn cùng thử sức với&nbsp;</span><a href=\"https://tracnghiem.net/cntt/400-cau-hoi-trac-nghiem-lap-trinh-c-c-co-dap-an-va-loi-giai-chi-tiet-107.html\" style=\"background-color: rgb(250, 239, 195);\"><strong>\"Bộ Câu hỏi</strong></a><a href=\"https://tracnghiem.net/cntt/400-cau-hoi-trac-nghiem-lap-trinh-c-c-co-dap-an-va-loi-giai-chi-tiet-107.html\" style=\"background-color: rgb(250, 239, 195);\">&nbsp;</a><strong style=\"background-color: rgb(250, 239, 195);\"><a href=\"https://tracnghiem.net/cntt/400-cau-hoi-trac-nghiem-lap-trinh-c-c-co-dap-an-va-loi-giai-chi-tiet-107.html\">Trắc Nghiệm C++ có đáp án chi tiết\"</a></strong></p>\n\n<p style=\"text-align:center\"><a class=\"btn btn-tracnghiem\" href=\"https://tracnghiem.net/cntt/400-cau-hoi-trac-nghiem-lap-trinh-c-c-co-dap-an-va-loi-giai-chi-tiet-107.html\" target=\"_blank\"><span>Trắc Nghiệm</span></a></p>\n</div>\n\n\n\n\n\n\n\n\n\n              "
}