[{"ten_noi_dung": "Constructor trong C++", "ten_muc": "Constructor trong C++ ", "noi_dung": "Constructor trong C++ là một phương thức đặc biệt được gọi tự động tại thời điểm tạo đối tượng. Nó được sử dụng để khởi tạo các thành viên dữ liệu của các đối tượng mới. Constructor trong C++ có cùng tên với lớp hoặc struct.\nConstructor trong C++ có thể được chia thành 2 loại:\n\tConstructor mặc định.\n\tConstructor có tham số.\n", "media": [], "code": [], "table": []}, {"ten_noi_dung": "Constructor trong C++", "ten_muc": "Constructor mặc định trong C++", "noi_dung": "Một constructor không có đối số được gọi là constructor mặc định. Nó được gọi tại thời điểm tạo đối tượng.\nVí dụ về Constructor mặc định trong C++:\n|code|\nKết quả:\n|code|\n", "media": [], "code": [{"": "\n#include <iostream>\n\nusing namespace std;\n\nclass Employee {\npublic:\n    Employee() {\n        cout << \"Constructor mac dinh duoc goi...\" << endl;\n    }\n};\n\nint main(void) {\n    Employee e1; //tao doi tuong Employee\n    Employee e2;\n    return 0;\n}\n"}, {"": "\nConstructor mac dinh duoc goi...\nConstructor mac dinh duoc goi...\n"}], "table": []}, {"ten_noi_dung": "Constructor trong C++", "ten_muc": "Constructor có tham số trong C++", "noi_dung": "Một constructor có tham số được gọi là constructor tham số hóa. Nó được sử dụng để cung cấp các giá trị khác nhau cho các đối tượng riêng biệt.\nVí dụ về Constructor tham số trong C++:\n|code|\nKết quả:\n|code|\n", "media": [], "code": [{"": "\n#include <iostream>\n\nusing namespace std;\n\nclass Employee {\npublic:\n    int id; // data member (bien instance)\n    string name; // data member(bien instance)\n    float salary;\n    Employee(int i, string n, float s)\n    {\n        id = i;\n        name = n;\n        salary = s;\n    }\n    void display() { cout << id << \"  \" << name << \"  \" << salary << endl; }\n};\n\nint main(void) {\n    Employee e1 = Employee(101, \"Phan Van Vinh\", 500); // tao doi tuong Employee\n    Employee e2 = Employee(102, \"Dao Van Hoa\", 1000);\n    e1.display();\n    e2.display();\n    return 0;\n}\n"}, {"": "\n101  Phan Van Vinh  500\n102  Dao Van Hoa  1000\n"}], "table": []}, {"ten_noi_dung": "Hằng số trong C++", "ten_muc": "Danh sách hằng số trong C++", "noi_dung": "|table|\n", "media": [], "code": [], "table": [{"": {"Hằng số (Constant)": ["Hằng số thập phân", "Hằng số thực hoặc số thực dấu phảy động", "Hằng số Octal", "Hằng số Hexadecimal", "Hằng số ký tự", "Hằng số chuỗi String"], "Ví dụ": ["10, 20, 450, vv.", "10.3, 20.2, 450.6, vv.", "021, 033, 046, vv.", "0x2a, 0x7b, 0xaa, vv.", "'a', 'b', 'x', vv.", "\"c\", \"c++ program\", vv."]}}]}, {"ten_noi_dung": "Hằng số trong C++", "ten_muc": "Sử dụng từ khóa const trong C++", "noi_dung": "Từ khóa const được sử dụng để định nghĩa hằng số trong lập trình C++.\n|code|\nBây giờ, giá trị của biến PI không thể thay đổi.\n|code|\nKết quả:\n|code|\nNếu bạn cố gắng thay đổi giá trị của PI, nó sẽ hiển thị lỗi thời gian biên dịch.\n|code|\nKết quả:\n|code|\n\n*Chú ý: *p có thể trỏ tới vùng nhớ khác.\n\n              \n", "media": [], "code": [{"": "\nconst float PI = 3.14;\n"}, {"": "\n#include <iostream>\n\nusing namespace std;\n\nint main() {\n    const float PI = 3.14;\n    cout << \"Gia tri PI = \" << PI;\n    return 0;\n}\n"}, {"": "\nGia tri PI = 3.14\n"}, {"": "\n#include <iostream>\n\nusing namespace std;\n\nint main() {\n    const float PI = 3.14;\n    PI = 100;\n    cout << \"Gia tri PI = \" << PI;\n    return 0;\n}\n"}, {"": "\n[Error] assignment of read-only variable 'PI'\n"}], "table": []}, {"ten_noi_dung": "Struct trong C++", "ten_muc": "Ví dụ về cấu trúc C++: Sử dụng phương thức và Constructor", "noi_dung": "Ví dụ sau sử dụng Struct nơi mà khởi tạo dữ liệu và phương thức để tính diện tích hình chữ nhật.\n|code|\nKết quả:\n|code|\nTrên đây là bài viết của eLib.VN về Struct trong C++. Hy vọng, sau khi đọc xong bài viết, các bạn biết cách sử dụng struct trong C++, phân biệt được điểm giống nhau và khác nhau giữa struct và lớp trong C++. Chúc các bạn thành công.\n              \n", "media": [], "code": [{"": "\n#include <iostream>\nusing namespace std;\nstruct Rectangle {\n    int width, height;\n    Rectangle(int w, int h) {\n        width = w;\n        height = h;\n    }\n    void areaOfRectangle() {\n        cout << \"Dien tich hinh chu nhat la: \" << (width * height);\n    }\n};\n\nint main(void) {\n    struct Rectangle rec = Rectangle(4, 10);\n    rec.areaOfRectangle();\n    return 0;\n}\n"}, {"": "\nDien tich hinh chu nhat la: 40\n"}], "table": []}]